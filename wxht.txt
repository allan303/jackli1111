项目事件

BeforeLoadOuterTable

If e.User.Type = UserTypeEnum.User
    If e.DataTableName = "crmcustomermanage"
        e.Cancel = True
    End If
End If

Initialize

'全局表事件打开
For Each dt As DataTable In DataTables
    dt.GlobalHandler.PrepareEdit = True
    dt.GlobalHandler.StartEdit = True
    dt.GlobalHandler.DataRowAdded = True
    dt.GlobalHandler.DataRowLockedChanging = True
    dt.GlobalHandler.BeforeDeleteDataRow = True
    dt.GlobalHandler.DataColChanged = True
    dt.GlobalHandler.DataColChanging = True
    dt.GlobalHandler.AfterEdit = True
Next

AfterOpenProject

If Syscmd.Project.Update(False, True) = False
    If user.Type = UserTypeEnum.User
        Forms("用户登录").Open()
        If _UserName = "" Then
            Syscmd.Project.Exit()
            Return '这个要加上,因为既然要退出,就不应该再执行后面的初始化代码了,否则会出错
        End If
    End If
    
    
    ''全部窗口和控件的字体
    Dim x As New Font("微软雅黑",9,FontStyle.Regular)
    '菜单设计中功能组的字体和颜色
    For Each r As object In BaseMainForm.controls
        r.Font = x
    Next
    '
    
    '背景色设置为白色
    For Each t As DataTable In DataTables
        t.SysStyles("EmptyArea").BackColor = Color.white
    Next
    
    '全局表事件打开
    For Each dt As DataTable In DataTables
        dt.GlobalHandler.DataRowAdded = True
        dt.GlobalHandler.DataRowLockedChanging = True
        dt.GlobalHandler.BeforeDeleteDataRow = True
        dt.GlobalHandler.DataColChanged = True
        dt.GlobalHandler.DataColChanging = True
        dt.GlobalHandler.AfterEdit = True
        dt.GlobalHandler.PrepareEdit = True
        dt.GlobalHandler.DoubleClick = True
    Next
    
    For Each tb As Table In Tables
        tb.AllowDragColumn = False
        tb.AllowResizeRow = False
        tb.AutoSizeCols()
        tb.AllowBackgroundStatistics = False
        tb.ExtendLastCol = True
    Next
    Tables("工作日志").Cols("日志内容").Width = 650
    
    _host = "121.196.217.52"
    _ftpus = "tmfftp"
    _ftppwd = "Porex321"
End If

LoadUserSetting

If User.Type = UserTypeEnum.User
    For Each t As Table In Tables
        t.Visible = False
        t.Cols("添加时间").AllowEdit = False
        t.Cols("用户名").AllowEdit = False
        t.Cols("修改时间").AllowEdit = False
        t.Cols("添加时间").visible = False
        t.Cols("用户名").visible = False
        t.Cols("修改时间").visible = False
    Next
    DataTables("模块分配").DataCols("表名").AllowEdit = False
    DataTables("模块分配").DataCols("隐藏").AllowEdit = False

    TableCaptionVisible = False
    
Else
    For Each t As Table In Tables
        t.Visible = True
        t.Cols("添加时间").AllowEdit = True
        t.Cols("用户名").AllowEdit = True
        t.Cols("修改时间").AllowEdit = True
    Next
    TableCaptionVisible = True
End If

'提取用户表
Dim cmd1 As New SQLCommand
cmd1.ConnectionName = "TMFGROUP"
cmd1.CommandText = "SELECT * From {Users}"
_UserTable = cmd1.ExecuteReader(True)
'项目ID设置
_pjID = "a2a67f789eb44468b828fb4fe6da834a"

MainTableChanged

'授权表自动合并及获得用户名称列表
Select Case MainTable.name
    
        '用户管理自动刷新
    Case "users"
        DataTables("users").dataCols("Name").RaiseDataColChanged
    Case "在线系统设计"
        With Tables("在线系统设计")
            If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False AndAlso _UserRole.Contains("后台管理") = False
                .Filter = "[用户名] ='" & _UserName & "'"
                .Position = .Rows.Count -1
            Else
                .Filter = ""
                .Position = .Rows.Count -1
            End If
        End With
    Case "项目管理"
        Tables("项目管理").Filter = "[阶段] <> '投运'"
    Case "网盘"
        Forms("TMFGROUP网盘").Open()
        Dim wb As WinForm.WebBrowser = Forms("TMFGROUP网盘").Controls("WebBrowser1")
        wb.Address = "http://watermembrane.cn:8000/"
    Case "发票汇总"
        
        DataTables("发票汇总").DeleteFor("")
        
        Dim bxbh As new List(of String)
        bxbh = DataTables("发票明细").GetValues("报销编号","报销编号 is not null","报销编号 DESC")
        If bxbh.Count > 0
            DataTables("发票汇总").AddNew(bxbh.Count)
            For i As Integer = 0 To bxbh.Count - 1
                For Each co As DataCol In DataTables("发票汇总").DataCols
                    Select Case co.name
                        Case "住宿","出租车","大巴","电话","过路","火车","机票","加油","快递","停车","招待","办公用品","用户名","物流","会务费","其他"
                            DataTables("发票汇总").DataRows(i)(co.name) = DataTables("发票明细").Compute("SUM([金额])","报销编号 = '" & bxbh(i) & "' and 费用类型 = '" & co.name & "'")
                    End Select
                Next
                DataTables("发票汇总").DataRows(i)("报销编号") = bxbh(i)
                DataTables("发票汇总").DataRows(i)("报销人员") = DataTables("发票明细").Find("报销编号 = '" & bxbh(i) & "'" )("报销人员")
                DataTables("发票汇总").DataRows(i)("报销日期") = DataTables("发票明细").Find("报销编号 = '" & bxbh(i) & "'" )("报销日期")
                DataTables("发票汇总").DataRows(i)("合计") =  DataTables("发票明细").Compute("SUM([金额])","报销编号 = '" & bxbh(i) & "'")
            Next
        End If
        Forms("发票汇总").open()
    Case "授权"
        Forms("授权设置").open()
    Case "权限字段管理"
        Forms("权限字段管理").Open
        
        
End Select

SystemIdle

If user.Type <> UserTypeEnum.User
    With CurrentTable
        Dim Str1 As String = "用户:" & user.Name
        Str1 = Str1 & " 功能区: " & .Name & " 总行数: "
        Str1 = Str1 & .Rows.Count & " 当前行: " & (.Position + 1)
        StatusBar.Message1 = Str1
    End With
    
ElseIf user.Type = UserTypeEnum.User
    If _UserRole.Contains("管理者")
        
        With CurrentTable
            Dim Str1 As String = "用户: " & _UserName
            Str1 = Str1 & " 功能区: " & .Name & " 总行数: "
            Str1 = Str1 & .Rows.Count & " 当前行: " & (.Position + 1) & "; "
            Str1 = Str1 & "授权截止日期:" & _enddate
            StatusBar.Message1 = Str1
        End With
    Else
        With CurrentTable
            Dim Str1 As String = "用户: " & _UserName
            Str1 = Str1 & " 功能区: " & .Name & " 总行数: "
            Str1 = Str1 & .Rows.Count & " 当前行: " & (.Position + 1)
            StatusBar.Message1 = Str1
        End With
    End If
End If

BeforeCloseProject

For Each dt As DataTable In DataTables
    dt.Save
Next

BeforeShowErrorMessage

Functions.Execute("LogText",e.ex)
e.Cancel = True

Server_UserLogging

'Dim pts() As String = e.UserName.Split(".")
'Dim dr1 As DataRow = DataTables("users").SQLFind("group = '" & pts(0) & "' And name = '" & pts(1) & "'")
'If dr1 Is Nothing  Then '判断此用户不存在
    'e.Message  = "用户名错误!" '返回给登录者的提示信息
    'Return
'End If
'If dr1("password") <> Functions.Execute("解密密码",e.Password) Then '如果密码错误
    'e.Message  = "登录密码错误!" '返回给登录者的提示信息
    'Return
'End If
'e.Success = True '允许用户登录
''添加所有同事为好友
'For Each dr2 As DataRow In DataTables("users").DataRows
    'Dim nm As String =  dr2("group") & "." & dr2("name")
            'e.Buddies.Add(nm)
'Next

Server_ReceivedMessage

'If e.Message = "GetDate" Then
    'e.ReturnValue = Date.Now
'End If
'
''Dim msg As String = e.Message
''If msg.StartsWith(":g") AndAlso msg.EndsWith("g:") Then
    'msg = msg.SubString(2, msg.Length - 4)
    'If flbhs.ContainsKey(msg) Then '如果存在这个月的编号
        'flbhs(msg) = flbhs(msg) + 1 '将该月最大编号加1
    'Else
        'flbhs.Add(msg,1) '如果这个月的首次编号,则编号等于1
    'End If
    'e.ReturnValue = flbhs(msg)
'End If

Server_UserChangePassword

'Dim pts() As String = e.UserName.Split(".")
'Dim dr As DataRow = DataTables("users").Find("Group = '" & pts(0) & "' And name = '" & pts(1) & "'")
'If dr Is Nothing  OrElse dr("password") <> e.OldPassword  Then
   'e.ReturnMessage = "原密码不符!"
'Else
    'dr("password") = e.NewPassword
    'dr.Save()
   'e.ReturnMessage = "OK" '返回约定的字符,通知客户端,密码修改成功
'End If

Connected

'ConfigBar.Items("OpenQQ").SmallImage = GetImage("online.ico")

Disconnected

'ConfigBar.Items("OpenQQ").SmallImage = GetImage("offline.ico")

Client_ReceivedMessage

'Dim dr As DataRow
'dr = DataTables("信息").AddNew()
'dr("发送者") = iif(e.UserName > "",e.UserName,"服务器")
'dr("时间") = Date.Now()
'dr("信息") = e.Message

Client_UserChangePassword

'Forms("修改用户密码").Show()

HttpRequest

''Select Case e.path
''Case ""
''Functions.Execute("WX_接受各类消息响应",e)
''End Select
'
''通用事件头
'Dim fl As String =  "C:\web\" & e.path
'If filesys.FileExists(fl)
    'Dim idx As Integer = fl.LastIndexOf(".")
    'Dim ext As String  = fl.SubString(idx)
    'Select Case ext
        'Case ".jpg",".gif",".png",".bmp",".wmf",".js",".css" ,".html",".htm",".zip",".rar",".txt"
            'e.WriteFile(fl)
            'Return '这里必须返回
    'End Select
'End If
'
'Dim wb As new WeUI
'Select Case e.Path
    '
    'Case "test.htm"
        'wb.AppendHTML("<link rel='stylesheet' href='./lib/miniui.css'/>",True)
        'wb.AppendHTML("<script src='./lib/jquery.min.js'></script>",True)
        'wb.AppendHTML("<script src='./lib/miniui.js'></script>",True)
        'Dim div As String = FileSys.ReadAllText("c:\web\lib\编辑.txt")
        'wb.InsertHTML(div)
        'wb.AppendHTML("<script src='./lib/bji.js'></script>")
        '
        'e.WriteString(wb.Build)
    'Case "getdata.htm"
        'Dim json As String = FileSys.ReadAllText("c:\web\lib\data3.txt")
        'e.WriteString(json)
        '
    'Case ""
        'e.WriteFile("C:\web\default.html")
        ''Dim dr As DataRow = DataTables("工作日志").AddNew
        ''dr("日志内容") =
        'e.WriteFile("C:\web\boost.html")
        '
    'Case "tmf.html"
        'Functions.Execute("tmf",wb,e)
    'Case "tmfreport.html"
        'Functions.Execute("tmfreport",wb,e)
    'Case "excelreport.html"
        'Functions.Execute("excelreport",e,wb)
        ''过滤精度提示的网址,通过js引用此处数据
    'Case "getgljd.html"
        'Dim y As String = DataTables("辅助").Find("处理目的 = '" & e.PostValues("处理目的") & "'")("推荐过滤精度")
        'y = "推荐过滤精度为" & y & "微米"
        'e.WriteString(y)
        ''产品规格提示的网址,建议通量提示,通过js引用此处数据
    'Case "gettmftj.html"
        'Functions.Execute("gettmftj",e)
    'Case "ceshi.html"
        'With wb.AddTable("","Table1")
            'Dim nms() As String  = "合同日期,相关项目,客户,订单编号,合同金额,金额大写,备注".Split(",")
            '.CreateFromDataTable(DataTables("订单管理"),False,"","合同日期",nms)
            '.Highlight = 1
        'End With
        'e.WriteString(wb.Build)
    'Case Else
        'e.WriteString("404 NOT FOUND")
        ''Case "project"
        ''Dim page As Integer = 0 '默认page为0,显示第一页
        ''Dim pageRows As Integer = 15 '每页15行
        ''If e.GetValues.ContainsKey("page") Then  '如果地址中有page参数
        ''Integer.TryParse(e.GetValues("page"), page) '提取page参数
        ''End If
        ''Dim StartRow As Integer = page * pageRows + 1 '此页第一行
        ''Dim EndRow As Integer = (page + 1) * pageRows '此页最后一行
        ''
        '''获取该页数据
        ''Dim cmd As New SQLCommand
        ''cmd.ConnectionName = "TMFGROUP" '记得设置数据源名称
        ''cmd.CommandText = "Select Count(*) From {项目管理}"
        ''Dim Count As Integer = cmd.ExecuteScalar() '获取总的行数
        ''cmd.CommandText = "Select * From (Select Row_Number() Over(Order by 添加日期) As [NO.],业主,工程公司,行业,废水类型 From 项目管理)"
        ''cmd.CommandText = cmd.CommandText & "  Where [NO.]>= " & StartRow & " And [NO.] <= " & EndRow
        ''Dim dt As DataTable = cmd.ExecuteReader
        ''With wb.AddTable("","project")
        ''.Highlight = 1
        ''.CreateFromDataTable(dt)
        ''End With
        ''With wb.AddButtonGroup("","btg2", False)
        ''If page > 0 Then
        ''.Add("btnPrev", "上一页","","List.htm?page=" & page - 1)
        ''End If
        ''If Endrow < count Then
        ''.Add("btnNext", "下一页","","List.htm?page=" & page + 1)
        ''End If
        ''End With
        ''e.WriteString(wb.Build)
'End Select
'
'
'
''Dim Verified As Boolean '用于标记用户是否通过了身份验证
''Dim UserName As String = e.Cookies("username") '从cookie中获取用户名
''Dim Password As String = e.Cookies("password") '从cookie中获取用户密码
''If e.Path = "login" '如果是通过登录页面访问,从PostValues即可中提取用户名和密码
''If e.PostValues.ContainsKey("username") AndAlso e.PostValues.ContainsKey("password")  Then
''UserName = e.PostValues("username")
''Password = e.PostValues("password")
''End If
''End If
''If DataTables("users").Find("name ='" & UserName & "' And password = '" & password & "'") IsNot Nothing
''Verified  = True
''End If
''If Verified = True AndAlso e.Path = "login"  Then '如果用户访问的是登录页,且身份验证成功
''wb.AppendCookie("username",UserName) '将用户名和密码写入cookie
''wb.AppendCookie("password",Password)
''wb.InsertHTML("<meta http-equiv='Refresh' content='0; url=/crm'>") '直接跳转到首页
''e.WriteString(wb.Build) '生成网页
''Return '必须的
''Else If Verified = False AndAlso e.Path <> "login" Then '如果用户身份验证失败,且访问的不是登录页面
''wb.InsertHTML("<meta http-equiv='Refresh' content='0; url=/login'>") '那么直接跳转到登录页面
''e.WriteString(wb.Build) '生成网页
''Return '必须的
''End If
'''开始生成网页
''
''Select Case e.Path
''Case "login" '登录页面
''wb.AddPageTitle("","pageheader","TMF管理系统","POREX Jack Li")
''If e.PostValues.ContainsKey("username") AndAlso e.PostValues.ContainsKey("password")  Then '判断是否是验证失败后的重新登录
''wb.AddTopTips("","toptip1","用户名或密码错误!").msec = 2000 '如果用户通过登录按钮访问,则给用户一个2秒的提示.
''End If
''wb.AddForm("","form1","login")
''With wb.AddInputGroup("form1","ipg1")
''.AddInput("username","户名","text")
''.AddInput("password","密码","password")
''End With
''With wb.AddButtonGroup("form1","btg1",True)
''.Add("btn1", "登录", "submit")
''End With
''e.WriteString(wb.Build)
''Case "exit" '退出登录
''wb.DeleteCookie("username") '清除cookie中原来的用户名和密码
''wb.DeleteCookie("password")
''wb.InsertHTML("<meta http-equiv='Refresh' content='0; url=/login'>") '那么直接跳转到登录页面
''
''Case "crm"
''wb.AddPageTitle("","pageheader","TMF GROUP","POREX")
''With wb.AddGrid("","grid1")
''.Add("c1","日志","/images/daily2.png","/daily")
''.Add("c2","项目", "./images/project.png", "/project")
''.Add("c3","客户", "./images/company.png", "/account")
''.Add("c4","联系人", "./images/contact1.png", "/contact")
''.Add("c5","订单/报价", "./images/order.png", "/order")
''.Add("c6","报销", "./images/money.png", "/invoice")
''.Add("c7","退出", "./images/exit.png", "/exit")
''End With
''End Select
''e.WriteString(wb.Build)

PrepareEdit

If user.Type = UserTypeEnum.User
    Select Case e.Table.DataTable.Name
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务"
            If e.Row("用户名") <> _UserName
                e.Cancel = True
            End If
        Case "产品管理","辅助","TMF产品清单"
            If _UserRole.Contains("后台管理") = False AndAlso _UserRole.Contains("管理者") = False
                e.Cancel = True
            End If
        Case Else
            If _UserRole.Contains("管理者") = False
                e.Cancel = True
            End If
    End Select
End If

If e.IsFocusCell
    Dim dr As DataRow = DataTables("字段管理").SQLFind("数据表 ='" & e.Table.DataTable.Name & "' and 选项名称 ='" & e.Col.Name & "'")
    If dr IsNot Nothing
        e.Col.ComboList = dr("选项列表")
    End If
End If

AfterEdit

If e.Table.Cols.Contains("修改时间")
    e.Row("修改时间") = Date.Now
End If

DataColChanged

Select Case e.DataTable.name
    Case "客户管理","项目管理","联系人管理"
        If e.DataCol.Name = "城市" Then
            Dim dr As DataRow
            Dim Filter As String
            Filter = "[地级市] = '" & e.DataRow("城市") & "'"
            dr = DataTables("全国城市").Find(Filter) '在行政区域表查找所输入省市和县市的行
            If dr IsNot Nothing Then '如果找到
                '将找到行的区号和邮编内容填入到正在输入的行中
                e.DataRow("省份") = dr("省或直辖市")
            Else
                '否则清除区号和邮编两列的内容
                e.DataRow("省份") = Nothing
            End If
        End If
End Select

DataRowAdded

e.DataRow("添加时间") = Date.Now
If user.Type = UserTypeEnum.User
    e.DataRow("用户名") = _UserName
End If

BeforeDeleteDataRow

'除了管理员,只能删除自己的行
    If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
        If _UserName <> e.DataRow("用户名")
            e.Cancel = True
        End If
    End If

DataRowLockedChanging

'除了管理员不能锁定
If user.Type = UserTypeEnum.User
    e.Cancel = True
End If

DoubleClick

If Forms.contains(e.Table.DataTable.Name)
    If e.Table.IsRelation = False
        If Forms(e.Table.DataTable.Name).Opened = False
            Forms(e.Table.DataTable.Name).Open
        End If
    ElseIf e.Table.IsChild
        Return
    Else
        With e.Table
            Dim r As Integer
            r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                .Position = r '定位到找到的行.
                If Forms(e.Table.DataTable.Name).opened = False
                    Forms(e.Table.DataTable.Name).Open
                End If
            End If
        End With
    End If
End If


'Dim i As Integer = .FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
'If i > -1
'With Tables("工作日志")
'.Position = i
'End With
'Forms("工作日志").open
'End If

计划管理

在线设计定期清理

'DataTables("在线系统设计").DeleteFor("[废水类型] is null Or [设计水量] Is Null or [几芯膜] Is Null OR [设计通量] Is Null") 
'DataTables("在线系统设计").load()

自动保存10分钟

DataTables.Save()

自动刷新user表

DataTables("Users").Load

表事件

BOM本地配置_StartEdit

Select Case e.Col.Name
    Case "值","备注"
        If e.Row("自定义配置") = False
            e.Cancel = True
            MessageBox.Show("请勾选'自定义配置'后再进行编辑.")
        End If
End Select

BOM本地配置_DrawCell

If e.Row("自定义配置") = True
    Select Case e.Col.Name
        Case "自定义配置","值","备注"
            e.Style = "自定义配置"
    End Select
End If

查询表客户_DoubleClick

Dim i As Integer = Tables(e.Row("数据表")).FindRow("[_Identify] ='" & e.Row("ID") & "'")
If i > -1
    With Tables(e.Row("数据表"))
        .Position = i
    End With
    Forms(e.Row("数据表")).open
End If

查询表项目_DoubleClick

Dim i As Integer = Tables(e.Row("数据表")).FindRow("[_Identify] ='" & e.Row("ID") & "'")
If i > -1
    With Tables(e.Row("数据表"))
        .Position = i
    End With
    Forms(e.Row("数据表")).open
End If

BOM_DataColChanged

Select Case e.DataCol.Name
    Case "产品系列"
        Dim dr As DataRow = DataTables("BOM字段").SQLFind("产品系列 ='" & e.DataRow("产品系列") & "'")
        If dr IsNot Nothing
            e.DataRow("中文名") = dr("系列中文名")
        End If
End Select

Users_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.name
        Case "Role"
            e.Col.ComboList = DataTables("角色定义").SQLGetComboListString("角色")
        Case "group"
            e.Col.ComboList = DataTables("组定义").SQLGetComboListString("组")
        Case "汇报对象"
            e.Col.ComboList = "无|" & DataTables("users").SQLGetComboListString("name","[group] ='" & e.Row("group") & "'")
    End Select
End If

Users_DrawCell

Select Case e.Col.name
Case "password"
e.text = "******"
End Select

Users_DoubleClick

Forms("用户管理").Open

上下级关系_DataColChanged

Select Case e.DataCol.Name
Case "上级","下级"
e.DataRow("去重") = e.DataRow("上级") & e.DataRow("下级") 
End Select

产品管理_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        'Case "产品类型"
            'e.Col.ComboList = DataTables("辅助").GetComboListString("产品类型")
    End Select
End If

产品管理_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("产品管理").Open
'Else
    'With Tables("产品管理")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("产品管理").Open
        'End If
    'End With
'End If

侧边栏设置_DataColChanged

Select Case e.DataCol.Name
    Case "模块名称"
        If DataTables("模块分配").Find("模块名称 = '" & e.DataRow("模块名称") & "'") IsNot Nothing
            e.DataRow("排序") = DataTables("模块分配").Find("模块名称 = '" & e.DataRow("模块名称") & "'")("排序")
        End If
End Select

内部市场资料_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("内部市场资料").Open
'Else
    'With Tables("内部市场资料")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("内部市场资料").Open
        'End If
    'End With
'End If

发票明细_PrepareEdit

Select Case e.Col.Name
Case "相关项目"
e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
End Select

发票明细_DataColChanged

Select Case e.DataCol.name
    Case "报销日期","报销人员"
        If e.DataRow.IsNull("报销日期") = False And e.DataRow.IsNull("报销人员") = False
            e.DataRow("报销编号") = e.DataRow("报销人员") & e.DataRow("报销日期")
        End If
End Select

发票明细_DataRowAdding

e.DataRow("报销人员") = _UserName

e.DataRow("报销日期") = Date.Today

If DataTables("Users").Find("Name = '" & _UserName & "'") IsNot Nothing
e.DataRow("发生城市") = DataTables("Users").Find("Name = '" & _UserName & "'")("BASE城市")
End If

发票汇总_DoubleClick

Forms("记录窗口").open

字段管理_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "数据表"
            e.Col.ComboList = CurrentTable.DataTable.Find("选项名称 = '数据表名'")("选项列表")
        Case "选项名称"
            If e.Row.IsNull("数据表") = False
                Dim x As String
                For Each cl As DataCol In DataTables(e.Row("数据表")).DataCols
                    x = x & "|" & cl.Name
                Next
                e.Col.ComboList = x
            End If
    End Select
End If

客户管理_PrepareEdit

If e.IsFocusCell Then '如果是焦点所在单元格
    If e.Col.name = "省份"
        e.Col.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
    End If
    If e.Col.Name = "城市"  '如果正在编辑的是县市列
        '从行政区域表提取该省市的县市作为列表项目
        e.Col.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & e.Row("省份") & "'")
    End If
    If e.Col.Name = "类型"
        e.Col.ComboList = DataTables("辅助").SQLGetComboListString("客户类型")
    End If
End If

客户管理_DataColChanged

If e.DataCol.Name = "城市" Then
    Dim dr As DataRow
    Dim Filter As String
    Filter = "[地级市] = '" & e.DataRow("城市") & "'"
    dr = DataTables("全国城市").Find(Filter) '在行政区域表查找所输入省市和县市的行
    If dr IsNot Nothing Then '如果找到
        '将找到行的区号和邮编内容填入到正在输入的行中
        e.DataRow("省份") = dr("省或直辖市")
    Else
        '否则清除区号和邮编两列的内容
        e.DataRow("省份") = Nothing
        End If
End If

客户管理_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("客户管理").Open
'Else
    'With Tables("客户管理")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("客户管理").Open
        'End If
    'End With
'End If

工作日志_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "相关项目"
            e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
        Case "相关客户"
            e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司")
        Case "工作类型"
            e.Col.ComboList = DataTables("辅助").SQLGetComboListString("工作类型")
    End Select
End If

工作日志_BeforeLoad

'If User.Type = UserTypeEnum.User
    'Dim fl As String = "[用户名] = '" & _UserName & "'"
    'If e.DataTable.LoadFilter = "" Then
        'e.DataTable.LoadFilter = fl
    'ElseIf e.DataTable.LoadFilter.IndexOf(fl) < 0 Then '如果没有包括雇员条件
        'e.DataTable.LoadFilter = e.DataTable.Loadfilter & " And " & fl
    'End If
'End If
'

工作日志_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("工作日志").Open
'Else
    'With Tables("工作日志")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("工作日志").Open
        'End If
    'End With
'End If

市场活动_PrepareEdit

If e.IsFocusCell
Select Case e.Col.Name
Case "活动类型"
e.Col.ComboList = DataTables("辅助").SQLGetComboListString("市场活动类型")
Case "主题"
e.Col.ComboList = DataTables("辅助").SQLGetComboListString("市场活动主题")
End Select
End If

市场活动_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("市场活动").Open
'Else
    'With Tables("市场活动")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("市场活动").Open
        'End If
    'End With
'End If

库存_PrepareEdit

If e.IsFocusCell Then '如果是焦点所在单元格
    If e.Col.name = "省份"
        e.Col.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
    ElseIf e.Col.Name = "城市"  '如果正在编辑的是县市列
        '从行政区域表提取该省市的县市作为列表项目
        e.Col.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & e.Row("省份") & "'")
    ElseIf e.Col.Name = "相关项目"
        e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
    ElseIf e.Col.Name = "客户"
        e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司")
    End If

    Select Case e.Col.name
        Case "产品类型"
            e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")
        Case "品牌"
            e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","[产品类型] ='" & e.Row("产品类型") & "'")
        Case "产品型号"
            e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","[产品类型] ='" & e.Row("产品类型") & "' and [品牌] ='"& e.Row("品牌") &"'","")
        Case "仓库"
            e.Col.ComboList = DataTables("辅助").SQLGetComboListString("仓库")
    End Select
End If

库存_DataColChanged

Select Case e.DataCol.Name
    Case "产品","入库","出库"
        Dim dr As DataRow
        Dim mr As DataRow = e.DataRow
        Dim drs As List(of DataRow)
        dr = e.DataTable.Find("[_SortKey] < " & mr("_SortKey") & " And [产品] = '" & mr("产品") & "'", "[_SortKey] Desc")
        If dr Is Nothing Then
            mr("库存") = mr("入库") - mr("出库")
            dr = mr
        End If
        drs = e.DataTable.Select("[_SortKey] >= " & dr("_SortKey") & " And [产品] = '" & dr("产品") & "'", "[_SortKey]")
        For i As Integer = 1 To drs.Count - 1
            drs(i)("库存") = drs(i-1)("库存") + drs(i)("入库") - drs(i)("出库")
        Next
        If e.DataCol.Name = "产品" AndAlso e.OldValue IsNot Nothing AndAlso e.OldValue <> e.NewValue Then
            dr = e.DataTable.Find("[_SortKey] < " & mr("_SortKey") & " And [产品] = '" & e.OldValue & "'", "[_SortKey] Desc")
            If dr Is Nothing Then
                dr = e.DataTable.Find("[产品] = '" & e.OldValue & "'", "[_SortKey]")
                If dr IsNot Nothing Then
                    dr("库存") = dr("入库") - dr("出库")
                End If
            End If
            If dr IsNot Nothing Then
                drs = e.DataTable.Select("[_SortKey] >= " & dr("_SortKey") & " And [产品] = '" & dr("产品") & "'", "[_SortKey]")
                For i As Integer = 1 To drs.Count - 1
                    drs(i)("库存") = drs(i-1)("库存") + drs(i)("入库") - drs(i)("出库")
                Next
            End If
        End If
    Case "产品型号","仓库"
        If e.DataRow.IsNull("产品型号") OrElse e.DataRow.IsNull("仓库")
            e.DataRow("产品") = ""
        Else
            e.DataRow("产品") = e.DataRow("仓库") & e.DataRow("产品型号")
        End If
End Select

库存_DataRowDeleting

e.DataRow("入库") = 0
e.DataRow("出库") = 0

库存_AfterMoveRow

Dim Key As Decimal
Dim Index As Integer
Dim Filter As String
Dim r As Row
Index = Math.Min(e.OldIndex, e.NewIndex)
Key = e.Table.Rows(Index)("_SortKey")
r = e.Table.Rows(e.NewIndex)
Filter = "[_SortKey] >= " & Key & " And [产品] = '" & r("产品") & "'"
e.Table.DataTable.DataCols("入库").RaiseDataColChanged(Filter)

库存_DrawCell

If e.Row.IsNull(e.Col.Name) = False '且该列已经输入内容
    Select Case e.Col.Name
        Case "入库"
            e.Style = "入库"
        Case "出库"
            e.Style = "出库"
        Case "库存"
            e.Style = "库存"
        Case "库存变动时间"
            Dim d As Date = e.Row("库存变动时间")
            Dim t As Date = Date.Today
            If d > t
                e.Style = "库存变动时间"
            End If
    End Select
End If

库存_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("库存").Open
'Else
    'With Tables("库存")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("库存").Open
        'End If
    'End With
'End If

技术服务_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "技术服务类型"
            e.Col.ComboList = DataTables("辅助").SQLGetComboListString("技术服务类型")
        Case "相关项目"
            e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
        Case "相关客户"
            e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司")
    End Select
End If

技术服务_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("技术服务").Open
'Else
    'With Tables("技术服务")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("技术服务").Open
        'End If
    'End With
'End If

报价_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "相关项目"
            e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
        Case "客户"
            e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司")
        Case "客户联系人"
            If e.Row("客户") = ""
                e.Col.ComboList = DataTables("联系人管理").GetComboListString("姓名")
            Else
                e.Col.ComboList = DataTables("联系人管理").GetComboListString("姓名","公司 ='" & e.Row("客户") & "'")
            End If
    End Select
End If

报价_DataColChanged

Select Case e.DataCol.Name
    Case "报价日期"
        e.DataRow("报价编号") =  "BJ" & Format(e.DataRow("报价日期"),"yyyyMMdd") & Format(e.DataRow("_Identify"),"0000")
    Case "客户联系人"
        If e.DataRow.IsNull("客户联系人") = False
            Dim dr As DataRow = DataTables("联系人管理").Find("姓名 ='" & e.DataRow("客户联系人") & "'")
            If dr IsNot Nothing
                e.DataRow("联系电话") = dr("手机1")
                e.DataRow("客户邮箱") = dr("邮箱")
            End If
        Else
            e.DataRow("联系电话") = ""
            e.DataRow("客户邮箱") = ""
        End If
End Select

报价_DataRowAdded

e.DataRow("报价日期") = Date.Today
e.DataRow("增值税") = "包含"
e.DataRow("运费") = "包含"
e.DataRow("合同有效期") = 30
e.DataRow("预付款比例") = 30

报价_AfterLoad

e.DataTable.LoadChildren("报价明细")

报价_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("报价").Open
'Else
    'With Tables("报价")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("报价").Open
        'End If
    'End With
'End If

报价明细_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.name
        Case "产品类型","品牌","产品系列","产品型号","产品编码","指导单价"
            e.Cancel = True
            
        Case "产品类型"
            e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")
        Case "品牌"
            If e.Row.IsNull("产品类型")
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
            Else
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & e.Row("产品类型") & "'")
            End If
        Case "产品系列"
            If e.Row.IsNull("品牌")
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品系列")
            Else
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品系列","品牌 ='" & e.Row("品牌") & "'")
            End If
            
        Case "产品编码"
            If e.Row.IsNull("产品系列")
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品编码")
            Else
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品编码","产品系列 ='" & e.Row("产品系列") & "'")
            End If
            
    End Select
End If

报价明细_DataColChanged

Select Case e.DataCol.Name
    Case "产品编码"
        Dim dr As DataRow = DataTables("产品管理").SQLFind("产品编码 ='" & e.DataRow("产品编码") & "'")
        If dr IsNot Nothing
            e.DataRow("产品型号") = dr("产品型号")
            e.DataRow("指导单价") = dr("指导单价")
            e.DataRow("产品系列") = dr("产品系列")
        Else
            e.DataRow("产品型号") = ""
            e.DataRow("指导单价") = ""
            e.DataRow("产品系列") = ""
        End If
    Case "折扣"
        If val(e.DataRow("折扣")) > 1
            MessageBox.Show("不符合要求的折扣","提示")
            e.DataRow("折扣") = 0
        End If
End Select

报价明细_DataRowAdded

e.DataRow("产品类型") = "气浮设备"
e.DataRow("品牌") = "无锡海拓"

报价明细_DoubleClick

If CurrentTable.IsRelation = False
    If Forms("报价明细").Opened = False
        Forms("报价明细").Open
    End If
Else
    With Tables("报价明细")
        Dim r As Integer
        r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        If r >= 0 Then '如果找到的话
            .Position = r '定位到找到的行.
            If Forms("报价明细").Opened = False
                Forms("报价明细").Open
            End If
        End If
    End With
End If

报价明细清单_PrepareEdit

Select Case e.Col.Name
    Case "销售人员","设计人员","生产人员","子级1","子级2","子级3","报价编号","产品编码","质检人员"
        e.Cancel = True
    Case "自定义配置"
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            If e.Row("销售人员") <> _UserName
                e.Cancel = True
            End If
        End If
    Case "设计确认"
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            If e.Row("设计人员") <> _UserName  OrElse e.Row("自定义配置") = False
                e.Cancel = True
            End If
        End If
    Case "生产确认"
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            If e.Row("生产人员") <> _UserName OrElse e.Row("设计确认") = False
                e.Cancel = True
            End If
        End If
    Case "质检确认"
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            If e.Row("质检人员") <> _UserName OrElse e.Row("生产确认") = False
                e.Cancel = True
            End If
        End If
    Case "值"
        If e.Row("自定义配置") = False
            e.Cancel = True
        ElseIf e.Row("自定义配置") = True
            If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
                If e.Row("销售人员") <> _UserName
                    e.Cancel = True
                End If
            End If
        End If
End Select

报价明细清单_DataColChanged

Select Case e.DataCol.Name
    Case "设计确认"
        If e.DataRow("设计确认") = True
            e.DataRow("设计人员") = _UserName
        Else
            e.DataRow("设计人员") = ""
        End If
        
    Case "生产确认"
        If e.DataRow("生产确认") = True
            e.DataRow("生产人员") = _UserName
        Else
            e.DataRow("生产人员") = ""
        End If
        
    Case "质检确认"
        If e.DataRow("质检确认") = True
            e.DataRow("质检人员") = _UserName
        Else
            e.DataRow("质检人员") = ""
        End If

    Case "自定义配置"
        If e.DataRow("自定义配置") = True
            e.DataRow("销售人员") = _UserName
        Else
            e.DataRow("销售人员") = ""
        End If
End Select

报价明细清单_DrawCell

If e.Row("自定义配置") = True
    Select Case e.Col.Name
        Case "自定义配置","值","备注","销售人员"
            e.Style = "自定义配置"
    End Select
End If

If e.Row("设计确认") = True
    Select Case e.Col.Name
        Case "设计确认","设计人员"
            e.Style = "设计确认"
    End Select
End If

If e.Row("生产确认") = True
    Select Case e.Col.Name
        Case "生产确认","生产人员"
            e.Style = "生产确认"
    End Select
End If

If e.Row("质检确认") = True
    Select Case e.Col.Name
        Case "质检确认","质检人员"
            e.Style = "质检确认"
    End Select
End If

授权_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "权限分配对象"
            e.Col.ComboList = "用户组|用户角色|具体用户"
        Case "对象名称"
            If e.Row("权限分配对象") = "用户组"
                e.Col.ComboList = DataTables("组定义").GetComboListString("组")
            Else If e.Row("权限分配对象") = "用户角色"
                e.Col.ComboList = DataTables("角色定义").GetComboListString("角色")
            Else If e.Row("权限分配对象") = "具体用户"
                e.Col.ComboList = DataTables("users").GetComboListString("name")
            End If
    End Select
End If

授权_DoubleClick

'Forms("权限编辑").open

模块分配_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "模块名称"
            e.Col.ComboList = DataTables("权限字段管理").GetComboListString("模块名称")
    End Select
End If

模块分配_DataColChanged

If e.DataRow.IsNull("模块名称") = False
e.DataRow("排序") = DataTables("权限字段管理").Find("模块名称 ='" & e.DataRow("模块名称") & "'")("排序")
End If

用户权限_DataColChanged

Select Case e.DataCol.name
    Case "用户","模块名称","权限名称"
        e.DataRow("去重") = e.DataRow("用户") & e.DataRow("模块名称")  & e.DataRow("权限名称")
End Select

组_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.name
        Case "可见模块","可编辑模块"
            e.Col.ComboList = DataTables("模块设置").GetComboListString("模块名称")
    End Select
End If

组织架构_DataColChanged

'For i As Integer = 5 To 10
'If e.DataCol.Name = e.DataCol(i).Name AndAlso e.DataRow.IsNull(e.DataCol(i).Name) = False
'e.DataRow(e.DataCol(i-1).Name) = DataTables("users").SQLFind("name = '" & e.DataRow(e.DataCol(i).Name) & "'")("汇报对象")
'End If
'Next

Select Case e.DataCol.Name
    Case "Level2"
        If e.DataRow.IsNull("Level2") = False AndAlso DataTables("users").SQLFind("name = '" & e.DataRow("Level2") & "'") IsNot Nothing
            e.DataRow("Level1") = DataTables("users").SQLFind("name = '" & e.DataRow("Level2") & "'")("汇报对象")
        End If
    Case "Level3"
        If e.DataRow.IsNull("Level3") = False  AndAlso DataTables("users").SQLFind("name = '" & e.DataRow("Level3") & "'") IsNot Nothing
            e.DataRow("Level2") = DataTables("users").SQLFind("name = '" & e.DataRow("Level3") & "'")("汇报对象")
        End If
    Case "Level4"
        If e.DataRow.IsNull("Level4") = False AndAlso DataTables("users").SQLFind("name = '" & e.DataRow("Level4") & "'") IsNot Nothing
            e.DataRow("Level3") = DataTables("users").SQLFind("name = '" & e.DataRow("Level4") & "'")("汇报对象")
        End If
    Case "Level5"
        If e.DataRow.IsNull("Level5") = False AndAlso DataTables("users").SQLFind("name = '" & e.DataRow("Level5") & "'") IsNot Nothing
            e.DataRow("Level4") = DataTables("users").SQLFind("name = '" & e.DataRow("Level5") & "'")("汇报对象")
        End If
    Case "Level6"
        If e.DataRow.IsNull("Level6") = False AndAlso DataTables("users").SQLFind("name = '" & e.DataRow("Level6") & "'") IsNot Nothing
            e.DataRow("Level5") = DataTables("users").SQLFind("name = '" & e.DataRow("Level6") & "'")("汇报对象")
        End If
End Select

联系人管理_PrepareEdit

If e.IsFocusCell Then '如果是焦点所在单元格
    If e.Col.name = "省份"
        e.Col.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
    End If
    If e.Col.Name = "城市"  '如果正在编辑的是县市列
        '从行政区域表提取该省市的县市作为列表项目
        e.Col.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & e.Row("省份") & "'")
    End If
End If

联系人管理_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("联系人管理").Open
'Else
    'With Tables("联系人管理")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("联系人管理").Open
        'End If
    'End With
'End If

行业动态_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("行业动态").Open
'Else
    'With Tables("行业动态")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("行业动态").Open
        'End If
    'End With
'End If

角色_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.name
        Case "可见模块","可编辑模块"
            e.Col.ComboList = DataTables("模块设置").GetComboListString("模块名称")
    End Select
End If

订单明细_PrepareEdit

If e.IsFocusCell
Select Case e.Col.name 
Case "产品类型"
e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")
Case "品牌"
e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","[产品类型] ='" & e.Row("产品类型") & "'")
Case "产品型号"
e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","[产品类型] ='" & e.Row("产品类型") & "' and [品牌] ='"& e.Row("品牌") &"'","")

End Select
End If

订单明细_DataRowAdded

e.DataRow("产品类型") = "管式膜"
e.DataRow("品牌") = "POREX"

订单明细_CurrentChanged

'If Forms("订单管理").Opened() AndAlso MainTable.Name = "订单管理" '一定要判断用于模拟关联表的窗口是否已经打开
    'Dim t As Table = Tables("订单管理_Table2明细")
    'With Tables("订单明细")
        'If .Current Is Nothing Then
            't.Filter = "False"
        'Else
            't.Filter = "订单编号 = " & .Current("订单编号")
        'End If
    'End With
'End If

订单明细_DoubleClick

If CurrentTable.IsRelation = False
    If Forms("订单明细").Opened = False
        Forms("订单明细").Open
    End If
Else
    With Tables("订单明细")
        Dim r As Integer
        r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        If r >= 0 Then '如果找到的话
            .Position = r '定位到找到的行.
            If Forms("订单明细").Opened = False
                Forms("订单明细").Open
            End If
        End If
    End With
End If

订单管理_PrepareEdit

If e.IsFocusCell
Select Case e.Col.name 
Case "产品型号"
e.Col.ComboList = DataTables("TMF产品清单").SQLGetComboListString("型号","","膜管数 DESC")
'Case "项目"
'e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
Case "客户"
e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司")
Case "类型"
e.Col.ComboList = DataTables("辅助").SQLGetComboListString("订单类型")
End Select
End If

订单管理_DataColChanged

'Select Case e.DataCol.name
    'Case "合同金额"
        'Dim zje As Double
        'zje = e.DataRow("合同金额")
        'If e.DataRow.IsNull("合同金额") = False
            'e.DataRow("金额大写") = CUMoney(zje)
        'Else
            'e.DataRow("金额大写") = Nothing
        'End If
'End Select

订单管理_DataRowAdded

e.DataRow("合同日期") = Date.Today
e.DataRow("收货地址") = "供方送货到需方现场,需方传真或电子邮件通知到货地点."
e.DataRow("收货联系人") = "暂无"
e.DataRow("收货人联系方式") = "暂无"
e.DataRow("含税") = "包含"
e.DataRow("含运费") = "包含"

订单管理_CurrentChanged

'If Forms("订单管理").Opened() '一定要判断用于模拟关联表的窗口是否已经打开
    'Dim t As Table = Tables("订单管理_Table2明细")
    'With Tables("订单管理")
        'If .Current Is Nothing Then
            't.Filter = "False"
        'Else
            't.Filter = "订单编号 = " & .Current("订单编号")
        'End If
    'End With
'End If

订单管理_AfterLoad

e.DataTable.LoadChildren("订单明细")

订单管理_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("订单管理").Open
'Else
    'With Tables("订单管理")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("订单管理").Open
        'End If
    'End With
'End If

采购订单_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "物流方式"
            e.Col.ComboList = DataTables("辅助").SQLGetComboListString("物流方式","","辅助排序")
        Case "供应商"
            e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司","类型 = '供应商'")
        Case "相关客户"
            e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司","类型 <> '供应商'")
        Case "货币单位"
            e.Col.ComboList = DataTables("辅助").SQLGetComboListString("货币单位","","辅助排序")
    End Select
End If

If e.IsFocusCell AndAlso e.Col.Name <> "完结"   
    If e.Row("完结") = True
        e.Cancel = True
    End If
End If

采购订单_DataColChanged

Select e.DataCol.Name
    Case "完结"
        Dim drs1 As List(of DataRow) = e.DataRow.GetChildRows("采购订单明细")
        Dim drs2 As List(of DataRow) = e.DataRow.GetChildRows("采购订单跟进")
        If e.DataRow("完结") = True
            If drs1.Count > 0
                For Each dr As DataRow In drs1
                    dr.Locked = True
                Next
            End If
            If drs2.Count > 0
                For Each dr As DataRow In drs2
                    dr.Locked = True
                Next
            End If
        Else
            If drs1.Count > 0
                For Each dr As DataRow In drs1
                    dr.Locked = False
                Next
            End If
            If drs2.Count > 0
                For Each dr As DataRow In drs2
                    dr.Locked = False
                Next
            End If
        End If
End Select

采购订单_AfterLoad

e.DataTable.LoadChildren("采购订单明细")
e.DataTable.LoadChildren("采购订单跟进")

采购订单_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("采购订单").Open
'Else
    'With Tables("采购订单")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("采购订单").Open
        'End If
    'End With
'End If

采购订单明细_PrepareEdit

If e.IsFocusCell
    Select Case e.Col.Name
        Case "相关项目"
            e.Col.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
        Case "相关客户"
            e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司")
        Case "产品类型"
            e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")
        Case "产品品牌"
            If e.Row.IsNull("产品类型")
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
            Else
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & e.Row("产品类型") & "'")
            End If
        Case "产品型号"
            If e.Row.IsNull("产品品牌")
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
            Else
                e.Col.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & e.Row("产品品牌") & "'")
            End If
    End Select
End If

采购订单明细_DataColChanged

Dim dr As DataRow = e.DataRow.GetParentRow("采购订单")
Select Case e.DataCol.name
    Case "合同编号"
        If dr IsNot Nothing
            e.DataRow("货币单位") = dr("货币单位")
        End If
        
    Case "数量","单价"
        Dim dj As Double
        Dim sl As Integer
        dj = e.DataRow("单价")
        sl = e.DataRow("数量")
        If e.DataRow.IsNull("数量") Or e.DataRow.IsNull("单价")
            e.DataRow("金额") = Nothing
        Else
            e.DataRow("金额") = dj * sl
        End If
        
        If dr IsNot Nothing
            dr("产品数量") = DataTables("采购订单明细").Compute("SUM(数量)","合同编号 ='" & e.DataRow("合同编号") & "'")
        End If

    Case "金额" 
        If dr IsNot Nothing
            dr("合同金额") = DataTables("采购订单明细").Compute("SUM(金额)","合同编号 ='" & e.DataRow("合同编号") & "'") + dr("关税") + dr("运费")
        End If

End Select

采购订单明细_DoubleClick

If CurrentTable.IsRelation = False
    If Forms("采购订单明细").Opened = False
        Forms("采购订单明细").Open
    End If
Else
    With Tables("采购订单明细")
        Dim r As Integer
        r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        If r >= 0 Then '如果找到的话
            .Position = r '定位到找到的行.
            If Forms("采购订单明细").Opened = False
                Forms("采购订单明细").Open
            End If
        End If
    End With
End If

采购订单跟进_PrepareEdit

Select Case e.Col.Name
Case "分类"
e.Col.ComboList = DataTables("辅助").SQLGetComboListString("订单跟进类型","","辅助排序")
End Select

采购订单跟进_DataColChanged

Dim dr As DataRow = e.DataRow.GetParentRow("采购订单")
Select Case e.DataCol.Name
    Case "金额"
        If dr IsNot Nothing
            dr("已付款") = DataTables("采购订单跟进").Compute("sum(金额)","分类 = '付款'")
        End If
End Select

采购订单跟进_DoubleClick

If CurrentTable.IsRelation = False
    If Forms("采购订单跟进").Opened = False
        Forms("采购订单跟进").Open
    End If
Else
    With Tables("采购订单跟进")
        Dim r As Integer
        r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        If r >= 0 Then '如果找到的话
            .Position = r '定位到找到的行.
            If Forms("采购订单跟进").Opened = False
                Forms("采购订单跟进").Open
            End If
        End If
    End With
End If

项目管理_PrepareEdit

If e.IsFocusCell
Select Case e.Col.Name
Case "工程公司"
e.Col.ComboList = DataTables("客户管理").SQLGetComboListString("公司","[类型] = '工程公司'")
Case "废水类型"
e.Col.Combolist = DataTables("辅助").SQLGetComboListString("废水类型")
Case "行业"
e.Col.Combolist = DataTables("辅助").SQLGetComboListString("行业")
Case "阶段"
e.Col.Combolist = DataTables("辅助").SQLGetComboListString("项目阶段")
Case "类型"
e.Col.Combolist = DataTables("辅助").SQLGetComboListString("项目类型")
Case "膜型号"
e.Col.Combolist = DataTables("TMF产品清单").SQLGetComboListString("型号")
Case "处理目的"
e.Col.Combolist = DataTables("辅助").SQLGetComboListString("处理目的")



End Select
End If

If e.IsFocusCell Then '如果是焦点所在单元格
    If e.Col.name = "省份"
        e.Col.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
    End If
    If e.Col.Name = "城市"  '如果正在编辑的是县市列
        '从行政区域表提取该省市的县市作为列表项目
        e.Col.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & e.Row("省份") & "'")
    End If
End If

项目管理_DoubleClick

'If CurrentTable.IsRelation = False
    'Forms("项目管理").Open
'Else
    'With Tables("项目管理")
        'Dim r As Integer
        'r = .FindRow("_Identify = '" & e.Row("_Identify") &"'", 0, True ) '从当前行的下一行开始查找
        'If r >= 0 Then '如果找到的话
            '.Position = r '定位到找到的行.
            'Forms("项目管理").Open
        'End If
    'End With
'End If

窗口表事件

客户管理_Table1项目_DoubleClick

Dim i As Integer = Tables("项目管理").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("项目管理")
        .Position = i
    End With
    Forms("项目管理").open
End If

项目管理_Table1系统_DoubleClick

Dim i As Integer = Tables("已投运系统").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("已投运系统")
        .Position = i
    End With
    Forms("已投运系统").open
End If

客户管理_Table1报价_DoubleClick

Dim i As Integer = Tables("报价").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("报价")
        .Position = i
    End With
    Forms("报价").open
End If

项目管理_Table1订单_DoubleClick

Dim i As Integer = Tables("订单管理").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("订单管理")
        .Position = i
    End With
    Forms("订单管理").open
End If

客户管理_Table1日志_DoubleClick

Dim i As Integer = Tables("工作日志").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("工作日志")
        .Position = i
    End With
    Forms("工作日志").open
End If

按客户搜索_Table1_CurrentChanged

Dim rg As WinForm.RecordGrid = e.Form.Controls("RecordGrid1")
Dim tr As Row = e.Table.Current
If tr IsNot Nothing AndAlso tr("数据表") > ""
    rg.Table = Tables(tr("数据表"))
    Tables(tr("数据表")).Position = Tables(tr("数据表")).FindRow("[_Identify] ='" & tr("ID") & "'")
    rg.Build()
End If
rg.Enabled = False

按客户搜索_Table1_DoubleClick

Dim i As Integer = Tables(e.Row("数据表")).FindRow("[_Identify] ='" & e.Row("ID") & "'")
If i > -1
    With Tables(e.Row("数据表"))
        .Position = i
    End With
    Forms(e.Row("数据表")).open
End If

客户管理_Table1联系人_DoubleClick

With Tables("联系人管理")
    Dim r As Integer
    r = .FindRow("_Identify = '" & e.Row("_Identify") & "'", 0, True ) '从当前行的下一行开始查找
    If r >= 0 Then '如果找到的话
        .Position = r '定位到找到的行.
        Forms("联系人管理").Open 
    End If
End With

项目管理_Table1报价_DoubleClick

Dim i As Integer = Tables("报价").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("报价")
        .Position = i
    End With
    Forms("报价").open
End If

客户管理_Table1订单_DoubleClick

Dim i As Integer = Tables("订单管理").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("订单管理")
        .Position = i
    End With
    Forms("订单管理").open
End If

按项目搜索_Table1_CurrentChanged

Dim rg As WinForm.RecordGrid = e.Form.Controls("RecordGrid1")
Dim tr As Row = e.Table.Current
If tr IsNot Nothing AndAlso tr("数据表") > ""
    rg.Table = Tables(tr("数据表"))
    Tables(tr("数据表")).Position = Tables(tr("数据表")).FindRow("[_Identify] ='" & tr("ID") & "'")
    rg.Build()
End If
rg.Enabled = False

按项目搜索_Table1_DoubleClick

Dim i As Integer = Tables(e.Row("数据表")).FindRow("[_Identify] ='" & e.Row("ID") & "'")
If i > -1
    With Tables(e.Row("数据表"))
        .Position = i
    End With
If Forms.contains(e.Row("数据表"))
    Forms(e.Row("数据表")).open
End If
End If

项目管理_Table1日志_DoubleClick

Dim i As Integer = Tables("工作日志").FindRow("[_Identify] ='" & e.Row("_Identify") & "'")
If i > -1
    With Tables("工作日志")
        .Position = i
    End With
    Forms("工作日志").open
End If

窗口与控件事件

#产品管理_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
lx.ComboList = DataTables("辅助").SQLGetComboListString("产品类型","","辅助排序")

Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")

#产品管理_ComboBox2品牌_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","[产品类型] ='" & lx.text & "'")

#产品管理_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

#产品管理_ItemClick

Functions.Execute("itemclick",e,"Label1","Label2")

HTTP服务_AfterLoad

Dim IPAdress As System.Net.IPAddress
Dim HostName As String
HostName = System.Net.Dns.GetHostName '获得本机的机器名
IPAdress = System.Net.Dns.GetHostByName(HostName).AddressList.GetValue(0) '获得本机的IP
'messagebox.show(IPAdress.Tostring) '获得MAC地址
e.Form.Controls("TextBox1服务器私有ip").text ="http://" & IPAdress.Tostring & "/"

HTTP服务_bt上一条_Click

With Tables("微信公众号管理")
    .Position = .Position - 1
End With

HTTP服务_bt下一条_Click

With Tables("微信公众号管理")
    .Position = .Position + 1
End With

HTTP服务_关闭HTTP_Click

HttpServer.Close()

HTTP服务_开启HTTP_Click

HttpServer.Prefixes.Add(e.Form.Controls("TextBox1服务器私有ip").text)
HttpServer.Start()

POREX出差申请_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
If user.Type = UserTypeEnum.User
e.Form.Controls("TextBox1姓名").Value = _UserName
e.Form.Controls("TextBox3成本中心").Value = "206"
e.Form.Controls("ComboBox1级别").Value = DataTables("Users").find("Name = '" & _UserName & "'")("报销级别")
e.Form.Controls("ComboBox2部门").Value = DataTables("Users").find("Name = '" & _UserName & "'")("部门")
End If

e.Form.Controls("ComboBox3交通工具").combolist = DataTables("辅助").SQLGetComboListString("交通工具","","辅助排序")

POREX出差申请_Button3_Click

Dim dr As Row = Tables("POREX出差申请").Current
Dim tm As String  = ProjectPath & "Attachments\POREX出差申请单.doc" '指定模板文件
Dim fl As String = ProjectPath & "Reports\出差申请\" & dr("出差日期") & "至" & dr("返程日期") & dr("姓名") & "出差申请.doc" '指定目标文件
Dim wrt As New WordReport(Tables("POREX出差申请"),tm,fl) '定义一个WordReport
wrt.Build() '逐行生成报表
wrt.Show() '显示报表

POREX出差申请_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

POREX出差申请_ItemClick

Functions.Execute("itemclick",e,"Label1","Label10")

POREX订单_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim hb As WinForm.ComboBox = e.Form.Controls("ComboBox2货币")
hb.ComboList = DataTables("辅助").SQLGetComboListString("货币单位","","辅助排序")



With Tables("POREX订单.POREX订单明细")
    .Cols("数量").GrandTotal = True 
    .Cols("金额").GrandTotal = True
    .GrandTotal = True
End With

kh.contextstrip = e.Form.Strips("kj2")
kh.DropFormName = "客户下拉框"

POREX订单_Button1_Click

If user.Type = UserTypeEnum.User
    If _UserName = Tables("POREX订单").Current("用户名")
        Tables("POREX订单.POREX订单明细").AddNew
    Else
        Return
    End If
Else
    Tables("POREX订单.POREX订单明细").AddNew
End If

POREX订单_Button6_Click

Dim dr As Row = Tables("订单管理").Current
If e.Form.Controls("ComboBox3类型").value = "合同"
    Dim tm As String  = ProjectPath & "Attachments\合同模板.doc" '指定模板文件
    Dim fl As String = ProjectPath & "Reports\订单报价等\" & dr("订单编号") & dr("客户") & ".doc" '指定目标文件
    Dim wrt As New WordReport(Tables("订单管理"),tm,fl) '定义一个WordReport
    wrt.Build() '逐行生成报表
    wrt.Show() '显示报表
ElseIf e.Form.Controls("ComboBox3类型").value = "报价"
    Dim tm As String  = ProjectPath & "Attachments\报价模板.doc" '指定模板文件
    Dim fl As String = ProjectPath & "Reports\订单报价等\" & dr("订单编号") & dr("客户") & ".doc" '指定目标文件
    Dim wrt As New WordReport(Tables("订单管理"),tm,fl) '定义一个WordReport
    wrt.Build() '逐行生成报表
    wrt.Show() '显示报表
ElseIf e.Form.Controls("ComboBox3类型").value = "采购"
    Dim tm As String  = ProjectPath & "Attachments\采购模板.doc" '指定模板文件
    Dim fl As String = ProjectPath & "Reports\订单报价等\" & dr("订单编号") & dr("客户") & ".doc" '指定目标文件
    Dim wrt As New WordReport(Tables("订单管理"),tm,fl) '定义一个WordReport
    wrt.Build() '逐行生成报表
    wrt.Show() '显示报表
End If

POREX订单_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

POREX订单_ItemClick

Functions.Execute("itemclick",e,"label1","客户")

POREX订单明细_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next

Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")

xm.ContextStrip = e.Form.Strips("kj1")
kh.ContextStrip = e.Form.Strips("kj2")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"


xh.ComboList = DataTables("TMF产品清单").SQLGetComboListString("型号","","膜管数")

POREX订单明细_ComboBox3型号_Enter

'Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
'Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
'Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")
'
'If pp.text Is Nothing
    'xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
'Else
    'xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
'End If

POREX订单明细_Enter

If user.Type = UserTypeEnum.User
    Dim tbn As String = CurrentTable.DataTable.Name
    Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
    If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
        For Each x As WinForm.Control In e.Form.controls
            x.ReadOnly = BooleanEnum.True
        Next
    End If
    Select Case tbn
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","项目管理","订单明细","市场活动","技术服务"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

POREX订单明细_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

QQserver_Button1_Click

QQServer.ServerIp = e.Form.Controls("txtIP").Value '指定IP地址
QQServer.ServerPort = e.Form.Controls("txtPort").Value '指定端口
QQServer.HeartbeatInterval = e.Form.Controls("txtInterval").Value '指定心跳时间
QQServer.HeartbeatTimeout = e.Form.Controls("txtTimeOut").Value '指定心跳超时时间
QQServer.Start() '启动QQServer

QQserver_Button2_Click

QQServer.Stop()

按客户搜索_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next

Dim sp As WinForm.SplitContainer = e.Form.Controls("SplitContainer2")
If user.Type = UserTypeEnum.User
    If _UserRole.Contains("管理者") = False
        sp.Panel2.Collapsed = True
    Else
        e.Form.Controls("RecordGrid1").Table = CurrentTable
        e.Form.Controls("RecordGrid1").Build
        sp.Panel2.Collapsed = False
    End If
Else
    e.Form.Controls("RecordGrid1").Table = CurrentTable
    e.Form.Controls("RecordGrid1").Build
End If

按客户搜索_Button1_Click

Dim txt As String = e.Form.Controls("TextBox1关键字").text
Dim dt As DataTable = DataTables("查询表客户")

Dim xgkh As new List(of String)
Dim kh As new List(of String)
Dim gs As new List(of String)
For Each ttt As DataTable In DataTables
    If ttt.DataCols.Contains("相关客户")
        xgkh.Add(CStr(ttt.Name))
    Else If ttt.DataCols.Contains("客户")
        kh.Add(CStr(ttt.Name))
    ElseIf ttt.DataCols.Contains("公司")
        gs.Add(CStr(ttt.Name))
    End If
Next



dt.DeleteFor("")
If txt = ""
    MessageBox.Show("请输入关键字")
Else
    For Each dtb As DataTable In DataTables
        If gs.Contains(dtb.Name) AndAlso dtb.Name > ""
            Dim filter As String = "公司 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("客户名称") = dr("公司")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        ElseIf  dtb.Name = "在线系统设计"
            Dim filter As String = "公司名称 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("客户名称") = dr("公司名称")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        ElseIf kh.Contains(dtb.Name) AndAlso dtb.Name > ""
            Dim filter As String = "客户 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("客户名称") = dr("客户")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        ElseIf xgkh.Contains(dtb.Name) AndAlso dtb.Name > ""
            Dim filter As String = "相关客户 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("客户名称") = dr("相关客户")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        End If
    Next
    DataTables("查询表客户").Save
    If DataTables("查询表客户").DataRows.Count = 0
        MessageBox.Show("没有查询到相关信息")
    End If
End If

按项目搜索_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next

Dim sp As WinForm.SplitContainer = e.Form.Controls("SplitContainer2")
If user.Type = UserTypeEnum.User
    If _UserRole.Contains("管理者") = False
        sp.Panel2.Collapsed = True
    Else
        e.Form.Controls("RecordGrid1").Table = CurrentTable
        e.Form.Controls("RecordGrid1").Build
        sp.Panel2.Collapsed = False
    End If
Else
    e.Form.Controls("RecordGrid1").Table = CurrentTable
    e.Form.Controls("RecordGrid1").Build
End If

按项目搜索_Button1_Click

Dim txt As String = e.Form.Controls("TextBox1关键字").text
Dim dt As DataTable = DataTables("查询表项目")

Dim xgxm As new List(of String)
Dim yz As new List(of String)
Dim xmmc As new List(of String)
For Each ttt As DataTable In DataTables
    If ttt.DataCols.Contains("相关项目")
        xgxm.Add(CStr(ttt.Name))
    Else If ttt.DataCols.Contains("业主")
        yz.Add(CStr(ttt.Name))
    End If
Next

dt.DeleteFor("")
If txt = ""
    MessageBox.Show("请输入关键字")
Else

    For Each dtb As DataTable In DataTables
        If yz.Contains(dtb.Name) AndAlso dtb.Name > ""
            Dim filter As String = "业主 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("项目名称") = dr("业主")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        ElseIf  dtb.Name = "在线系统设计" OrElse dtb.Name = "已投运系统" 
            Dim filter As String = "项目名称 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("项目名称") = dr("项目名称")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        ElseIf xgxm.Contains(dtb.Name) AndAlso dtb.Name > ""
            Dim filter As String = "相关项目 like '%" & txt & "%'"
            Dim drs As List(of DataRow) = DataTables(dtb.Name).SQLSelect(filter)
            If drs.Count > 0
                For Each dr As DataRow In drs
                    Dim newdr As DataRow = dt.AddNew
                    newdr("数据表") = dtb.Name
                    newdr("创建时间") = dr("添加时间")
                    newdr("创建者") = dr("用户名")
                    newdr("项目名称") = dr("相关项目")
                    newdr("ID") = dr("_Identify")
                Next
            End If
        End If
    Next
    DataTables("查询表项目").Save
    If DataTables("查询表项目").DataRows.Count = 0
        MessageBox.Show("没有查询到相关信息")
    End If
End If

报价_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
With Tables("报价.报价明细")
    .Cols("数量").GrandTotal = True 
    .Cols("金额").GrandTotal = True
    .GrandTotal = True
End With

Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim lxr As WinForm.ComboBox = e.Form.Controls("ComboBox6联系人")

xm.ContextStrip = e.Form.Strips("kj1")
kh.ContextStrip = e.Form.Strips("kj2")

If kh.text = ""
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名")
Else
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名","公司='" & kh.text & "'")
End If

xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"

Dim sp As WinForm.SplitContainer = e.Form.Controls("SplitContainer1")
sp.Panel2.Collapsed = False
Tables("报价明细清单").Filter = "[_Identify] Is null"


With Tables("报价.报价明细.报价明细清单")
    .MergeMode = MergeModeEnum.Standard
    .MergeCols.Clear()
    .MergeCols.Add("子级1")
    .MergeCols.Add("子级2")
    .AllowMerge = True
End With

报价_Button1_Click

Dim dr As Row = Tables("报价").Current
Dim Book As New XLS.Book(ProjectPath & "Attachments\报价模板.xls")
Dim fl As String = ProjectPath & "Reports\订单报价等\" & dr("报价日期") & dr("客户") & ".xls" '指定目标文件
Book.Build() '生成细节区
Book.Save(fl) '保存工作簿
Dim Proc As New Process '打开工作簿
Proc.File = fl
Proc.Start()

报价_Button2_Click

If user.Type = UserTypeEnum.User
    If _UserName = Tables("报价").Current("用户名")
        'Tables("报价.报价明细").AddNew
        Forms("增加明细清单").open
    Else
        Return
    End If
Else
    Forms("增加明细清单").open
End If

报价_ComboBox6联系人_Enter

Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim lxr As WinForm.ComboBox = e.Form.Controls("ComboBox6联系人")


If kh.text = ""
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名")
Else
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名","公司='" & kh.text & "'")
End If

报价_ComboBox6联系人_TextChanged

Dim lxr As WinForm.ComboBox = e.Form.Controls("ComboBox6联系人")
Dim dh As WinForm.TextBox = e.Form.Controls("TextBox2电话")
If lxr.text = ""
    dh.value = ""
Else
    Dim dr As DataRow = DataTables("联系人管理").Find("姓名 ='" & lxr.text & "'")
    If dr IsNot Nothing
        dh.value = dr("手机1")
    End If
End If

报价_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

报价_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

报价明细_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")



lx.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")

If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

报价明细_ComboBox2品牌_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")
If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

报价明细_ComboBox3型号_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

报价明细_Enter

If user.Type = UserTypeEnum.User
    Dim tbn As String = CurrentTable.DataTable.Name
    Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
    If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
        For Each x As WinForm.Control In e.Form.controls
            x.ReadOnly = BooleanEnum.True
        Next
    End If
    Select Case tbn
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","项目管理","订单明细","市场活动","技术服务"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

报价明细_ItemClick

Functions.Execute("itemclick",e,"ComboBox5项目","ComboBox4客户")

采购订单_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next


Dim gys As WinForm.ComboBox = e.Form.Controls("ComboBox1供应商")
Dim wl As WinForm.ComboBox = e.Form.Controls("ComboBox2物流")
Dim hb As WinForm.ComboBox = e.Form.Controls("ComboBox3货币")
gys.ComboList = DataTables("客户管理").SQLGetComboListString("公司","类型 = '供应商'")
wl.ComboList = DataTables("辅助").SQLGetComboListString("物流方式","","辅助排序")
hb.ComboList = DataTables("辅助").SQLGetComboListString("货币单位","","辅助排序")
gys.contextstrip = e.Form.Strips("kj2")

采购订单_Button1_Click

If user.Type = UserTypeEnum.User
    If _UserName = Tables("采购订单").Current("用户名")
        Tables("采购订单.采购订单明细").AddNew
    Else
        Return
    End If
Else
    Tables("采购订单.采购订单明细").AddNew
End If

采购订单_Button3_Click

If user.Type = UserTypeEnum.User
    If _UserName = Tables("采购订单").Current("用户名")
        Tables("采购订单.采购订单跟进").AddNew
    Else
        Return
    End If
Else
    Tables("采购订单.采购订单跟进").AddNew
End If

采购订单_CheckBox1_CheckedChanged

Dim wj As WinForm.CheckBox = e.Form.Controls("CheckBox1")
If wj.Checked = True
    For Each ctl As WinForm.Control In e.Form.Controls
        If ctl.Name <> wj.Name
            ctl.Enabled = False
        End If
    Next
Else
    For Each ctl As WinForm.Control In e.Form.Controls
        If ctl.Name <> wj.Name
            ctl.Enabled = True
        End If
    Next
End If

采购订单_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

采购订单_ItemClick

Functions.Execute("itemclick",e,"ComboBox3项目","ComboBox2甲方")

采购订单跟进_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim fl As WinForm.ComboBox = e.Form.Controls("ComboBox1分类")
fl.ComboList = DataTables("辅助").SQLGetComboListString("订单跟进类型","","辅助排序")

采购订单跟进_Enter

If user.Type = UserTypeEnum.User
    Dim tbn As String = CurrentTable.DataTable.Name
    Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
    If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
        For Each x As WinForm.Control In e.Form.controls
            x.ReadOnly = BooleanEnum.True
        Next
    End If
    Select Case tbn
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","项目管理","订单明细","市场活动","技术服务"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

采购订单跟进_ItemClick

Select Case e.StripItem.Name
    Case "previous"
        '代码
        With CurrentTable
            .Position = .Position - 1
        End With
        
    Case "next"
        '代码
        With CurrentTable
            .Position = .Position + 1
        End With
    Case "close"
        '代码
        e.Form.Close
    Case "Save"
        e.Form.Controls("Label1").Select
        CurrentTable.Current.Save
    Case  "new"
        Dim tbn As String = CurrentTable.DataTable.Name
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") IsNot Nothing
            '代码
            e.Form.Controls("Label1").Select
            
            '代码
            CurrentTable.AddNew
            With CurrentTable
                .Position = .Rows.Count - 1
            End With
        End If
    Case "delete"
        If CurrentTable.AllowEdit = False
            MessageBox.Show("您无权删除此信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.Warning)
        Else
            If CurrentTable.Current IsNot Nothing
                Syscmd.Row.Delete()
            End If
        End If
    Case "project"
        Dim xm As WinForm.ComboBox = e.Form.Controls("ComboBox1项目名称")
        Dim pj As String = xm.text
        With Tables("项目管理")
            Dim r As Integer
            r = .FindRow("业主 = '" & pj & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                'MainTable = Tables("项目管理")
                .Position = r '定位到找到的行.
                Forms("项目管理").Open
                
            Else
                MessageBox.Show("没有找到相关项目记录","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
    Case "customer"
        Dim kh As WinForm.ComboBox = e.Form.Controls("ComboBox1公司")
        Dim khs As String = kh.text
        Dim kh1 As String = khs.Split(",")(0)
        With Tables("客户管理")
            Dim r As Integer
            r = .FindRow("公司 = '" & kh1 & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                'MainTable = Tables("客户管理")
                .Position = r '定位到找到的行.
                Forms("客户管理").Open
                
            Else
                MessageBox.Show("没有找到相关客户信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
End Select

采购订单明细_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")

xm.ContextStrip = e.Form.Strips("kj1")
kh.ContextStrip = e.Form.Strips("kj2")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"


lx.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")

If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

采购订单明细_ComboBox2品牌_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")
If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

采购订单明细_ComboBox3型号_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

采购订单明细_Enter

If user.Type = UserTypeEnum.User
    Dim tbn As String = CurrentTable.DataTable.Name
    Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
    If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
        For Each x As WinForm.Control In e.Form.controls
            x.ReadOnly = BooleanEnum.True
        Next
    End If
    Select Case tbn
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","项目管理","订单明细","市场活动","技术服务"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

采购订单明细_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

侧边栏模块_AfterLoad

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
If user.Type <> UserTypeEnum.User
    tv.BuildTree("模块分配","模块名称|表名","","排序,表名")
Else
    If _UserRole.Contains("管理者")
        tv.BuildTree("模块分配","模块名称|表名","隐藏 = false","排序,表名")
    Else If _UserRole.Contains("管理者") = False
        tv.BuildTree("侧边栏设置","模块名称|数据表名","用户 ='"& _UserName &"'","排序,数据表名")
    End If
End If

侧边栏模块_TreeView1_NodeMouseClick

If e.Node.Level = 1 Then
    MainTable = Tables(e.Node.Text)
End If

查询库存_AfterLoad

Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox1产品")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox1品牌")
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")

lx.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")

If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

查询库存_Button1_Click

Dim cps As WinForm.ComboBox = e.Form.Controls("ComboBox1产品")
Dim kc As WinForm.TextBox = e.Form.Controls("TextBox1")
Dim cp As String = cps.Text
Dim drr As DataRow = DataTables("库存").SQLFind("产品型号 = '" & cp & "'") 
If drr Is Nothing
    'MessageBox.show("未查询到此产品库存信息.","提示",MessageBoxButtons.OK,MessageBoxIcon.None)
    kc.Value = "未查询到此产品库存信息."
Else
    Dim cks As List(of String) = DataTables("库存").SQLGetValues("仓库")
    If cks.Count > 0
        Dim st As String = ""
        For Each ck As String In cks
            Dim dr As DataRow = DataTables("库存").SQLFind("产品型号 ='" & cp & "' and 仓库 = '" & ck & "'","库存变动时间 DESC")
            If dr IsNot Nothing
                st = st & "截至: " & dr("库存变动时间") & vbcrlf & ck & "仓库 库存数量为: " & dr("库存") & vbcrlf & vbcrlf
            End If
        Next
        kc.Value = "产品类型:" & drr("产品类型") & vbcrlf & "品牌:" & drr("品牌") & vbcrlf & "产品型号: " & cp & vbcrlf & vbcrlf & st
    End If
End If

查询库存_ComboBox1产品_Enter

Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox1产品")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox1品牌")
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

查询库存_ComboBox1品牌_Enter

Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox1产品")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox1品牌")
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")


If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

产品配置管理_AfterLoad

Dim tv1 As WinForm.TreeView = e.Form.Controls("tv系列管理")
tv1.BuildTree("产品管理","产品系列|产品编码")

_cpdic.clear
For Each dr As DataRow In DataTables("产品管理").DataRows
    If dr("产品编码") > "" AndAlso dr("产品型号") > ""
        _cpdic.Add(dr("产品编码"),dr("产品型号"))
    End If
Next
Dim bm As WinForm.ComboBox = e.Form.Controls("编码")
bm.text = GetConfigValue("默认配置产品编码","")

产品配置管理_Button1_Click

Dim bm As String = e.Form.Controls("编码").text
Dim cl As String = bm.SubString(bm.Length - 3)
Dim xl As String = bm.Remove(bm.Length - 3)
Dim dr As DataRow = DataTables("BOM").AddNew
dr("产品系列") = xl
dr.Save

产品配置管理_Button2_Click

Syscmd.Row.Delete()

产品配置管理_Button3_Click

DataTables("bom").Save

产品配置管理_TreeView1_NodeMouseClick

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
'Dim bm As String = e.Form.Controls("编码")
'Dim xl As String = bm.Remove(bm.Length - 3)

With Tables("BOM")
    If e.Node.Level = 0 And e.Node.Text = "显示全部"
        .filter = ""
    ElseIf e.Node.Level = 0 And e.Node.Text = "展开"
        tv.ExpandAll
    ElseIf e.Node.Level = 0 And e.Node.Text = "收缩"
        tv.CollapseAll
    ElseIf e.Node.Level = 0 
        .filter = "[子级1] = '" & e.Node.Text & "'"
    ElseIf e.Node.Level = 1
        .filter = "[子级2] = '" & e.Node.Text & "' and [子级1] = '" & e.Node.ParentNode.Text & "'"
    ElseIf e.Node.Level = 2
        .filter = "[子级3] = '" & e.Node.Text & "' and [子级2] = '" & e.Node.ParentNode.Text & "' and [子级1] = '" & e.Node.ParentNode.ParentNode.Text & "'"
    End If
End With

产品配置管理_tv系列管理_NodeMouseDoubleClick

Dim bm As WinForm.ComboBox = e.Form.Controls("编码")
If e.Node.Level > 0
    bm.text = e.Node.Text
End If
SaveConfigValue("默认配置产品编码",e.Node.Text)

产品配置管理_编码_Enter

e.Sender.ComboList = DataTables("产品管理").GetComboListString("产品编码")

产品配置管理_编码_TextChanged

Dim bm As String = e.Form.Controls("编码").text
Dim cl As String = bm.SubString(bm.Length - 3)
Dim xl As String = bm.Remove(bm.Length - 3)
Tables("bom").Filter = "产品系列 ='" & xl & "'"
'Tables("bom_table1").Fill("select * from {BOM} where [产品系列] = '" & xl & "'","",True)
Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")

tv.BuildTree("BOM","子级1|子级2|子级3",Tables("bom").Filter,"序号")
tv.Nodes.Insert("显示全部",0)
tv.Nodes.Insert("收缩",0)
tv.Nodes.Insert("展开",0)

Dim cl1 As String = "子级1|100|子级2|100|子级3|100|" & cl & "|100|指导单价|80|备注|100"

With Tables("BOM")
    .SetColVisibleWidth(cl1)
    .AutoSizeCols
    .MergeMode = MergeModeEnum.Standard
    .MergeCols.Clear()
    .MergeCols.Add("子级1")
    .MergeCols.Add("子级2")
    .AllowMerge = True
End With

Dim xh As WinForm.TextBox = e.Form.Controls("型号")
If _cpdic.ContainsKey(bm)
    xh.text = _cpdic(bm)
End If

Dim lb As WinForm.Label = e.Form.Controls("label当前产品")
lb.text = "当前产品型号:" & xh.text & " 对应产品编码:" & bm '& vbcrlf &  " 当前配置指导价格合计:" & DataTables("bom")

窗口1_AfterLoad

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
tv.BuildTree("组织架构","组|Level1|Level2|Level3|Level4|Level5|Level6")

窗口1_Button1_Click

'DataTables("组织架构").DeleteFor("")
'Dim dt As DataTable = DataTables("users")
'
'Dim drs As List(of DataRow) = dt.SQLSelect("汇报对象 = '无'")
'If drs.Count > 0
    'For Each dr As DataRow In drs
        'Dim newdr As DataRow = DataTables("组织架构").AddNew
        'newdr("组") = dr("group")
        'newdr("Level1") = dr("name")
    'Next
'End If
'Dim lv1 As List(of String) = DataTables("组织架构").GetValues("Level1")
'If lv1.Count > 0
    'For Each lv As String In lv1
        'Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        'If drs1.Count > 0
            'For Each dr As DataRow In drs1
                'Dim newdr As DataRow = DataTables("组织架构").AddNew
                'newdr("组") = dr("group")
                'newdr("Level1") = dr("汇报对象")
                'newdr("Level2") = dr("name")
            'Next
        'End If
    'Next
'End If
'Dim lv2 As List(of String) = DataTables("组织架构").GetValues("Level2")
'If lv2.Count > 0
    'For Each lv As String In lv2
        'Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        'If drs1.Count > 0
            'For Each dr As DataRow In drs1
                'Dim newdr As DataRow = DataTables("组织架构").AddNew
                'newdr("组") = dr("group")
                'newdr("Level2") = dr("汇报对象")
                'newdr("Level3") = dr("name")
            'Next
        'End If
    'Next
'End If
'Dim lv3 As List(of String) = DataTables("组织架构").GetValues("Level3")
'If lv1.Count > 0
    'For Each lv As String In lv3
        'Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        'If drs1.Count > 0
            'For Each dr As DataRow In drs1
                'Dim newdr As DataRow = DataTables("组织架构").AddNew
                'newdr("组") = dr("group")
                'newdr("Level3") = dr("汇报对象")
                'newdr("Level4") = dr("name")
            'Next
        'End If
    'Next
'End If
'Dim lv4 As List(of String) = DataTables("组织架构").GetValues("Level4")
'If lv1.Count > 0
    'For Each lv As String In lv4
        'Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        'If drs1.Count > 0
            'For Each dr As DataRow In drs1
                'Dim newdr As DataRow = DataTables("组织架构").AddNew
                'newdr("组") = dr("group")
                'newdr("Level4") = dr("汇报对象")
                'newdr("Level5") = dr("name")
            'Next
        'End If
    'Next
'End If
'Dim lv5 As List(of String) = DataTables("组织架构").GetValues("Level5")
'If lv1.Count > 0
    'For Each lv As String In lv5
        'Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        'If drs1.Count > 0
            'For Each dr As DataRow In drs1
                'Dim newdr As DataRow = DataTables("组织架构").AddNew
                'newdr("组") = dr("group")
                'newdr("Level5") = dr("汇报对象")
                'newdr("Level6") = dr("name")
            'Next
        'End If
    'Next
'End If


Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
tv.CreateTree("组织架构","级码",",")

窗口1_相关客户_Enter

e.Sender.DropFormName = "项目下拉框"

窗口1_相关客户1_Enter

e.Sender.DropFormName = "客户下拉框"

窗口2_AfterLoad

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
tv.GenerateTree("测试","目录","名称",".")

登录窗口_AfterLoad

e.Form.Controls("btnChat").Enabled = QQClient.Ready
e.Form.Controls("txtIP").text = _host
If user.Type = UserTypeEnum.User
    e.Form.Controls("txtUserName").value = _UserName
    e.Form.Controls("cmbDepartment").value = _UserGroup
    If DataTables("Users").SQLFind("name = '" & _UserName & "'") IsNot Nothing
        Dim pw As String = DataTables("Users").SQLFind("name = '" & _UserName & "'")("password")
        e.Form.Controls("txtPassword").Value = Functions.Execute("解密密码",pw)
    End If
Else
    e.Form.Controls("txtUserName").value = "李津晶"
    If DataTables("Users").SQLFind("name = '李津晶'") IsNot Nothing
        e.Form.Controls("cmbDepartment").value = DataTables("Users").SQLFind("name = '李津晶'")("group")
        Dim pw As String = DataTables("Users").SQLFind("name = '" & _UserName & "'")("password")
        e.Form.Controls("txtPassword").Value = Functions.Execute("解密密码",pw)
    End If
End If
Dim gpxz As WinForm.ComboBox = e.Form.Controls("cmbDepartment")
gpxz.ComboList = DataTables("组定义").SQLGetComboListString("组")

登录窗口_btnChat_Click

If  QQClient.Ready Then
    QQClient.OpenChatWindow()
End If

登录窗口_btnLogin_Click

If QQClient.Ready Then
    MessageBox.show("QQClient已经启动,请先关闭","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return
End If
Dim pw As String = e.Form.Controls("txtPassword").value   
QQClient.ServerIP = e.Form.Controls("txtIP").Value  '指定服务器IP地址
QQClient.ServerPort = e.Form.Controls("txtPort").Value  '指定服务器端口
QQClient.UserName = e.Form.Controls("cmbDepartment").text & "." & e.Form.Controls("txtUserName").text '指定登录用户名
QQClient.Password = Functions.Execute("解密密码",pw)
If QQClient.Start() = True '如果登录成功
    e.Form.Controls("btnChat").Enabled = True
    Dim msg As String =  "恭喜,内部通讯登录成功!"
    
    If QQClient.ServerMessage > "" Then '如果服务器返回了欢迎信息
        msg = msg & QQClient.ServerMessage
    End If
    e.Form.close()
    popMessage(msg,"提示",PopiconEnum.Infomation,5)
    
    If  QQClient.Ready Then
        QQClient.OpenChatWindow()
    End If
    
Else '如果登录失败,显示服务器返回错误信息
    e.Form.Controls("btnChat").Enabled = False
    PopMessage("登录失败,原因:" & vbcrlf & QQClient.ServerMessage,"提示",PopiconEnum.Error,5)
End If

登录窗口_btnStop_Click

If QQClient.Ready = True Then
    QQClient.Stop()
    e.Form.Controls("btnChat").Enabled = False
End If

底部栏_AfterLoad

Dim pc As WinForm.PictureBox = e.Form.Controls("PictureBox1")
pc.ImageFile = ProjectPath & "porexlogo.png"

底部栏_Button1_Click

If CurrentTable.AllowEdit = False
    e.Cancel = True
Else
    CurrentTable.AddNew
    CurrentTable.Position = CurrentTable.Rows.Count - 1
    CurrentTable.Current.Save
    If Forms.contains(CurrentTable.DataTable.Name)
        Forms(CurrentTable.DataTable.Name).Open
    End If
End If
'Select Case MainTable.name
'Case "POREX出差申请"
'Forms("POREX出差申请").open()
'Case "在线系统设计"
'Forms("在线系统设计").open()
'Case "订单管理"
'Forms("订单管理").open()
'Case "工作日志"
'Forms("工作日志").Open
'Case "客户管理"
'Forms("客户管理").Open
'Case "库存"
'Forms("库存").Open
'Case "项目管理"
'Forms("项目管理").Open
'Case "市场活动"
'Forms("市场活动").Open
'Case "话题"
'Forms("话题增加").Open
'Case "技术服务"
'Forms("技术服务").Open
'Case "联系人管理"
'Forms("联系人管理").Open
'Case "内部市场资料"
'Forms("内部市场资料").Open
'Case "行业动态"
'Forms("行业动态").open
'Case "产品管理"
'Forms("产品管理").open
'Case "报价"
'Forms("报价")
'Case "TMF系统"
'Forms("TMF系统")
'Case "POREX订单"
'Forms("POREX订单")
'Case "采购订单"
'If Forms("采购订单").
'Forms("采购订单").Open
'End If
'
'
'End Select
'End If

底部栏_Button10_Click

If CurrentTable.AllowEdit = False
    e.Cancel = True
Else
    Syscmd.Row.AddNews()
End If
CurrentTable.DataTable.Save

底部栏_Button2_Click

If CurrentTable.AllowEdit = False
    e.Cancel = True
Else
    If CurrentTable.Current IsNot Nothing
        Syscmd.Row.Delete()
    End If
End If

底部栏_Button3_Click

With CurrentTable
    .Position = .Position - 1
End With

底部栏_Button4_Click

With CurrentTable
    .Position = .Position + 1
End With

底部栏_Button5_Click

For Each dt As DataTable In DataTables
    dt.Save
Next
MessageBox.Show("保存完成","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)

底部栏_Button6_Click

CurrentTable.DataTable.Save
CurrentTable.DataTable.Load()
If Forms("侧边栏模块").Opened
    Forms("侧边栏模块").Close
    Forms("侧边栏模块").open
End If

底部栏_Button8_Click

With CurrentTable
    .Position = .Rows.Count - 1
End With

订单管理_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")
Dim lxr As WinForm.ComboBox = e.Form.Controls("ComboBox3联系人")
If kh.text = ""
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名")
Else
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名","公司='" & kh.text & "'")
End If


With Tables("订单管理.订单明细")
    .Cols("数量").GrandTotal = True 
    .Cols("金额").GrandTotal = True
    .GrandTotal = True
End With

xm.ContextStrip = e.Form.Strips("kj1")
kh.contextstrip = e.Form.Strips("kj2")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"

订单管理_Button1_Click

If user.Type = UserTypeEnum.User
    If _UserName = Tables("订单管理").Current("用户名")
        Tables("订单管理.订单明细").AddNew
    Else
        Return
    End If
Else
    Tables("订单管理.订单明细").AddNew
End If

订单管理_Button6_Click

Dim dr As Row = Tables("订单管理").Current

Dim tm As String  = ProjectPath & "Attachments\合同模板.doc" '指定模板文件
Dim fl As String = ProjectPath & "Reports\订单报价等\" & dr("订单编号") & dr("客户") & ".doc" '指定目标文件
Dim wrt As New WordReport(Tables("订单管理"),tm,fl) '定义一个WordReport
wrt.Build() '逐行生成报表
wrt.Show() '显示报表

订单管理_ComboBox3联系人_Enter

Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim lxr As WinForm.ComboBox = e.Form.Controls("ComboBox3联系人")
If kh.text = ""
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名")
Else
    lxr.ComboList = DataTables("联系人管理").GetComboListString("姓名","公司='" & kh.text & "'")
End If

订单管理_ComboBox3联系人_TextChanged

Dim lxr As WinForm.ComboBox = e.Form.Controls("ComboBox3联系人")
Dim dh As WinForm.TextBox = e.Form.Controls("TextBox5电话")
If lxr.text = ""
    dh.value = ""
Else
    Dim dr As DataRow = DataTables("联系人管理").Find("姓名 ='" & lxr.text & "'")
    If dr IsNot Nothing
        dh.value = dr("手机1")
    End If
End If

订单管理_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

订单管理_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

订单明细_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")



lx.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")

If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

订单明细_ComboBox2品牌_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")
If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

订单明细_ComboBox3型号_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox2品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox3型号")

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

订单明细_Enter

If user.Type = UserTypeEnum.User
    Dim tbn As String = CurrentTable.DataTable.Name
    Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
    If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
        For Each x As WinForm.Control In e.Form.controls
            x.ReadOnly = BooleanEnum.True
        Next
    End If
    Select Case tbn
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","项目管理","订单明细","市场活动","技术服务"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

订单明细_ItemClick

Functions.Execute("itemclick",e,"ComboBox5项目","ComboBox4客户")

发票汇总_Button1_Click

Dim Book As New XLS.Book(ProjectPath & "Attachments\弗杰报销格式.xlsx")
Dim dr As Row
dr = Tables("发票汇总").Current
Dim fl As String = ProjectPath & "Reports\" & dr("报销编号") & "报销汇总.xlsx"

If dr IsNot Nothing
    book.AddDataTable("发票汇总","TMFGROUP","Select * from {发票汇总} where 报销编号 ='" & dr("报销编号") & "'") '添加父表
    book.Build()
    book.Save(fl)
    Dim Proc As New Process '打开工作簿
    Proc.File = fl
    Proc.Start()
End If

分组及角色_AfterLoad

Dim ls1 As WinForm.ListBox = e.Form.Controls("ListBox1组")
For Each dr As DataRow In DataTables("组定义").DataRows
ls1.Items.Add(dr("组"))
Next

Dim ls2 As WinForm.ListBox = e.Form.Controls("ListBox2角色")
For Each dr As DataRow In DataTables("角色定义").DataRows
ls2.Items.Add(dr("角色"))
Next

分组及角色_Button1_Click

DataTables("组定义").Save()
DataTables("角色定义").Save()

DataTables("用户权限").DeleteFor("")
If DataTables("组").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("组").DataRows
        If DataTables("组用户").Select("[组] ='" & dr1("组") & "'").Count > 0
            For Each dr2 As DataRow In DataTables("组用户").Select("[组] ='" & dr1("组") & "'")
                Dim newdr As DataRow = DataTables("用户权限").AddNew
                newdr("模块名称") = dr1("模块名称")
                newdr("权限名称") = dr1("权限名称")
                newdr("用户") = dr2("用户")
            Next
        End If
    Next
End If
If DataTables("角色").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("角色").DataRows
        If DataTables("角色用户").Select("[角色] ='" & dr1("角色") & "'").Count > 0
            For Each dr2 As DataRow In DataTables("角色用户").Select("[角色] ='" & dr1("角色") & "'")
                Dim newdr As DataRow = DataTables("用户权限").AddNew
                newdr("模块名称") = dr1("模块名称")
                newdr("权限名称") = dr1("权限名称")
                newdr("用户") = dr2("用户")
            Next
        End If
    Next
End If
If DataTables("用户").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("用户").DataRows
        Dim newdr As DataRow = DataTables("用户权限").AddNew
        newdr("模块名称") = dr1("模块名称")
        newdr("权限名称") = dr1("权限名称")
        newdr("用户") = dr1("用户")
    Next
End If

Tables("用户权限").RepeatFilter("去重",2)
DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
Tables("用户权限").Filter = ""

DataTables("侧边栏设置").DeleteFor("")
For Each dr1 As DataRow In DataTables("用户权限").DataRows
    For Each dr2 As DataRow In DataTables("模块分配").Select("[模块名称] = '" & dr1("模块名称") & "'")
        Dim newdr As DataRow = DataTables("侧边栏设置").AddNew
        newdr("用户") = dr1("用户")
        newdr("模块名称") = dr1("模块名称")
        newdr("数据表名") = dr2("表名")
    Next
Next

e.Form.Close()

分组及角色_Button2_Click

Forms("新增组").Open

分组及角色_Button3_Click

Dim r As dialogResult = MessageBox.Show("不可恢复,确认删除?请注意,所有与此组相关的权限配置都会被移除,请慎重操作!","提示",MessageBoxButtons.YesNo,MessageBoxIcon.Warning)
If r = DialogResult.Yes
    Dim ls As WinForm.ListBox = e.Form.Controls("ListBox1组")
    If ls.SelectedItem IsNot Nothing
        Dim gp As String = ls.SelectedItem
        '删除Users表中此组分配
        For Each dr As DataRow In DataTables("users").DataRows
            If dr("Group") = gp
                dr("Group") = ""
            End If
        Next
        '删除此分组的权限
        DataTables("组").DeleteFor("[组] = '" & gp &"'")
        DataTables("组").Save
        '删除组用户中相关用户行
        DataTables("组用户").DeleteFor("[组] = '" & gp &"'")
        DataTables("组用户").Save
        
        
        '删除此角色并刷新listbox
        DataTables("组定义").DeleteFor("[组] ='" & gp & "'")
    End If
End If
Forms("分组及角色").Close
Forms("分组及角色").open

分组及角色_Button4_Click

Forms("新增角色").Open

分组及角色_Button5_Click

Dim r As dialogResult = MessageBox.Show("不可恢复,确认删除?请注意,所有与此角色相关的权限配置都会被移除,请慎重操作!","提示",MessageBoxButtons.YesNo,MessageBoxIcon.Warning)
If r = DialogResult.Yes
    Dim ls As WinForm.ListBox = e.Form.Controls("ListBox2角色")
    If ls.SelectedItem IsNot Nothing
        Dim rl As String = ls.SelectedItem
        '删除此分组的权限
        DataTables("角色").DeleteFor("[角色] = '" & rl &"'")
        DataTables("角色").Save
        '删除角色用户中此角色的用户行
        DataTables("角色用户").DeleteFor("[角色] = '" & rl &"'")
        DataTables("角色用户").Save
        
        '根据角色用户表重新生成users表中用户角色配置
        For Each dr As DataRow In DataTables("users").DataRows
            Dim ur As String = dr("name")
            Dim yhrl As String = ""
            If DataTables("角色用户").Select("[用户] = '" & ur & "'").Count > 0
                For Each rldr As DataRow In DataTables("角色用户").Select("[用户] = '" & ur & "'")
                    Dim x As String = rldr("角色") & ","
                    yhrl = yhrl.Insert(0,x)
                Next
                dr("Role") = yhrl
            End If
        Next
        
        '删除此角色并刷新listbox
        DataTables("角色定义").DeleteFor("[角色] ='" & rl & "'")
    End If
End If
Forms("分组及角色").Close
Forms("分组及角色").open

更改用户_AfterLoad

Dim us As WinForm.TextBox = e.Form.Controls("UserName")
Dim gp As WinForm.ComboBox = e.Form.Controls("UserGroup")
Dim rl As WinForm.CheckedComboBox = e.Form.Controls("UserRole")
Dim hbdx As WinForm.ComboBox = e.Form.Controls("汇报对象")
Dim pwd As WinForm.TextBox = e.Form.Controls("PassWord")
Dim email As WinForm.TextBox = e.Form.Controls("email")

gp.ComboList = DataTables("组定义").GetComboListString("组")
rl.ComboList = DataTables("角色定义").GetComboListString("角色")

If Forms("用户管理").Opened Then '正常打开
    Dim tv As WinForm.TreeView = Forms("用户管理").Controls("TreeView1")
    us.Value = tv.SelectedNode.Text
    e.Form.Controls("UserName").Enabled = False
Else
    Return
End If

Dim dr As DataRow = DataTables("users").SQLFind("name ='" & us.Value & "'")
If dr IsNot Nothing
    gp.text = dr("group")
    rl.text = dr("role")
    hbdx.text = dr("汇报对象")
    pwd.text = Functions.Execute("解密密码",dr("password"))
    email.text = dr("email")
Else
    MessageBox.Show("用户不存在或者已经被删除!","提示",MessageBoxButtons.OK)
    e.Form.Close()
End If

更改用户_Button1_Click

Dim tv As WinForm.TreeView = Forms("用户管理").Controls("TreeView1")
Dim UserName As String = e.Form.Controls("UserName").text
Dim UserGroup As String  = e.Form.Controls("UserGroup").text
Dim PassWord As String = e.Form.Controls("PassWord").text
Dim UserRole As String = e.Form.Controls("UserRole").text
Dim email As String = e.Form.Controls("email").text
Dim hbdx As String = e.Form.Controls("汇报对象").text
Dim cmd As New SQLCommand
cmd.ConnectionName = "TMFGROUP"
If UserName = "" OrElse UserGroup = "" Then
    Messagebox.show("请输入用户名和用户分组!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return
End If
cmd.CommandText = "Update {Users} Set [Group] = '" & UserGroup &"',[汇报对象] = '" & hbdx
cmd.CommandText = cmd.CommandText & "', [Password] = '" & Functions.Execute("加密密码",password) & "',[Role] = '" & UserRole & "',[email] = '" & email & "' Where [Name]= '" & UserName & "'"
If cmd.ExecuteNonQuery = 1 Then '返回1表示更改成功
    tv.BuildTree("组织架构","Level1|Level2|Level3|Level4|Level5|Level6|Level7")
    tv.ExpandAll
    Dim trv As WinForm.TreeView =  Forms("用户管理").Controls("TreeView1")
    For Each nd As WinForm.TreeNode In trv.AllNodes
        If nd.Level > 0 AndAlso nd.Text = UserName
            trv.SelectedNode = nd
            Exit For
        End If
    Next
    e.Form.Close
    '组用户表更新
    DataTables("组用户").load()
    DataTables("角色用户").load()
    DataTables("组用户").DeleteFor("[用户] = '" & UserName & "'")
    Dim newdr1 As DataRow = DataTables("组用户").addnew
    newdr1("组") = UserGroup
    newdr1("用户") = UserName
    '角色用户表更新
    DataTables("角色用户").DeleteFor("[用户] ='" & UserName & "'")
    If UserRole IsNot Nothing
        For Each u As String In UserRole.Split(",")
            Dim newdr2 As DataRow = DataTables("角色用户").addnew
            newdr2("角色") = u
            newdr2("用户") = UserName
        Next
    End If
    
    '更新此用户权限(根据组和角色变化)
    DataTables("用户权限").DeleteFor("[用户] ='" & UserName & "'")
    
    '如果是管理者则创建全部可编辑权限
    If UserRole.Contains("管理者")
        For Each dr As DataRow In DataTables("权限字段管理").DataRows
            Dim newdr = DataTables("用户权限").AddNew
            newdr("模块名称") = dr("模块名称")
            newdr("权限名称") = "可编辑"
            newdr("用户") = UserName
        Next
        Tables("用户权限").RepeatFilter("去重",2)
        DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
        Tables("用户权限").Filter = ""
        DataTables("用户权限").Save
    Else
        '根据所属分组权限配置此用户权限
        For Each dr As DataRow In DataTables("组").DataRows
            If dr("组") = UserGroup
                Dim newdr = DataTables("用户权限").AddNew
                newdr("用户") = UserName
                newdr("模块名称") = dr("模块名称")
                newdr("权限名称") = dr("权限名称")
            End If
        Next
        
        '根据所属角色所属权限配置此用户权限
        For Each rl As String In UserRole.Split(",")
            For Each dr As DataRow In DataTables("角色").DataRows
                If dr("角色") = rl
                    Dim newdr = DataTables("用户权限").AddNew
                    newdr("用户") = UserName
                    newdr("模块名称") = dr("模块名称")
                    newdr("权限名称") = dr("权限名称")
                End If
            Next
        Next
        Tables("用户权限").RepeatFilter("去重",2)
        DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
        Tables("用户权限").Filter = ""
        DataTables("用户权限").Save
    End If
Else
    Messagebox.show("更改用户失败!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
End If
DataTables("Users").Save()
DataTables("Users").Load()

更改用户_Button2_Click

e.Form.Close

更改用户_汇报对象_Enter

Dim gp As WinForm.ComboBox = e.Form.Controls("UserGroup")
Dim hbdx As WinForm.ComboBox = e.Form.Controls("汇报对象")
If gp.text = ""
    MessageBox.Show("请为用户指定分组","提示",MessageBoxButtons.OK,MessageBoxIcon.Error)
Else
    hbdx.ComboList = "无|" & DataTables("users").SQLGetComboListString("Name")
End If

更改用户_汇报对象_ValueChanged

Dim hbdx As String = e.Sender.Value
Dim us As String = e.Form.Controls("UserName").value
If DataTables("上下级关系").SQLFind("上级 = '" & us & "' and 下级 ='" & hbdx & "'") IsNot Nothing
    e.Sender.Text = ""
    MessageBox.Show("此汇报对象为本用户现有下属,不能向其汇报.如需修改请先修改此汇报对象的汇报线.")
ElseIf hbdx = us
    e.Sender.Text = ""
    MessageBox.Show("不能向本人汇报.")
End If

工作日志_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1工作类型")

Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")
Dim nr As WinForm.TextBox = e.Form.Controls("TextBox内容")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"
lx.ComboList = DataTables("辅助").SQLGetComboListString("工作类型","","辅助排序")

xm.ContextStrip = e.Form.Strips("kj1")
kh.contextstrip = e.Form.Strips("kj2")
Dim yh As WinForm.TextBox = e.Form.Controls("TextBox1用户")
yh.Enabled = False

工作日志_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

工作日志_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

话题讨论_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next

话题讨论_Enter

If user.Type = UserTypeEnum.User
    Dim tbn As String = CurrentTable.DataTable.Name
    Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
    If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
        For Each x As WinForm.Control In e.Form.controls
            x.ReadOnly = BooleanEnum.True
        Next
    End If
    Select Case tbn
        Case "POREX出差申请","TMF方案","话题","话题讨论","发票明细","发票汇总","在线系统设计","水质","工作日志","库存","联系人管理","客户管理","订单管理","项目管理","订单明细","市场活动","技术服务"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

话题讨论_ItemClick

Select Case e.StripItem.Name
    Case "previous"
        '代码
        With CurrentTable
            .Position = .Position - 1
        End With
        
    Case "next"
        '代码
        With CurrentTable
            .Position = .Position + 1
        End With
    Case "close"
        '代码
        e.Form.Close
    Case "Save"
        e.Form.Controls("Label1").Select
        CurrentTable.Current.Save
    Case  "new"
        Dim tbn As String = CurrentTable.DataTable.Name
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") IsNot Nothing
            '代码
            e.Form.Controls("Label1").Select
            
            '代码
            CurrentTable.AddNew
            With CurrentTable
                .Position = .Rows.Count - 1
            End With
        End If
    Case "delete"
        If CurrentTable.AllowEdit = False
            MessageBox.Show("您无权删除此信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.Warning)
        Else
            If CurrentTable.Current IsNot Nothing
                Syscmd.Row.Delete()
            End If
        End If
    Case "project"
        Dim xm As WinForm.ComboBox = e.Form.Controls("ComboBox1项目名称")
        Dim pj As String = xm.text
        With Tables("项目管理")
            Dim r As Integer
            r = .FindRow("业主 = '" & pj & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                'MainTable = Tables("项目管理")
                .Position = r '定位到找到的行.
                Forms("项目管理").Open
                
            Else
                MessageBox.Show("没有找到相关项目记录","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
    Case "customer"
        Dim kh As WinForm.ComboBox = e.Form.Controls("ComboBox1公司")
        Dim khs As String = kh.text
        Dim kh1 As String = khs.Split(",")(0)
        With Tables("客户管理")
            Dim r As Integer
            r = .FindRow("公司 = '" & kh1 & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                'MainTable = Tables("客户管理")
                .Position = r '定位到找到的行.
                Forms("客户管理").Open
                
            Else
                MessageBox.Show("没有找到相关客户信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
End Select

话题增加_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
b.Font = fn
Next
Dim yhm As WinForm.TextBox = e.Form.Controls("TextBox1用户名")
Dim bh As WinForm.TextBox = e.Form.Controls("TextBox2编号")
Dim sj As WinForm.DateTimePicker = e.Form.Controls("DateTimePicker1时间")
yhm.Enabled = False
bh.Enabled = False
sj.Enabled = False


Dim zt As WinForm.ComboBox = e.Form.Controls("ComboBox1主题")
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")

zt.ComboList = DataTables("辅助").SQLGetComboListString("话题主题","","辅助排序")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"
xm.ContextStrip = e.Form.Strips("kj1")
kh.contextstrip = e.Form.Strips("kj2")

话题增加_Button1_Click

Tables("话题.话题讨论").AddNew

话题增加_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

话题增加_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

记录窗口_AfterLoad

e.Form.Controls("RecordGrid1").Table = CurrentTable
e.Form.Controls("RecordGrid1").Build()

技术服务_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim xm As WinForm.ComboBox = e.Form.Controls("ComboBox2项目")
Dim kh As WinForm.ComboBox = e.Form.Controls("ComboBox3客户")
lx.ComboList = DataTables("辅助").SQLGetComboListString("技术服务类型","","辅助排序")
xm.ComboList = DataTables("项目管理").SQLGetComboListString("业主")
kh.ComboList = DataTables("客户管理").SQLGetComboListString("公司")

xm.ContextStrip = e.Form.Strips("kj1")
kh.contextstrip = e.Form.Strips("kj2")

Dim fm As WinForm.FileManager = e.Form.Controls("FileManager1")
Dim ftp As new FTPClient
ftp.Host ="121.196.217.52"
ftp.Account = "tmfftp"
ftp.Password = "Porex321"
ftp.Uploadenabled = True
ftp.DownloadEnabled = True
ftp.RenameEnabled = False
ftp.MakerDirEnabled = False

Dim pjnm As WinForm.ComboBox = e.Form.Controls("ComboBox2项目")
Dim rt1 As String = "\公共网盘\项目\" & pjnm.text
Dim rt2 As String = "\公共网盘\项目\" & pjnm.text & "\技术服务"
If pjnm.text IsNot Nothing AndAlso ftp.DirExists(rt1) = True Then
    If ftp.DirExists(rt2) = True
        ftp.RootDir = rt2
    Else
        ftp.MakeDir(rt2)
        ftp.RootDir = rt2
    End If
Else
    ftp.MakeDir(rt1)
    ftp.MakeDir(rt2)
    ftp.RootDir = rt2
End If

fm.FTPclient = ftp

fm.ClearCommand.visible = False
fm.AddFolderCommand.visible = False
If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
    fm.ManagerCommand.visible = False
Else
    fm.ManagerCommand.visible = True
End If

技术服务_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

技术服务_ItemClick

Functions.Execute("itemclick",e,"ComboBox2项目","ComboBox3客户")

技术服务_TabControl1_SelectedIndexChanged

'利用TabControl以获得事件 SelectedIndexChanged,用于控制filemanager


Dim tbc As WinForm.TabControl = e.Form.Controls("TabControl1")
Dim pjnm As String = e.Form.Controls("ComboBox2项目").text
If pjnm <> "" AndAlso tbc.SelectedPage.Name = "ym2"
    Dim ftp As new FTPClient
    ftp.Host = _host
    ftp.Account = _ftpus
    ftp.Password = _ftppwd
    ftp.Uploadenabled = True
    ftp.DownloadEnabled = True
    ftp.RenameEnabled = False
    ftp.MakerDirEnabled = False
    Dim rt1 As String = "/项目/" & pjnm
    Dim rt2 As String = rt1 & "/技术服务"
    If ftp.DirExists(rt1) AndAlso pjnm IsNot Nothing
        If ftp.DirExists(rt2) = False
            ftp.MakeDir(rt2)
        End If
        ftp.RootDir = rt2
    Else
        ftp.MakeDir(rt1)
        ftp.MakeDir(rt2)
        ftp.RootDir = rt2
    End If
    
    'Dim fls As List(of String) =  ftp.GetFileList("/项目") 'ftp.GetFileList("/项目/*.*")
    
    'For Each fl As String In fls
    'fm.AddFile(fl)
    'Next
    Dim fm As WinForm.FileManager = e.Form.Controls("FileManager1")
    fm.FTPclient = ftp
    fm.ClearCommand.visible = False
    fm.AddFolderCommand.visible = False
    If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
        fm.ManagerCommand.visible = False
    Else
        fm.ManagerCommand.visible = True
    End If
ElseIf pjnm = "" AndAlso tbc.SelectedPage.Name = "ym2"
    MessageBox.Show("请选择对应项目!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
End If

客户管理_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox2省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox3城市")
Dim x As String = sf.Value

lx.ComboList = DataTables("辅助").SQLGetComboListString("客户类型","","辅助排序")
sf.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")

cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市")

客户管理_ComboBox2省份_TextChanged

Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox2省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox3城市")
cs.Combolist = DataTables("全国城市").GetComboListString("地级市","[省或直辖市] = '" & sf.Text & "'")

客户管理_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

客户管理_ItemClick

Functions.Execute("itemclick",e,"Table1项目","Label12")

客户管理_TabControl1_SelectedIndexChanged

Dim tbc As WinForm.TabControl = e.Form.Controls("TabControl1")

Dim xm As WinForm.TextBox = e.Form.Controls("TextBox1")
If xm.text <> ""
    If tbc.SelectedPage.Name = "ym2"
        Tables("客户管理_Table1联系人").Filter = "公司 ='" & xm.text & "'"
        
    ElseIf tbc.SelectedPage.Name = "ym3"
        Tables("客户管理_Table1日志").Filter = "相关客户 ='" & xm.text & "'"
        
    ElseIf tbc.SelectedPage.Name = "ym4"
        
        Tables("客户管理_Table1项目").Filter = "工程公司 ='" & xm.text & "' OR 总包='" & xm.text & "'"
        
    ElseIf tbc.SelectedPage.Name = "ym5"
        
        Tables("客户管理_Table1订单").Filter = "客户 ='" & xm.text & "'"
        
    ElseIf tbc.SelectedPage.Name = "ym6"
        
        Tables("客户管理_Table1报价").Filter = "客户 ='" & xm.text & "'"
    End If
End If

客户下拉框_AfterLoad

Dim cmd As new SQLCommand
cmd.ConnectionName = "TMFGROUP"
cmd.CommandText = "Select [公司] from {客户管理}"
Dim dt As DataTable = cmd.ExecuteReader
Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
tv.BuildTree("客户管理","省份|公司")
tv.ExpandAll

客户下拉框_Button5搜索_Click

Dim txt As String = e.Form.Controls("TextBox1").value
If txt = ""
    Return
Else
    Dim trv As WinForm.TreeView =  e.Form.Controls("TreeView1")
    Dim Start As Integer
    Dim idx As Integer = - 1
    If trv.SelectedNode IsNot Nothing Then '获取当前节点位置.
        Dim FullName As String = trv.SelectedNode.FullName
        For i As Integer = 0 To trv.AllNodes.count - 1
            If trv.AllNodes(i).FullName = FullName  Then
                Start = i
                Exit For
            End If
        Next
    End If
    For i As Integer = Start + 1 To trv.AllNodes.count - 1  '从当前节点的下一个节点开始查找
        Dim nd As WinForm.TreeNode = trv.AllNodes(i)
        If nd.Text.IndexOf(txt) >= 0 Then
            trv.SelectedNode = nd
            nd.EnsureVisible
            idx = i '将找到的位置复制给变量idx
            Exit For
        End If
    Next
    If  idx = -1 Then 'idx的值如果等于初始值-1,表示没有找到下一个符合条件的节点,那么从第一个节点开始重新查找.
        For i As Integer = 0 To Start - 1
            Dim nd As WinForm.TreeNode = trv.AllNodes(i)
            If nd.Text.IndexOf(txt) >= 0 Then
                trv.SelectedNode = nd
                nd.EnsureVisible
                Exit For
            End If
        Next
    End If
    trv.Select()
End If

客户下拉框_DropDownOpened

e.Form.Controls("TextBox1").Select

客户下拉框_TextBox1_TextChanged

Dim txt As String = e.Form.Controls("TextBox1").text
Dim trv As WinForm.TreeView =  e.Form.Controls("TreeView1")
For Each nd As WinForm.TreeNode In trv.AllNodes
    If nd.Level > 0 AndAlso nd.Text.Contains(txt)
            trv.SelectedNode = nd
        Exit For
    End If
Next

客户下拉框_TreeView1_NodeMouseDoubleClick

If e.Node.Level > 0 Then '如果单击的是第二层节点
    e.Form.DropDownBox.Value = e.Node.text  '这行不是多余的,省略此行,无法在表中正常使用此下拉窗口输入数据.
    e.Form.DropDownBox.CloseDropdown()
End If

库存_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")
Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox3省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox4城市")

xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"
sf.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市")
xm.ContextStrip = e.Form.Strips("kj1")
kh.contextstrip = e.Form.Strips("kj2")
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1产品类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox1品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox2型号")
Dim ckk As WinForm.ComboBox = e.Form.Controls("ComboBox1仓库")
ckk.ComboList = DataTables("辅助").SQLGetComboListString("仓库")

lx.ComboList = DataTables("产品管理").SQLGetComboListString("产品类型")

If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

库存_ComboBox1品牌_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1产品类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox1品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox2型号")


If lx.text = ""
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌")
Else
    pp.ComboList = DataTables("产品管理").SQLGetComboListString("品牌","产品类型 ='" & lx.text & "'")
End If

库存_ComboBox2型号_Enter

Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1产品类型")
Dim pp As WinForm.ComboBox = e.Form.Controls("ComboBox1品牌")
Dim xh As WinForm.ComboBox = e.Form.Controls("ComboBox2型号")

If pp.text = ""
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","")
Else
    xh.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号","品牌 ='" & pp.text & "'")
End If

库存_ComboBox3省份_TextChanged

Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox3省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox4城市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & sf.Text & "'")

库存_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

库存_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

库存_NumericComboBox1_TextChanged

Dim rk As WinForm.NumericComboBox = e.Form.Controls("NumericComboBox1")
Dim ck As WinForm.NumericComboBox = e.Form.Controls("NumericComboBox2")
If rk.text > ""
ck.Enabled = False
ck.BackColor = Color.gray
Else
ck.Enabled = True
ck.BackColor = color.white
End If

库存_NumericComboBox2_TextChanged

Dim rk As WinForm.NumericComboBox = e.Form.Controls("NumericComboBox1")
Dim ck As WinForm.NumericComboBox = e.Form.Controls("NumericComboBox2")
If ck.text > ""
rk.Enabled = False
rk.BackColor = Color.gray
Else
rk.Enabled = True
rk.BackColor = Color.white
End If

联系人管理_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox1省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox2城市")
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")

sf.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市")

kh.contextstrip = e.Form.Strips("kj2")
kh.DropFormName = "客户下拉框"

联系人管理_ComboBox1省份_TextChanged

Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox1省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox2城市")
cs.Combolist = DataTables("全国城市").GetComboListString("地级市","[省或直辖市] = '" & sf.Text & "'")

联系人管理_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

联系人管理_ItemClick

Functions.Execute("itemclick",e,"Label1","ComboBox1公司")

内部市场资料_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
lx.ComboList = DataTables("辅助").SQLGetComboListString("内部资料分类","","辅助排序")

内部市场资料_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

内部市场资料_ItemClick

Functions.Execute("itemclick",e,"ComboBox1项目名称","ComboBox1公司")

内部市场资料_TabControl1_SelectedIndexChanged

'利用TabControl以获得事件 SelectedIndexChanged,用于控制filemanager
'二级目录必须先创建1级目录


Dim tbc As WinForm.TabControl = e.Form.Controls("TabControl1")
Dim pjnm As String = e.Form.Controls("ComboBox1类型").text
If pjnm <> ""
    If tbc.SelectedPage.Name = "ym2"
        Dim ftp As new FTPClient
        ftp.Host = _host
        ftp.Account = _ftpus
        ftp.Password = _ftppwd
        ftp.Uploadenabled = True
        ftp.DownloadEnabled = True
        ftp.RenameEnabled = False
        ftp.MakerDirEnabled = False
        Dim rt1 As String = "/市场/市场资料/" & pjnm
        If ftp.DirExists(rt1) AndAlso pjnm IsNot Nothing
            ftp.RootDir = rt1
        Else
            ftp.MakeDir(rt1)
            ftp.RootDir = rt1
        End If
        
        Dim fm As WinForm.FileManager = e.Form.Controls("FileManager1")
        fm.FTPclient = ftp
        fm.ClearCommand.visible = False
        fm.AddFolderCommand.visible = False
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            fm.ManagerCommand.visible = False
        Else
            fm.ManagerCommand.visible = True
        End If
    End If
End If

权限字段管理_Button1_Click

DataTables("权限字段管理").Save
DataTables("模块分配").DataCols("模块名称").RaiseDataColChanged
DataTables("侧边栏设置").DataCols("模块名称").RaiseDataColChanged

市场活动_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox2省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox3城市")
Dim zt As WinForm.ComboBox = e.Form.Controls("ComboBox1主题")
lx.ComboList = DataTables("辅助").SQLGetComboListString("市场活动类型","","辅助排序")
sf.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市")
zt.ComboList = DataTables("辅助").SQLGetComboListString("市场活动主题","","辅助排序")

市场活动_ComboBox2省份_TextChanged

Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox2省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox3城市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & sf.Text & "'")

市场活动_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    'Select Case tbn
        'Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","技术服务","行业动态"
            'If _UserName <> CurrentTable.Current("用户名")
                'For Each x As WinForm.Control In e.Form.controls
                    'x.ReadOnly = BooleanEnum.True
                'Next
            'End If
    'End Select
End If

市场活动_ItemClick

Functions.Execute("itemclick",e,"Label11","Label12")

市场活动_TabControl1_SelectedIndexChanged

Dim tbc As WinForm.TabControl = e.Form.Controls("TabControl1")


Dim std As WinForm.DateTimePicker = e.Form.Controls("DateTimePicker1开始时间")
Dim hdmc As WinForm.TextBox = e.Form.Controls("TextBox1名称")

If tbc.SelectedPage.Name = "ym2"
    If std.Value Is Nothing OrElse hdmc.Value = ""
        MessageBox.Show("请输入活动开始时间和活动名称,不然无法连接服务器.")
    Else
        Dim pjnm As String = Format(std.Value,"yyyyMMdd") & hdmc.Value
        Dim ftp As new FTPClient
        ftp.Host = _host
        ftp.Account = _ftpus
        ftp.Password = _ftppwd
        ftp.RenameEnabled = True
        
        Dim rt1 As String = "/市场/市场活动/" & pjnm & "/"
        If ftp.DirExists(rt1)
            ftp.RootDir = rt1
        Else
            ftp.MakeDir(rt1)
            ftp.RootDir = rt1
        End If
        'ftp.MakerDirEnabled = False
        Dim fm As WinForm.FileManager = e.Form.Controls("FileManager1")
        fm.FTPclient = ftp
        fm.ClearCommand.visible = False
        fm.AddFolderCommand.visible = False
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            fm.ManagerCommand.visible = False
        Else
            fm.ManagerCommand.visible = True
        End If
    End If
End If

授权_AfterLoad

Dim fz As WinForm.CheckedComboBox = e.Form.Controls("CheckedComboBox1分组")
Dim js As WinForm.CheckedComboBox = e.Form.Controls("CheckedComboBox2角色")
Dim yh As WinForm.CheckedComboBox = e.Form.Controls("CheckedComboBox3用户")
Dim mk As WinForm.ComboBox = e.Form.Controls("ComboBox1模块")
Dim qx As WinForm.ComboBox = e.Form.Controls("ComboBox2权限")

fz.ComboList = DataTables("组定义").GetComboListString("组")
js.ComboList = DataTables("角色定义").GetComboListString("角色")
yh.ComboList = DataTables("users").GetComboListString("name")
mk.ComboList = DataTables("权限字段管理").GetComboListString("模块名称")
qx.ComboList = DataTables("权限字段管理").GetComboListString("权限名称")

授权_Button1_Click

Dim mk As String = e.Form.Controls("ComboBox1模块").text
Dim qx As String = e.Form.Controls("ComboBox2权限").text
Dim fzs As String = e.Form.Controls("CheckedComboBox1分组").text
Dim jss As String = e.Form.Controls("CheckedComboBox2角色").text
Dim yhs As String = e.Form.Controls("CheckedComboBox3用户").text

If mk = "" OrElse qx = ""
    MessageBox.Show("请选择权限名称和模块名称!","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.Error)
ElseIf DataTables("授权").Select("权限名称 ='" & qx & "' and 模块名称 = '" & mk & "'").Count > 1
    MessageBox.Show("已存在相同权限配置!如需编辑请采用编辑功能.","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.Error)
    Tables("授权").Current.Delete
    e.Form.Close
Else
    DataTables("授权").save
    DataTables("组").DeleteFor("[模块名称] = '" & mk & "' and [权限名称] = '" & qx & "'")
    DataTables("角色").DeleteFor("[模块名称] = '" & mk & "' and [权限名称] = '" & qx & "'")
    DataTables("用户").DeleteFor("[模块名称] = '" & mk & "' and [权限名称] = '" & qx & "'")
    
    If fzs > ""
        For Each fz As String In fzs.Split(",")
            Dim newdr As DataRow = DataTables("组").AddNew
            newdr("组") = fz
            newdr("模块名称") = mk
            newdr("权限名称") = qx
        Next
    End If
    
    If jss > ""
        For Each js As String In jss.Split(",")
            Dim newdr As DataRow = DataTables("角色").AddNew
            newdr("角色") = js
            newdr("模块名称") = mk
            newdr("权限名称") = qx
        Next
    End If
    
    If yhs > ""
        For Each yh As String In yhs.Split(",")
            Dim newdr As DataRow = DataTables("用户").AddNew
            newdr("用户") = yh
            newdr("模块名称") = mk
            newdr("权限名称") = qx
        Next
    End If
    e.form.Close
    
    If DataTables("授权").Select("[模块名称] ='" & mk & "' and [权限名称] = '" & qx & "'").Count = 2
        DataTables("授权").find("模块名称 ='" & mk & "' and 权限名称 = '" & qx & "'").Delete
    End If
End If

授权_Button2_Click

e.Form.Close

授权_Button5_Click

Dim fz As WinForm.CheckedComboBox = e.Form.Controls("CheckedComboBox1分组")
fz.text = ""
fz.Select

授权_Button6_Click

e.Form.Controls("CheckedComboBox2角色").text = ""
e.Form.Controls("CheckedComboBox2角色").Select

授权_Button7_Click

e.Form.Controls("CheckedComboBox3用户").text = ""
e.Form.Controls("CheckedComboBox3用户").Select

授权_CheckedComboBox3用户_TextChanged

Dim yh As WinForm.CheckedComboBox = e.Form.Controls("CheckedComboBox3用户")
If yh.text = "清空"
yh.value = ""
End If

授权设置_AfterLoad

Dim tv1 As WinForm.TreeView = e.Form.Controls("分组用户")
tv1.BuildTree("组用户","组|用户")
tv1.Nodes.Insert("全部用户",0)
Dim tv2 As WinForm.TreeView = e.Form.Controls("角色用户")
tv2.BuildTree("角色用户","角色|用户")
tv2.Nodes.Insert("全部用户",0)

Dim tv3 As WinForm.TreeView = e.Form.Controls("分组权限")
tv3.BuildTree("组","组|权限名称|模块名称")


Dim tv4 As WinForm.TreeView = e.Form.Controls("角色权限")
tv4.BuildTree("角色","角色|权限名称|模块名称")


Dim tv5 As WinForm.TreeView = e.Form.Controls("用户权限")
tv5.BuildTree("用户权限","用户|权限名称|模块名称")

Dim tv6 As WinForm.TreeView = e.Form.Controls("TreeView授权")
tv6.BuildTree("权限字段管理","模块名称")
tv6.Nodes.Insert("全部",0)
For Each qx As String In DataTables("权限字段管理").GetValues("权限名称","权限名称 is not null")
tv6.Nodes.Insert(qx,1)
Next

Dim tv7 As WinForm.TreeView = e.Form.Controls("权限归属")
tv7.BuildTree("用户权限","模块名称|权限名称|用户")

Dim tv8 As WinForm.TreeView = e.Form.Controls("TreeView1模块分配")
tv8.BuildTree("模块分配","模块名称")
tv8.Nodes.Insert("全部",0)

Dim btn As WinForm.Button = e.Form.Controls("Button1刷新")
If user.Type = UserTypeEnum.User
btn.Visible = False
End If

授权设置_Button1_Click

Dim tv1 As WinForm.TreeView = e.Form.Controls("分组权限")
Dim tv2 As WinForm.TreeView = e.Form.Controls("角色权限")
Dim tv3 As WinForm.TreeView = e.Form.Controls("用户权限")
Dim tv4 As WinForm.TreeView = e.Form.Controls("权限归属")
static i As Integer = 1
If i Mod 2 = 1
    tv1.ExpandAll
    tv2.ExpandAll
    tv3.ExpandAll
    tv4.ExpandAll
    i = i + 1
Else
    tv1.CollapseAll
    tv2.CollapseAll
    tv3.CollapseAll
    tv4.CollapseAll
    i = i + 1
End If

授权设置_Button10_Click

Dim r As DialogResult
r = MessageBox.Show("无法恢复,是否要删除用户?","提示",MessageBoxButtons.YesNo,MessageBoxIcon.Warning)
If r = DialogResult.Yes
    'Dim lst As WinForm.ListBox = e.Form.Controls("ListBox1")
    Dim tr As Row = Tables("Users").Current
    If tr IsNot Nothing
        'Dim UserName As String = lst.SelectedItem
        Dim UserName As String  = tr("name")
        Dim cmd As New SQLCommand
        cmd.ConnectionName = "TMFGROUP"
        cmd.CommandText = "Delete From {Users} Where [Name] = '" & UserName & "'"
        cmd.ExecuteNonQuery
        'lst.Items.RemoveAt(lst.SelectedIndex)
        DataTables("组用户").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("角色用户").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("用户").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("用户权限").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("users").Save
        DataTables("users").Load
    End If    
Else If r = DialogResult.No
    Return
End If

授权设置_Button11_Click

Dim tv1 As WinForm.TreeView = e.Form.Controls("分组用户")
Dim tv2 As WinForm.TreeView = e.Form.Controls("角色用户")

static i As Integer = 1
If i Mod 2 = 1
    tv1.ExpandAll
    tv2.ExpandAll
    i = i + 1
Else
    tv1.CollapseAll
    tv2.CollapseAll
    i = i + 1
End If

授权设置_Button1刷新_Click

Functions.Execute("刷新现有数据表")

Dim tv8 As WinForm.TreeView = e.Form.Controls("TreeView1模块分配")
tv8.BuildTree("模块分配","模块名称")
tv8.Nodes.Insert("全部",0)

授权设置_Button2_Click

DataTables("角色用户").DeleteFor("")
For Each dr As DataRow In DataTables("Users").DataRows
    For Each js As String In CStr(dr("Role")).Split(",")
        If js > ""
            Dim newdr As DataRow = DataTables("角色用户").AddNew
            newdr("用户") = dr("name")
            newdr("角色") = js
        End If
    Next
Next

授权设置_Button3_Click

Forms("用户管理").open()

授权设置_Button4_Click

Forms("分组及角色").open()

授权设置_Button5_Click

DataTables("组用户").DeleteFor("")
For Each dr As DataRow In DataTables("Users").DataRows
    Dim newdr As DataRow = DataTables("组用户").AddNew
    newdr("用户") = dr("name")
    newdr("组") = dr("Group")
Next

授权设置_Button6_Click

Forms("授权").open()

授权设置_Button7_Click

DataTables("用户权限").DeleteFor("")
If DataTables("组").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("组").DataRows
        If DataTables("组用户").Select("[组] ='" & dr1("组") & "'").Count > 0
            For Each dr2 As DataRow In DataTables("组用户").Select("[组] ='" & dr1("组") & "'")
                Dim newdr As DataRow = DataTables("用户权限").AddNew
                newdr("模块名称") = dr1("模块名称")
                newdr("权限名称") = dr1("权限名称")
                newdr("用户") = dr2("用户")
            Next
        End If
    Next
End If
If DataTables("角色").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("角色").DataRows
        If DataTables("角色用户").Select("[角色] ='" & dr1("角色") & "'").Count > 0
            For Each dr2 As DataRow In DataTables("角色用户").Select("[角色] ='" & dr1("角色") & "'")
                Dim newdr As DataRow = DataTables("用户权限").AddNew
                newdr("模块名称") = dr1("模块名称")
                newdr("权限名称") = dr1("权限名称")
                newdr("用户") = dr2("用户")
            Next
        End If
    Next
End If
If DataTables("用户").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("用户").DataRows
        Dim newdr As DataRow = DataTables("用户权限").AddNew
        newdr("模块名称") = dr1("模块名称")
        newdr("权限名称") = dr1("权限名称")
        newdr("用户") = dr1("用户")
    Next
End If

'从角色用户表中提选管理者用户,添加所有权限
If DataTables("角色用户").SQLSelect("角色 = '管理者'").count > 0
    For Each dr1 As DataRow In DataTables("角色用户").SQLSelect("角色 = '管理者'")
        For Each dr As DataRow In DataTables("权限字段管理").DataRows
            Dim newdr = DataTables("用户权限").AddNew
            newdr("模块名称") = dr("模块名称")
            newdr("权限名称") = "可编辑"
            newdr("用户") = dr1("用户")
        Next
    Next
End If

'去重
Tables("用户权限").RepeatFilter("去重",2)
DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
Tables("用户权限").Filter = ""

DataTables("侧边栏设置").DeleteFor("")
For Each dr1 As DataRow In DataTables("用户权限").DataRows
    For Each dr2 As DataRow In DataTables("模块分配").SQLSelect("模块名称 = '" & dr1("模块名称") & "' and 隐藏 = 0")
        Dim newdr As DataRow = DataTables("侧边栏设置").AddNew
        newdr("用户") = dr1("用户")
        newdr("模块名称") = dr1("模块名称")
        newdr("数据表名") = dr2("表名")
    Next
Next

授权设置_Button8_Click

With Tables("授权")
    .AddNew
    .Position = .Rows.count - 1
End With
Forms("授权").open()

授权设置_Button9_Click

'删除权限
Dim r As DialogResult
r = MessageBox.Show("不可恢复,确认删除此权限配置?","提示",MessageBoxButtons.YesNo,MessageBoxIcon.Warning)
If r = DialogResult.Yes Then
    Dim dr As Row = Tables("授权").Current
    If dr IsNot Nothing
        Dim qx As String = dr("权限名称")
        Dim mk As String = dr("模块名称")
        Dim gps As String = dr("分组")
        Dim rls As String = dr("角色")
        Dim urs As String = dr("用户")
        
        If gps > ""
            For Each gp As String In gps.Split(",")
                DataTables("组").DeleteFor("[模块名称] = '" & mk & "' and [权限名称] = '" & qx & "' and [组] ='" & gp & "'")
            Next
        End If
        
        If rls > ""
            For Each rl As String In rls.Split(",")
                DataTables("角色").DeleteFor("[模块名称] = '" & mk & "' and [权限名称] = '" & qx & "' And [角色] ='" & rl & "'")
            Next
        End If
        
        If urs > ""
            For Each ur As String In urs.Split(",")
                DataTables("用户").DeleteFor("[模块名称] = '" & mk & "' and [权限名称] = '" & qx & "' And [用户] ='" & ur & "'")
            Next
        End If
        Tables("授权").Current.Delete()
        DataTables("授权").Save
    End If
End If

授权设置_TabControl1_Click

Dim tv1 As WinForm.TreeView = e.Form.Controls("分组用户")
tv1.BuildTree("组用户","组|用户")
tv1.Nodes.Insert("全部用户",0)
Dim tv2 As WinForm.TreeView = e.Form.Controls("角色用户")
tv2.BuildTree("角色用户","角色|用户")
tv2.Nodes.Insert("全部用户",0)

Dim tv3 As WinForm.TreeView = e.Form.Controls("分组权限")
tv3.BuildTree("组","组|权限名称|模块名称")


Dim tv4 As WinForm.TreeView = e.Form.Controls("角色权限")
tv4.BuildTree("角色","角色|权限名称|模块名称")


Dim tv5 As WinForm.TreeView = e.Form.Controls("用户权限")
tv5.BuildTree("用户权限","用户|权限名称|模块名称")

Dim tv7 As WinForm.TreeView = e.Form.Controls("权限归属")
tv7.BuildTree("用户权限","模块名称|权限名称|用户")

授权设置_TreeView1模块分配_NodeMouseClick

Dim Filter As String
Dim dr As DataRow = e.Node.DataRow '获取生成此节点的行

    Select Case e.Node.text
        Case "全部"
            Filter = ""
        Case Else
            Filter = "[模块名称] = '" & e.node.Text & "'"
    End Select


Tables("模块分配").Filter = Filter

授权设置_TreeView授权_NodeMouseClick

Dim Filter As String
Dim dr As DataRow = e.Node.DataRow '获取生成此节点的行
If e.Node.Text <> "全部" AndAlso e.Node.Text <> "可见" AndAlso e.Node.Text <> "可编辑"  Then
    Select Case e.Node.Level
        Case 0
            Filter = "[模块名称] = '" & dr("模块名称") & "'"
        Case 1
            Filter = "[模块名称] = '" & dr("模块名称") & "' and [权限名称] = '" & dr("权限名称") & "'"
    End Select
Else If e.node.text = "全部"
filter = ""
Else 
filter = "[权限名称] = '" & e.node.Text & "'"

End If
Tables("授权").Filter = Filter

授权设置_保存设置_Click

DataTables("用户权限").DeleteFor("")
If DataTables("组").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("组").DataRows
        If DataTables("组用户").Select("[组] ='" & dr1("组") & "'").Count > 0
            For Each dr2 As DataRow In DataTables("组用户").Select("[组] ='" & dr1("组") & "'")
                Dim newdr As DataRow = DataTables("用户权限").AddNew
                newdr("模块名称") = dr1("模块名称")
                newdr("权限名称") = dr1("权限名称")
                newdr("用户") = dr2("用户")
            Next
        End If
    Next
End If
If DataTables("角色").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("角色").DataRows
        If DataTables("角色用户").Select("[角色] ='" & dr1("角色") & "'").Count > 0
            For Each dr2 As DataRow In DataTables("角色用户").Select("[角色] ='" & dr1("角色") & "'")
                Dim newdr As DataRow = DataTables("用户权限").AddNew
                newdr("模块名称") = dr1("模块名称")
                newdr("权限名称") = dr1("权限名称")
                newdr("用户") = dr2("用户")
            Next
        End If
    Next
End If
If DataTables("用户").DataRows.Count > 0
    For Each dr1 As DataRow In DataTables("用户").DataRows
        Dim newdr As DataRow = DataTables("用户权限").AddNew
        newdr("模块名称") = dr1("模块名称")
        newdr("权限名称") = dr1("权限名称")
        newdr("用户") = dr1("用户")
    Next
End If

Tables("用户权限").RepeatFilter("去重",2)
DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
Tables("用户权限").Filter = ""

DataTables("侧边栏设置").DeleteFor("")
For Each dr1 As DataRow In DataTables("用户权限").DataRows
    For Each dr2 As DataRow In DataTables("模块分配").SQLSelect("模块名称 = '" & dr1("模块名称") & "' and 隐藏 = 0")
        Dim newdr As DataRow = DataTables("侧边栏设置").AddNew
        newdr("用户") = dr1("用户")
        newdr("模块名称") = dr1("模块名称")
        newdr("数据表名") = dr2("表名")
    Next
Next

授权设置_分组用户_NodeMouseClick

Dim Filter As String
Dim dr As DataRow = e.Node.DataRow '获取生成此节点的行

If e.Node.Text <> "全部用户" Then
    Select Case e.Node.Level
        Case 0
            Filter = "[group] = '" & e.node.Text & "'"
        Case 1
            Filter = "[name] = '" & e.node.Text & "'"
    End Select
End If

Tables("users").Filter = Filter

授权设置_角色用户_NodeMouseClick

Dim Filter As String
Dim dr As DataRow = e.Node.DataRow '获取生成此节点的行
If e.Node.Text <> "全部用户" Then
    Select Case e.Node.Level        
Case 1
            Filter = "[name] = '" & dr("用户") & "'"
            Tables("users").Filter = Filter
    End Select
End If

项目管理_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next

Dim xmlx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
Dim xmjd As WinForm.ComboBox = e.Form.Controls("ComboBox2阶段")
Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox3省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox4城市")
Dim epc As WinForm.DropDownBox = e.Form.Controls("总包")
Dim oem As WinForm.DropDownBox = e.Form.Controls("客户")
epc.contextstrip = e.Form.Strips("kj3")
oem.contextstrip = e.Form.Strips("kj2")
Dim hy As WinForm.ComboBox = e.Form.Controls("ComboBox7行业")
Dim fslx As WinForm.ComboBox = e.Form.Controls("ComboBox8废水类型")
Dim tmf As WinForm.ComboBox = e.Form.Controls("ComboBox9膜型号")
Dim clmd As WinForm.ComboBox = e.Form.Controls("ComboBox1处理目的")
clmd.ComboList = DataTables("辅助").SQLGetComboListString("处理目的","","辅助排序")
xmlx.ComboList = DataTables("辅助").SQLGetComboListString("项目类型","","辅助排序")
xmjd.ComboList = DataTables("辅助").SQLGetComboListString("项目阶段","","辅助排序")
sf.ComboList = DataTables("全国城市").SQLGetComboListString("省或直辖市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市")
epc.DropFormName = "客户下拉框"
oem.DropFormName = "客户下拉框"
hy.ComboList = DataTables("辅助").SQLGetComboListString("行业","","辅助排序")
fslx.ComboList = DataTables("辅助").SQLGetComboListString("废水类型","","辅助排序")
tmf.ComboList = DataTables("产品管理").SQLGetComboListString("产品型号")

项目管理_ComboBox3省份_TextChanged

Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox3省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox4城市")
cs.Combolist = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] = '" & sf.Text & "'")

项目管理_ComboBox4城市_Enter

Dim sf As WinForm.ComboBox = e.Form.Controls("ComboBox3省份")
Dim cs As WinForm.ComboBox = e.Form.Controls("ComboBox4城市")
If sf.text = ""
cs.ComboList = DataTables("全国城市").SQLGetComboListString("地级市")
Else
cs.ComboList = DataTables("全国城市").SQLGetComboListString("地级市","[省或直辖市] ='" & sf.text & "'")
End If

项目管理_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

项目管理_ItemClick

Select Case e.StripItem.Name
      Case "epc"
        Dim epc As WinForm.ComboBox = e.Form.Controls("总包")
        Dim khs1 As String = epc.text
        Dim kh11 As String = khs1.Split(",")(0)
        With Tables("客户管理")
            Dim r As Integer
            r = .FindRow("公司 = '" & kh11 & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                ' MainTable = Tables("客户管理")
                .Position = r '定位到找到的行.
                Forms("客户管理").Open
            Else
                MessageBox.Show("没有找到相关客户信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
 End Select
Functions.Execute("itemclick",e,"Label11","客户")

项目管理_TabControl1_SelectedIndexChanged

Dim tbc As WinForm.TabControl = e.Form.Controls("TabControl1")
Dim xm As WinForm.TextBox = e.Form.Controls("TextBox1")
If xm.text <> ""
    If tbc.SelectedPage.Name = "ym2"
        Dim pjnm As String = xm.text
        Dim ftp As new FTPClient
        ftp.Host = _host
        ftp.Account = _ftpus
        ftp.Password = _ftppwd
        ftp.Uploadenabled = True
        ftp.DownloadEnabled = True
        ftp.RenameEnabled = False
        ftp.MakerDirEnabled = False
        Dim rt1 As String = "/项目/" & pjnm
        Dim rt2 As String = rt1 & "/技术服务"
        If ftp.DirExists(rt1) AndAlso pjnm IsNot Nothing
            ftp.RootDir = rt1
            If ftp.DirExists(rt2) = False
                ftp.MakeDir(rt2)
            End If
        Else
            ftp.MakeDir(rt1)
            ftp.MakeDir(rt2)
            ftp.RootDir = rt1
        End If
        
        Dim fm As WinForm.FileManager = e.Form.Controls("FileManager1")
        fm.FTPclient = ftp
        fm.ClearCommand.visible = False
        fm.AddFolderCommand.visible = False
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            fm.ManagerCommand.visible = False
        Else
            fm.ManagerCommand.visible = True
        End If
        
             
    ElseIf tbc.SelectedPage.Name = "ym3"
        Tables("项目管理_Table1系统").Filter = "项目名称 ='" & xm.text & "'"   
    ElseIf tbc.SelectedPage.Name = "ym4"
        Tables("项目管理_Table1日志").Filter = "相关项目 ='" & xm.text & "'"
        
    ElseIf tbc.SelectedPage.Name = "ym5"
        Tables("项目管理_Table1订单").Filter = "相关项目 ='" & xm.text & "'"
        
    ElseIf tbc.SelectedPage.Name = "ym6"
        Tables("项目管理_Table1报价").Filter = "相关项目 ='" & xm.text & "'"
    End If
End If

项目下拉框_AfterLoad

Dim cmd As new SQLCommand
cmd.ConnectionName = "TMFGROUP"
cmd.CommandText = "Select [业主] from {项目管理}"
Dim dt As DataTable = cmd.ExecuteReader
Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
tv.BuildTree("项目管理","省份|业主")
tv.ExpandAll

项目下拉框_Button5搜索_Click

Dim txt As String = e.Form.Controls("TextBox1").value
If txt = ""
    Return
Else
    Dim trv As WinForm.TreeView =  e.Form.Controls("TreeView1")
    Dim Start As Integer
    Dim idx As Integer = - 1
    If trv.SelectedNode IsNot Nothing Then '获取当前节点位置.
        Dim FullName As String = trv.SelectedNode.FullName
        For i As Integer = 0 To trv.AllNodes.count - 1
            If trv.AllNodes(i).FullName = FullName  Then
                Start = i
                Exit For
            End If
        Next
    End If
    For i As Integer = Start + 1 To trv.AllNodes.count - 1  '从当前节点的下一个节点开始查找
        Dim nd As WinForm.TreeNode = trv.AllNodes(i)
        If nd.Text.IndexOf(txt) >= 0 Then
            trv.SelectedNode = nd
            nd.EnsureVisible
            idx = i '将找到的位置复制给变量idx
            Exit For
        End If
    Next
    If  idx = -1 Then 'idx的值如果等于初始值-1,表示没有找到下一个符合条件的节点,那么从第一个节点开始重新查找.
        For i As Integer = 0 To Start - 1
            Dim nd As WinForm.TreeNode = trv.AllNodes(i)
            If nd.Text.IndexOf(txt) >= 0 Then
                trv.SelectedNode = nd
                nd.EnsureVisible
                Exit For
            End If
        Next
    End If
    trv.Select()
End If

项目下拉框_DropDownOpened

e.Form.Controls("TextBox1").Select

项目下拉框_TextBox1_TextChanged

Dim txt As String = e.Form.Controls("TextBox1").text
Dim trv As WinForm.TreeView =  e.Form.Controls("TreeView1")
For Each nd As WinForm.TreeNode In trv.AllNodes
    If nd.Level > 0 AndAlso nd.Text.Contains(txt)
            trv.SelectedNode = nd
        Exit For
    End If
Next

项目下拉框_TreeView1_NodeMouseDoubleClick

If e.Node.Level > 0 Then '如果单击的是第二层节点
    e.Form.DropDownBox.Value = e.Node.text  '这行不是多余的,省略此行,无法在表中正常使用此下拉窗口输入数据.
    e.Form.DropDownBox.CloseDropdown()
End If

新增角色_Button1_Click

Dim zu As WinForm.TextBox = e.Form.Controls("TextBox1")
If zu.Text > ""
    Dim dr As DataRow = DataTables("角色定义").AddNew
    dr("角色") = zu.Text
End If
e.Form.Close
Forms("分组及角色").Close
Forms("分组及角色").Open

新增组_Button1_Click

Dim zu As WinForm.TextBox = e.Form.Controls("TextBox1")
If zu.Text > ""
    Dim dr As DataRow = DataTables("组定义").AddNew
    dr("组") = zu.Text
End If
e.Form.Close
Forms("分组及角色").Close
Forms("分组及角色").Open

行业动态_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
Dim lx As WinForm.ComboBox = e.Form.Controls("ComboBox1类型")
lx.ComboList = DataTables("辅助").SQLGetComboListString("内部资料分类","","辅助排序")

行业动态_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

行业动态_ItemClick

Functions.Execute("itemclick",e,"ComboBox1项目名称","ComboBox1公司")

行业动态_TabControl1_SelectedIndexChanged

'利用TabControl以获得事件 SelectedIndexChanged,用于控制filemanager
'二级目录必须先创建1级目录


Dim tbc As WinForm.TabControl = e.Form.Controls("TabControl1")
Dim pjnm As String = e.Form.Controls("ComboBox1类型").text
If pjnm <> ""
    If tbc.SelectedPage.Name = "ym2"
        Dim ftp As new FTPClient
        ftp.Host = _host
        ftp.Account = _ftpus
        ftp.Password = _ftppwd
        ftp.Uploadenabled = True
        ftp.DownloadEnabled = True
        ftp.RenameEnabled = False
        ftp.MakerDirEnabled = False
        Dim rt1 As String = "/市场/行业动态/" & pjnm
        If ftp.DirExists(rt1) AndAlso pjnm IsNot Nothing
            ftp.RootDir = rt1
        Else
            ftp.MakeDir(rt1)
            ftp.RootDir = rt1
        End If
        
        Dim fm As WinForm.FileManager = e.Form.Controls("FileManager1")
        fm.FTPclient = ftp
        fm.ClearCommand.visible = False
        fm.AddFolderCommand.visible = False
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            fm.ManagerCommand.visible = False
        Else
            fm.ManagerCommand.visible = True
        End If
    End If
End If

修改用户密码_AfterLoad

e.Form.Controls("UserName").value = _UserName
e.Form.Controls("UserGroup").value = _UserGroup
e.Form.Controls("UserRole").value= _UserRole
If DataTables("users").SQLFind("name ='" & _UserName & "'") IsNot Nothing
e.Form.controls("email").value = DataTables("users").SQLFind("name ='" & _UserName & "'")("email")
e.Form.Controls("汇报对象").value = DataTables("users").SQLFind("name ='" & _UserName & "'")("汇报对象")
End If

修改用户密码_Button1_Click

Dim PassWord As String = e.Form.Controls("PassWord").text
Dim email As String = e.Form.Controls("email").text

Dim cmd As New SQLCommand
cmd.ConnectionName = "TMFGROUP"

If e.Form.Controls("PassWord").text = e.Form.Controls("PassWord2").text
    cmd.CommandText = "Update {Users} Set [Password] = '" & Functions.Execute("加密密码",Password) & "',[email] = '" & email & "' WHERE [name] = '" & _UserName & "'"
    If cmd.ExecuteNonQuery = 1 Then '返回1表示更改成功
        Dim r As DialogResult =  Messagebox.Show("更改密码成功!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
        If r = DialogResult.OK
            e.Form.Close
        End If
    Else
        Messagebox.Show("更改密码失败!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    End If
Else
    MessageBox.Show("两次输入密码不同,请重新输入","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
End If
DataTables("Users").Save()
DataTables("Users").Load()

修改用户密码_Button2_Click

e.Form.Close

选择好友_AfterLoad

Dim r As Row = Tables("users").Current
Dim trv As WinForm.TreeView = e.Form.Controls("TreeView1")
e.Form.Controls("Label1").Text = "请选择""" & r("name") & """的好友"
trv.BuildTree("users","分组|Name","分组 <> '" & r("分组") & "'")
Dim Buddies() As String = r("好友").Split(",")
For Each Buddy As String In Buddies
    Dim pts() As String = Buddy.Split(".")
    If trv.Nodes.Contains(pts(0)) Then
        If trv.Nodes(pts(0)).Nodes.Contains(pts(1)) Then
            trv.Nodes(pts(0)).Nodes(pts(1)).Checked = True
        End If
    End If 
Next

选择好友_Button1_Click

Dim trv As WinForm.TreeView = e.Form.Controls("TreeView1")
Dim nms As String
For Each nd As WinForm.TreeNode In trv.AllNodes
    If nd.Checked AndAlso  nd.Level = 1 Then
        nms = nms & "," & nd.FullName.Replace("\",".")
    End If
Next
If nms > "" Then
    Tables("users").Current("好友") = nms.Trim(",")
End If
e.Form.Close()

选择好友_Button2_Click

e.Form.Close()

已投运系统_AfterLoad

Dim xm As WinForm.DropDownBox = e.Form.Controls("项目")
Dim kh As WinForm.DropDownBox = e.Form.Controls("客户")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"
Dim fslx As WinForm.ComboBox = e.Form.Controls("ComboBox3废水类型")
Dim clmd As WinForm.ComboBox = e.Form.Controls("ComboBox5处理目的")
Dim mxh As WinForm.ComboBox = e.Form.Controls("ComboBox4膜型号")

mxh.ComboList = DataTables("TMF产品清单").SQLGetComboListString("型号","","有效面积_m2 DESC")

fslx.ComboList = DataTables("辅助").SQLGetComboListString("废水类型","","辅助排序")
clmd.ComboList = DataTables("辅助").SQLGetComboListString("处理目的","","辅助排序")


xm.ContextStrip = e.Form.Strips("kj1")
kh.ContextStrip = e.Form.Strips("kj2")
xm.DropFormName = "项目下拉框"
kh.DropFormName = "客户下拉框"

已投运系统_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

已投运系统_ItemClick

Functions.Execute("itemclick",e,"项目","客户")

用户登录_AfterLoad

e.Form.Controls("UserName").value = GetConfigValue("最后用户", "")
e.Form.Controls("companyID").value = GetConfigValue("登录公司","")



Dim cls As WinForm.Button = e.Form.Controls("Button1")
If User.Type <> UserTypeEnum.Developer
    cls.Visible = False
End If

e.Form.Controls("companyID").Select


'

用户登录_Button1_Click

e.Form.Close

用户登录_Button1登录_Click

Dim comid As String = e.Form.Controls("companyID").text
Dim cmd0 As new SQLCommand
cmd0.ConnectionName = "CRMCRM"
cmd0.CommandText = "SELECT * From {crmcustomermanage} WHERE [customername] = '" & comid & "'"

If comid = ""
    Messagebox.show("请输入公司名称!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return
End If
Dim dt0 As DataTable = cmd0.ExecuteReader()
Dim dr0 As DataRow = dt0.SQLFind("customername ='" & comid & "'","_Identify DESC")
If dt0.DataRows.Count = 0 OrElse dr0("pjID") <> _pjID
    MessageBox.Show("请检查公司名称是否正确","提示",MessageBoxButtons.OK,MessageBoxIcon.Error)
    Return
Else
    
    If dr0("enddate") < Date.Today
        MessageBox.Show("您的产品使用期已经到期,请联系供应商!","提示",MessageBoxButtons.OK,MessageBoxIcon.None)
        Return
    Else
        SaveConfigValue("登录公司",comid)
        _enddate = dr0("enddate")
        _remaindays = dr0("remaindays")
        '非开发者用户表标题不可见
        TableCaptionVisible = False
        
        Dim UserName As String = e.Form.Controls("UserName").Value
        Dim cmd As New SQLCommand
        Dim dt As DataTable
        Dim dr1 As DataRow
        cmd.ConnectionName = "TMFGROUP"
        If UserName = ""  Then
            Messagebox.show("请输入用户名!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
            Return
        End If
        cmd.CommandText = "Select * From {Users} Where [Name] = '" & UserName & "'"
        dt = cmd.ExecuteReader(True)
        If dt.DataRows.Count = 0 Then
            Messagebox.show("用户名或密码错误!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
            Return
        End If
        dr1 = dt.DataRows(0)
        If e.Form.Controls("PassWord").Value = Functions.Execute("解密密码",dr1("password"))
            _UserName = UserName
            _UserGroup = dr1("Group")
            _UserRole = dr1("Role")
            _level = dr1("level")
            _sub = DataTables("上下级关系").SQLGetValues("下级","上级 ='" & _UserName & "'")
            dr1("LastLogin") = Date.Today
            dr1("Lasttime") = Date.Now
            dr1.Save
            
            SaveConfigValue("最后用户",UserName)
            e.Form.Close()
            '提取模块分配表
            Dim cmd3 As new SQLCommand
            cmd3.ConnectionName = "TMFGROUP"
            cmd3.CommandText = "SELECT * From {模块分配}"
            _mkTable = cmd3.ExecuteReader(True)
            '提取用户权限表
            Dim cmd4 As new SQLCommand
            cmd4.ConnectionName = "TMFGROUP"
            cmd4.CommandText = "SELECT * From {用户权限}"
            _usAuth = cmd4.ExecuteReader(True)
            '授权表可见及可编辑权限
            If _UserRole.Contains("管理者")
                
                For Each tb As Table In Tables
                    tb.AllowEdit = True
                Next
                If RibbonTabs.Contains("管理员")
                    RibbonTabs("管理员").Visible = True
                End If
            Else  '非管理者普通用户登录
If RibbonTabs.Contains("管理员")
                RibbonTabs("管理员").Visible = False
End If
                '找到用户名及可编辑权限的行_从用户权限表中
                Dim drqxs As List(of DataRow) = _usAuth.Select("[用户] = '" & UserName & "' and [权限名称] = '可编辑'")
                If drqxs.Count > 0
                    For Each dr11 As DataRow In drqxs
                        For Each dr2 As DataRow In _mkTable.Select("[模块名称] ='" & dr11("模块名称") & "'")
                            If  DataTables.Contains(dr2("表名"))
                                DataTables(dr2("表名")).AllowEdit = True
                            End If
                        Next
                    Next
                End If
            End If
            
            '加载表
            Dim drs1 As List(of DataRow) = _mkTable.Select("[LoadAuth] = '仅本人'")
            If drs1.Count > 0
                For Each dr As DataRow In drs1
                    If DataTables(dr("表名")).DataCols.Contains("分享")
                        DataTables(dr("表名")).LoadFilter = "用户名 = '" & UserName & "' OR 分享 = 1"
                        DataTables(dr("表名")).Load
                    Else
                        DataTables(dr("表名")).LoadFilter = "用户名 = '" & UserName & "'"
                        DataTables(dr("表名")).Load
                    End If
                Next
            End If
            
            Dim drs3 As List(of DataRow) = _mkTable.Select("[LoadAuth] = '不加载'")
            If drs3.Count > 0
                For Each dr As DataRow In drs3
                    DataTables(dr("表名")).LoadFilter = "_Identify Is null"
                    DataTables(dr("表名")).Load
                Next
            End If
            
            MainTable = Tables("工作日志")
            Forms("底部栏").open()
            Forms("侧边栏模块").open()   
        Else
            Messagebox.show("用户名或密码错误!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
        End If
    End If
End If
If _UserRole > ""
    If _UserRole.Contains("管理者")
        If _remaindays < 30
            Dim jinggao As String = "软件使用授权将在" & _enddate & "到期,请联系供应商续费,或及时备份数据到本地!"
            PopMessage(jinggao,"提示",PopIconEnum.Alert,10)
        End If
    End If
End If

用户登录_Button1登录1_Click

e.Form.Close()
Syscmd.Project.Exit()

用户登录_Label5_Click

SaveConfigValue("最后用户","")
e.Form.Controls("username").text = ""

用户登录_Label6_Click

SaveConfigValue("登录公司","")
e.Form.Controls("companyID").text = ""

用户管理_AfterLoad

e.Form.Controls("cbx用户搜索").combolist = DataTables("users").GetComboListString("name")

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
'tv.BuildTree("Users","Group|name")
'tv.Select
tv.BuildTree("组织架构","Level1|Level2|Level3|Level4|Level5|Level6|Level7")
tv.ExpandAll

用户管理_btnusergroup_Click

Forms("分组及角色").open()

用户管理_btnusergroup1_Click

DataTables("组织架构").DeleteFor("")
Dim dt As DataTable = DataTables("users")
'根据汇报对象生成'组织结构表'
Dim drs As List(of DataRow) = dt.SQLSelect("汇报对象 = '无' or 汇报对象 = ''")
If drs.Count > 0
    For Each dr As DataRow In drs
        Dim newdr As DataRow = DataTables("组织架构").AddNew
        newdr("组") = dr("group")
        newdr("Level1") = dr("name")
    Next
End If
Dim lv1 As List(of String) = DataTables("组织架构").GetValues("Level1")
If lv1.Count > 0
    For Each lv As String In lv1
        Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        If drs1.Count > 0
            For Each dr As DataRow In drs1
                Dim newdr As DataRow = DataTables("组织架构").AddNew
                newdr("组") = dr("group")
                newdr("Level1") = dr("汇报对象")
                newdr("Level2") = dr("name")
            Next
        End If
    Next
End If
Dim lv2 As List(of String) = DataTables("组织架构").GetValues("Level2")
If lv2.Count > 0
    For Each lv As String In lv2
        Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        If drs1.Count > 0
            For Each dr As DataRow In drs1
                Dim newdr As DataRow = DataTables("组织架构").AddNew
                newdr("组") = dr("group")
                newdr("Level2") = dr("汇报对象")
                newdr("Level3") = dr("name")
            Next
        End If
    Next
End If
Dim lv3 As List(of String) = DataTables("组织架构").GetValues("Level3")
If lv1.Count > 0
    For Each lv As String In lv3
        Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        If drs1.Count > 0
            For Each dr As DataRow In drs1
                Dim newdr As DataRow = DataTables("组织架构").AddNew
                newdr("组") = dr("group")
                newdr("Level3") = dr("汇报对象")
                newdr("Level4") = dr("name")
            Next
        End If
    Next
End If
Dim lv4 As List(of String) = DataTables("组织架构").GetValues("Level4")
If lv1.Count > 0
    For Each lv As String In lv4
        Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        If drs1.Count > 0
            For Each dr As DataRow In drs1
                Dim newdr As DataRow = DataTables("组织架构").AddNew
                newdr("组") = dr("group")
                newdr("Level4") = dr("汇报对象")
                newdr("Level5") = dr("name")
            Next
        End If
    Next
End If
Dim lv5 As List(of String) = DataTables("组织架构").GetValues("Level5")
If lv1.Count > 0
    For Each lv As String In lv5
        Dim drs1 As List(of DataRow) = dt.SQLSelect("汇报对象 = '" & lv & "'")
        If drs1.Count > 0
            For Each dr As DataRow In drs1
                Dim newdr As DataRow = DataTables("组织架构").AddNew
                newdr("组") = dr("group")
                newdr("Level5") = dr("汇报对象")
                newdr("Level6") = dr("name")
            Next
        End If
    Next
End If

'保存
DataTables("组织架构").save
'生成tv
Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
tv.BuildTree("组织架构","Level1|Level2|Level3|Level4|Level5|Level6|level7")

Functions.Execute("生成上下级关系")
DataTables("上下级关系").Save
'users表刷新level参数
DataTables("users").save
For i As Integer = 1 To 7
    Dim lv As List(of String) = DataTables("组织架构").SQLGetValues("level" & i)
    For Each x As String In lv
        DataTables("users").SQLReplaceFor("level",i,"name ='" & x & "'")
    Next
Next
DataTables("users").save
DataTables("users").load
DataTables("users").save

用户管理_btnusergroup2_Click

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
static i As Integer = 2
If i Mod 2 = 1
    tv.ExpandAll
    i = i + 1
Else
    tv.CollapseAll
    i = i + 1
End If

用户管理_Button1_Click

Forms("增加用户").Open()
'e.Form.Controls("ListBox1").Select
e.Form.Controls("TreeView1").Select

用户管理_Button2_Click

'If e.Form.Controls("ListBox1").SelectedIndex >=0 Then
   'Forms("更改用户").Open()
   'e.Form.Controls("ListBox1").Select 
'End If

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
'If tv.SelectedNode.Level > 0 Then
   Forms("更改用户").Open()
   tv.Select 
'End If

用户管理_Button3_Click

Dim r As DialogResult
r = MessageBox.Show("无法恢复,是否要删除用户?","提示",MessageBoxButtons.YesNo,MessageBoxIcon.Warning)
If r = DialogResult.Yes
    'Dim lst As WinForm.ListBox = e.Form.Controls("ListBox1")
    Dim tv As WinForm.TreeView = Forms("用户管理").Controls("TreeView1")
    If tv.SelectedNode.Level > 0 Then
        'Dim UserName As String = lst.SelectedItem
        Dim UserName As String  = tv.SelectedNode.Text
        Dim cmd As New SQLCommand
        cmd.ConnectionName = "TMFGROUP"
        cmd.CommandText = "Delete From {Users} Where [Name] = '" & UserName & "'"
        cmd.ExecuteNonQuery
        'lst.Items.RemoveAt(lst.SelectedIndex)
        tv.SelectedNode.Delete
        tv.BuildTree("组织架构","组|Level1|Level2|Level3|Level4|Level5|Level6")
        tv.Select
        DataTables("组用户").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("角色用户").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("用户权限").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("用户").DeleteFor("[用户] = '" & UserName & "'")
        DataTables("users").Save
        DataTables("users").Load
    End If
    
    
Else If r = DialogResult.No
    Return
End If

用户管理_Button4_Click

e.Form.Close()
DataTables("Users").Save()
DataTables("Users").Load()

用户管理_Button5搜索_Click

Dim txt As String = e.Form.Controls("cbx用户搜索").value
If txt = ""
    Return
Else
    Dim trv As WinForm.TreeView =  e.Form.Controls("TreeView1")
    Dim Start As Integer
    Dim idx As Integer = - 1
    If trv.SelectedNode IsNot Nothing Then '获取当前节点位置.
        Dim FullName As String = trv.SelectedNode.FullName
        For i As Integer = 0 To trv.AllNodes.count - 1
            If trv.AllNodes(i).FullName = FullName  Then
                Start = i
                Exit For
            End If
        Next
    End If
    For i As Integer = Start + 1 To trv.AllNodes.count - 1  '从当前节点的下一个节点开始查找
        Dim nd As WinForm.TreeNode = trv.AllNodes(i)
        If nd.Text.IndexOf(txt) >= 0 Then
            trv.SelectedNode = nd
            nd.EnsureVisible
            idx = i '将找到的位置复制给变量idx
            Exit For
        End If
    Next
    If  idx = -1 Then 'idx的值如果等于初始值-1,表示没有找到下一个符合条件的节点,那么从第一个节点开始重新查找.
        For i As Integer = 0 To Start - 1
            Dim nd As WinForm.TreeNode = trv.AllNodes(i)
            If nd.Text.IndexOf(txt) >= 0 Then
                trv.SelectedNode = nd
                nd.EnsureVisible
                Exit For
            End If
        Next
    End If
    trv.Select()
End If

用户管理_cbx用户搜索_TextChanged

'Dim sh As String = e.Form.Controls("cbx用户搜索").text
'Dim lst As WinForm.ListBox = e.Form.Controls("ListBox1")
'Dim start As Integer
'For i As Integer = 0 To lst.Items.Count - 1
'If Lst.Items(i).Contains(sh)
'Lst.SelectedIndex = i
'start = i
'Exit For
'End If
'Next

Dim txt As String = e.Form.Controls("cbx用户搜索").text
Dim trv As WinForm.TreeView =  e.Form.Controls("TreeView1")
For Each nd As WinForm.TreeNode In trv.AllNodes
    If nd.Level > 0 AndAlso nd.Text = txt
            trv.SelectedNode = nd
        Exit For
    End If
Next

用户管理_TreeView1_NodeMouseDoubleClick

Forms("更改用户").open()

在线系统设计_AfterLoad

Dim fn As new Font("微软雅黑",9)
For Each b As WinForm.Control In e.Form.Controls
    b.Font = fn
Next
e.Form.Controls("ComboBox2处理目的").combolist = DataTables("辅助").SQLGetComboListString("处理目的","","辅助排序")

e.Form.Controls("ComboBox1废水类型").combolist = DataTables("辅助").SQLGetComboListString("废水类型","","辅助排序")

Dim xm As WinForm.ComboBox = e.Form.Controls("ComboBox1项目名称")
Dim kh As WinForm.ComboBox = e.Form.Controls("ComboBox1公司")
xm.ComboList = DataTables("项目管理").GetComboListString("业主")
xm.ContextStrip = e.Form.Strips("kj1")
kh.ComboList = DataTables("客户管理").GetComboListString("公司")
kh.ContextStrip = e.Form.Strips("kj2")
Dim logo As WinForm.PictureBox = e.Form.Controls("PictureBox2")
logo.ImageFile = projectpath & "porexlogo.png"

在线系统设计_Button6_Click

Dim Book As New XLS.Book(ProjectPath & "Attachments\在线设计模板.xls")
Dim dr As Row
dr = Tables("在线系统设计").Current
Dim fl As String = ProjectPath & "Reports\TMFPRO\" & dr("项目名称") & "_" & dr("公司名称") & "_" & dr("设计水量") & "TPH_TMF设计报告.xls"

If dr IsNot Nothing
    'book.PreBuild = False
    book.AddDataTable("在线系统设计","TMFGROUP","Select * from {在线系统设计} where _Identify ='" & dr("_Identify") & "'") '添加父表
    book.AddDataTable("TMF产品清单","TMFGROUP","Select * from {TMF产品清单} where 型号= '" & dr("膜型号") & "'") '添加子表
    book.AddRelation("在线系统设计","膜型号","TMF产品清单","型号") '建立关联
    book.Build()
    book.Save(fl)
    Dim Proc As New Process '打开工作簿
    Proc.File = fl
    Proc.Start()
End If

在线系统设计_ComboBox1废水类型_ValueChanged

If e.Form.Controls("ComboBox1废水类型").value = "脱硫废水"
e.Form.Controls("ComboBox4几芯膜").combolist = "TUF-61|TUF-37|TUF-15"
Else 
e.Form.Controls("ComboBox4几芯膜").combolist = DataTables("TMF产品清单").GetComboListString("产品选择","","有效面积_m2")
End If

在线系统设计_Enter

If user.Type = UserTypeEnum.User
    
    '如果没有当前表的编辑权限
    Dim tbn As String = CurrentTable.DataTable.Name
    If _UserRole.Contains("管理者") = False
        Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
        If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") Is Nothing
            For Each x As WinForm.Control In e.Form.controls
                x.ReadOnly = BooleanEnum.True
            Next
        End If
    End If
    '针对以下表,只有创建者才能编辑
    Select Case tbn
        Case "POREX出差申请","话题","话题讨论","发票明细","发票汇总","在线系统设计","工作日志","库存","联系人管理","客户管理","订单管理","订单明细","市场活动","技术服务","行业动态"
            If _UserName <> CurrentTable.Current("用户名")
                For Each x As WinForm.Control In e.Form.controls
                    x.ReadOnly = BooleanEnum.True
                Next
            End If
    End Select
End If

在线系统设计_ItemClick

Functions.Execute("itemclick",e,"ComboBox1项目名称","ComboBox1公司")

在线系统设计_NumericComboBox1泵几列_ValueChanged

Dim xl As WinForm.NumericComboBox = e.Form.Controls("NumericComboBox1泵几列")
If xl.Value < 0 Or xl.Value > 4 Then
xl.Value = 1
End If

在线系统设计_NumericComboBox1列每套_ValueChanged

Dim xl As WinForm.NumericComboBox = e.Form.Controls("NumericComboBox1列每套")
If xl.Value < 0 Or xl.Value > 4 Then
xl.Value = 1
End If

在线系统设计_TextBox15串联支数_ValueChanged

Dim x As WinForm.TextBox = e.Form.Controls("TextBox15串联支数")
Dim jxm As WinForm.ComboBox = e.Form.Controls("ComboBox4几芯膜")
If x.Value > 0
    If x.Value > DataTables("TMF产品清单").Find("产品选择 = '" & jxm.text & "'")("最大串联长度")
        x.ForeColor = Color.red
    Else
        x.ForeColor = Color.black
    End If
End If

在线系统设计_TextBox16实际设计通量_ValueChanged

Dim x As WinForm.TextBox = e.Form.Controls("TextBox16实际设计通量")
Dim fslx As WinForm.ComboBox = e.Form.Controls("ComboBox1废水类型")
If x.Value IsNot Nothing
If x.Value > DataTables("辅助").Find("废水类型 = '" & fslx.text & "'")("通量建议max")
x.ForeColor = Color.red
Else
x.ForeColor = Color.black
End If
End If

增加明细清单_AfterLoad

Dim tv1 As WinForm.TreeView = e.Form.Controls("tv系列管理")
tv1.BuildTree("产品管理","产品系列|产品编码")

_cpdic.clear
For Each dr As DataRow In DataTables("产品管理").DataRows
    If dr("产品编码") > "" AndAlso dr("产品型号") > ""
        _cpdic.Add(dr("产品编码"),dr("产品型号"))
    End If
Next
Dim bm As WinForm.ComboBox = e.Form.Controls("编码")
'bm.text = GetConfigValue("默认配置产品编码","")

DataTables("BOM本地配置").DeleteFor("")

增加明细清单_Button1_Click

DataTables("BOM本地配置").DeleteFor("")


Dim bm As String = e.Form.Controls("编码").text
Dim cl As String = bm.SubString(bm.Length - 3)
Dim xl As String = bm.Remove(bm.Length - 3)
Dim xh As WinForm.TextBox = e.Form.Controls("型号")

If DataTables("BOM").SQLSelect("产品系列 ='" & xl & "'").count > 0
    Dim i As Integer = 1
    For Each dr As DataRow In DataTables("BOM").SQLSelect("产品系列 ='" & xl & "'","","序号")
        Dim newdr = DataTables("BOM本地配置").AddNew
        newdr("产品编码") = bm
        newdr("子级1") = dr("子级1")
        newdr("子级2") = dr("子级2")
        newdr("子级3") = dr("子级3")
        newdr("备注") = dr("备注")
        newdr("值") = dr(cl)
        newdr("序号") = i
        i = i + 1
    Next
End If

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")

tv.BuildTree("BOM本地配置","子级1|子级2|子级3",Tables("BOM本地配置").Filter,"序号")
tv.Nodes.Insert("显示全部",0)
tv.Nodes.Insert("收缩",0)
tv.Nodes.Insert("展开",0)

Dim cl1 As String = "子级1|100|子级2|100|子级3|100|自定义配置|90|值|150|备注|100"

With Tables("BOM本地配置")
    .SetColVisibleWidth(cl1)
    .AutoSizeCols
    .MergeMode = MergeModeEnum.Standard
    .MergeCols.Clear()
    .MergeCols.Add("子级1")
    .MergeCols.Add("子级2")
    .AllowMerge = True
End With

Dim sm As WinForm.Label = e.Form.Controls("Label当前型号")
sm.Text = "当前产品型号:" & xh.text & "对应产品编号:" & bm

增加明细清单_Button3_Click

If DataTables("BOM本地配置").DataRows.Count > 0
    If Forms("报价").Opened
        Dim bjbh As String = Forms("报价").Controls("TextBox1").text
        Dim newdr As Row = Tables("报价.报价明细").AddNew
        newdr("产品编码") = DataTables("BOM本地配置").DataRows(0)("产品编码")
        
        For Each dr As DataRow In DataTables("BOM本地配置").DataRows
            Dim newdr1 As DataRow = DataTables("报价明细清单").AddNew
            newdr1("子级1") = dr("子级1")
            newdr1("子级2") = dr("子级2")
            newdr1("子级3") = dr("子级3")
            newdr1("自定义配置") = dr("自定义配置")
            newdr1("备注") = dr("备注")
            newdr1("产品编码") = dr("产品编码")
            newdr1("值") = dr("值")
            newdr1("报价编号") = bjbh
        Next
        
    End If
End If

增加明细清单_TreeView1_NodeMouseClick

Dim tv As WinForm.TreeView = e.Form.Controls("TreeView1")
'Dim bm As String = e.Form.Controls("编码")
'Dim xl As String = bm.Remove(bm.Length - 3)

With Tables("BOM本地配置")
    If e.Node.Level = 0 And e.Node.Text = "显示全部"
        .filter = ""
    ElseIf e.Node.Level = 0 And e.Node.Text = "展开"
        tv.ExpandAll
    ElseIf e.Node.Level = 0 And e.Node.Text = "收缩"
        tv.CollapseAll
    ElseIf e.Node.Level = 0 
        .filter = "[子级1] = '" & e.Node.Text & "'"
    ElseIf e.Node.Level = 1
        .filter = "[子级2] = '" & e.Node.Text & "' and [子级1] = '" & e.Node.ParentNode.Text & "'"
    ElseIf e.Node.Level = 2
        .filter = "[子级3] = '" & e.Node.Text & "' and [子级2] = '" & e.Node.ParentNode.Text & "' and [子级1] = '" & e.Node.ParentNode.ParentNode.Text & "'"
    End If
End With

增加明细清单_tv系列管理_NodeMouseDoubleClick

Dim bm As WinForm.ComboBox = e.Form.Controls("编码")
If e.Node.Level > 0
    bm.text = e.Node.Text
End If
'SaveConfigValue("默认配置产品编码",e.Node.Text)

增加明细清单_编码_Enter

e.Sender.ComboList = DataTables("产品管理").GetComboListString("产品编码")

增加明细清单_编码_TextChanged

Dim bm As String = e.Form.Controls("编码").text
Dim xh As WinForm.TextBox = e.Form.Controls("型号")
If DataTables("产品管理").SQLFind("产品编码 ='" & bm & "'") IsNot Nothing
    xh.text = DataTables("产品管理").SQLFind("产品编码 ='" & bm & "'")("产品型号")
End If

'

增加用户_AfterLoad

Dim rl As WinForm.CheckedComboBox = e.Form.Controls("role")
Dim gp As WinForm.ComboBox = e.Form.Controls("UserGroup")
rl.ComboList = DataTables("角色定义").GetComboListString("角色")
gp.ComboList = DataTables("组定义").GetComboListString("组")

增加用户_Button1_Click

Dim UserName As String = e.Form.Controls("UserName").text
Dim UserGroup As String  = e.Form.Controls("UserGroup").text
Dim UserRole As String = e.Form.Controls("role").text
Dim PassWord As String = e.Form.Controls("PassWord").text
Dim pwdjm As String = Functions.Execute("加密密码",password)
Dim email As String = e.Form.Controls("email").text
Dim hbdx As String = e.Form.Controls("汇报对象").text
Dim cmd As New SQLCommand
cmd.ConnectionName = "TMFGROUP"
If UserName = "" OrElse UserGroup = ""  OrElse PassWord = "" OrElse hbdx = "" Then
    Messagebox.show("缺少必要信息!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return
End If
cmd.CommandText = "Select Count(*) From {Users} Where Name = '" & UserName & "'"
If cmd.ExecuteScalar > 0 Then
    Messagebox.show("增加用户失败,已经能存在同名用户!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return
End If
cmd.CommandText = "Insert Into {Users} ([Name],[Group],[Role],[Password],[email],[汇报对象]) Values ('"
cmd.CommandText = cmd.CommandText & UserName & "','" & UserGroup & "','" & UserRole & "','" & pwdjm & "','" & email & "','" & hbdx & "')"
If cmd.ExecuteNonQuery = 1 Then '返回1表示增加成功
    e.Form.Close()
    
    '组用户表新增此用户条目
    Dim newdr1 As DataRow = DataTables("组用户").addnew
    newdr1("组") = UserGroup
    newdr1("用户") = UserName
    
    '角色用户表新增此用户条目
    If UserRole IsNot Nothing
        For Each u As String In UserRole.Split(",")
            Dim newdr2 As DataRow = DataTables("角色用户").addnew
            newdr2("角色") = u
            newdr2("用户") = UserName
        Next
    End If
    
    '如果是管理者则创建全部可编辑权限
    If UserRole.Contains("管理者")
        For Each dr As DataRow In DataTables("权限字段管理").DataRows
            Dim newdr = DataTables("用户权限").AddNew
            newdr("模块名称") = dr("模块名称")
            newdr("权限名称") = "可编辑"
            newdr("用户") = UserName
        Next
        Tables("用户权限").RepeatFilter("去重",2)
        DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
        Tables("用户权限").Filter = ""
        DataTables("用户权限").Save
    Else
        '根据所属分组权限配置此用户权限
        For Each dr As DataRow In DataTables("组").DataRows
            If dr("组") = UserGroup
                Dim newdr = DataTables("用户权限").AddNew
                newdr("用户") = UserName
                newdr("模块名称") = dr("模块名称")
                newdr("权限名称") = dr("权限名称")
            End If
        Next
        
        '根据所属角色所属权限配置此用户权限
        For Each rl As String In UserRole.Split(",")
            For Each dr As DataRow In DataTables("角色").DataRows
                If dr("角色") = rl
                    Dim newdr = DataTables("用户权限").AddNew
                    newdr("用户") = UserName
                    newdr("模块名称") = dr("模块名称")
                    newdr("权限名称") = dr("权限名称")
                End If
            Next
        Next
        Tables("用户权限").RepeatFilter("去重",2)
        DataTables("用户权限").DeleteFor(Tables("用户权限").Filter)
        Tables("用户权限").Filter = ""
        DataTables("用户权限").Save
    End If
End If

DataTables("Users").save()
DataTables("Users").Load()
If Forms("用户管理").Opened Then
    Dim trv As WinForm.TreeView =  Forms("用户管理").Controls("TreeView1")
    trv.BuildTree("组织架构","Level1|Level2|Level3|Level4|Level5|Level6|Level7")
    For Each nd As WinForm.TreeNode In trv.AllNodes
        If nd.Level = 1 AndAlso nd.Text = UserName
            trv.SelectedNode = nd
            Exit For
        End If
    Next
End If

增加用户_Button2_Click

e.Form.Close

增加用户_汇报对象_Enter

Dim gp As WinForm.ComboBox = e.Form.Controls("UserGroup")
Dim hbdx As WinForm.ComboBox = e.Form.Controls("汇报对象")
If gp.text = ""
    MessageBox.Show("请为用户指定分组","提示",MessageBoxButtons.OK,MessageBoxIcon.Error)
Else
    hbdx.ComboList = "无|" & DataTables("users").SQLGetComboListString("Name")
End If

自定义函数

EXCEL	调用多表excel数据计算

Dim Book As New XLS.Book(projectpath & "\Attachments\软化计算.xls") '打开模板
Dim sheet1 As XLS.Sheet = Book.Sheets("block flow") '测试数据
sheet1(15, 2).value = 888
Book.Save(projectpath & "\Attachments\软化计算.xls")
Dim App As New MSExcel.Application
Dim Wb As MSExcel.WorkBook = App.WorkBooks.Open(projectpath & "\Attachments\软化计算.xls")
Dim i,N As Integer
N=Wb.WorkSheets.Count
For i=1 To N
Dim Ws As MSExcel.WorkSheet = Wb.WorkSheets(i)
ws.UsedRange.Formula = ws.UsedRange.Formula
Next
wb.save
wb.close
App.Quit
Dim Proc As New Process
Proc.File = (projectpath & "\Attachments\软化计算.xls")
Proc.Start()

LogText

Dim v  = Args(0)
Dim msg As String
If Typeof v Is Exception Then '如果是Exception的异常类型,则递归获取所有的异常堆栈
    Do While v IsNot Nothing
        msg &= v.Message &  vbcrlf & v.StackTrace & vbcrlf
        v = v.InnerException
    Loop
Else '其它情况只能传入错误的文本内容
    msg = v
End If
Output.Logs("AppLogging").Add(Format( Date.Now,"yyyy-MM-dd HH:mm:ss.ffff") & vbCrLf & msg)
Output.Logs("AppLogging").Save(ProjectPath & "Mmsglog.txt",True) '日志位于当前项目目录里
Output.Logs("AppLogging").Clear

ShouQuan

If User.Type <> UserTypeEnum.User Then ' 如果是开发者或者管理员
    Return True '则具备所有权限
End If
Dim dt As DataTable = DataTables("授权")
Dim dr As DataRow
'首先判断分组的授权用户是否包括此用户或此用户所属的分组
dr = dt.Find("分组 = '" & args(0) & "' And 权限 Is Null" )
If dr Is Nothing Then
    MessageBox.show("不存在名为""" & args(0) & "分组!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return False
End If
If dr.IsNull("用户") = False Then
    Dim nms() As String = dr("用户").Split(",")
    For Each nm As String In nms
        If nm = User.Group OrElse nm = User.Name Then '如果授权用户包括登录用户所属的分组或其用户名
            Return True '返回True
        End If
    Next
End If
'然后判断权限的授权用户是否包括此用户或此用户所属的分组
If Args(1) = "" Then
    Return False
End If
dr = dt.Find("分组 = '" & args(0) & "' And 权限 = '" & args(1) & "'")
If dr Is Nothing Then
    MessageBox.show("不存在名为""" & args(1) & "权限!","提示",MessageBoxButtons.OK,MessageBoxIcon.Information)
    Return False
End If
If dr.IsNull("用户") = False Then
    Dim nms() As String = dr("用户").Split(",")
    For Each nm As String In nms
        If nm = User.Group OrElse nm = User.Name Then '如果授权用户包括登录用户所属的分组或其用户名
            Return True '返回True
        End If
    Next
End If
Return False

密码	加密密码

Dim pwd As String = EncryptText(Args(0),"a2w3","op333#") 
Return pwd

密码	解密密码

Dim pwd As String = DecryptText(Args(0),"a2w3","op333#") 
Return pwd

微信	GetAccessToken

Static CreateTime As Date '记录最近一次生成access_token的时间
Static AccessTocken As String '记录最近一次生成的access_token
Dim AppId As String= "wxe7ad284575794d6b" '开发者ID
Dim AppSecret As String = "cfd2e8d517dcd60e5240f605063b5a6c" '开发者密匙
Dim tp As TimeSpan = Date.Now - CreateTime
Dim url As String = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={0}&secret={1}"
If tp.TotalSeconds > 3600 Then
    Dim hc As New HttpClient(CExp(url,AppId,AppSecret))
    Dim ret As String = hc.GetData()
    If ret = "" Then '如果失败,再尝试一次
        hc.GetData()
    End If
    CreateTime = Date.Now()
    Dim jo As JObject = JObject.Parse(ret)
    If jo("errcode") Is Nothing Then
        AccessTocken = jo("access_token")
    Else
        MessageBox.show("获取access_token失败,原因:" & vbcrlf & jo("errmsg").ToString)
    End If
End If
Return AccessTocken

微信	ProcessRequestMsg

Dim msg = Args(0)
If msg.MsgType = "event" AndAlso msg.[Event]= "subscribe" Then '如果是关注事件
    Dim wechatServ As WeChat.WeChatPublicNo = WeChat.WeChatServer.Server("wx506f113977c3a8a3" )
    Dim weRet = wechatserv.UserController.GetUserInfo(msg.FromUserName)
    If weRet.Success Then
        Dim dr As DataRow = DataTables("微信用户").AddNew
        dr("openid") = msg.FromUserName
        dr("昵称") = weRet.nickname
        dr("性别") = weRet.sex
        dr("城市") = weRet.city
        dr("国家") = weRet.country
        dr("语言") = weRet.language
        dr("是否以关注") = weRet.subscribe
        dr("头像地址") = weRet.headimgurl
        dr("关注时间") = weRet.GetSubscribeTime
        dr.Save
    End If
End If

微信	VerifySignature

Dim e As RequestEventArgs = Args(0)
Dim token = "porexljj" '必须和设置的Token相同
Dim signature As String = e.GetValues("signature")
Dim timestamp As String = e.GetValues("timestamp")
Dim nonce As String = e.GetValues("nonce")
Dim echostr As String = e.GetValues("echostr")
Dim aryTmp() As String = {token,timestamp,nonce}
Array.Sort(aryTmp)
Dim strTmp As String = String.Join("", aryTmp)
strTmp = Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(strTmp, "SHA1")
Return signature = strTmp.ToLower

微信	wechatmessage

'Select Case e.path
    'Case "wefox"
Dim e As RequestEventArgs = args(0)
        If e.Request.HttpMethod = "GET"
            If Functions.Execute("VerifySignature",e) Then
                e.WriteString(e.GetValues("echostr"))
            End If
        ElseIf e.Request.HttpMethod = "Post"
            Dim xo As XObject = XObject.Parse(e.PlainText)
            Dim st As New Date(1970,1,1,8,0,0)
            Select Case xo("MsgType")
                Case "text","image","voice","video","shortvideo"
                    If DataTables("Message").Find("MsgID = '" & xo("MsgId").ToString() & "'") IsNot  Nothing Then '如果有相同MsgID的信息直接返回
                        Return Nothing
                    End If
                    Dim dr As DataRow = DataTables("Message").AddNew()
                    dr("FromUserName") = xo("FromUserName")
                    dr("CreateTime") = st.AddSeconds(xo("CreateTime"))
                    dr("MsgType") = xo("MsgType")
                    dr("MsgId") = xo("MsgId")
                    dr("MediaId") = xo("MediaId")
                    dr("ThumbMediaId") = xo("ThumbMediaId")
                    dr("PicUrl") = xo("PicUrl")
                    dr("Content") = xo("Content")
                    dr("Format") = xo("Format")
                    dr("Recognition") = xo("Recognition")
                    dr.Save()
            End Select
        End If
Return Nothing
'End Select

微信	wechatyanzhen

Dim e As RequestEventArgs = args(0)
Dim pinfo As New WeChat.WeChatPublicNoInfo()
pinfo.DeveloperID = "wx4edbe13fa2a2b85a" '公众号开发者ID
pinfo.DeveloperSecret = "0dd3fcd98fc8ad2e7f884683590c3ace" '自己公众号的开发者密钥
pinfo.Token = "porexljj" '消息令牌
pinfo.EncodingAESKey = "Lp7WHAEwxPsfGNELvGPPEeYnHi0Mz0ZLXfXdRiXl4fe" '消息加密密钥
pinfo.PublicNoType = 1 '服务号;2=企业号 3=订阅号
pinfo.CryptMsgType = 1 '明文消息 2=加密消息
WeChat.WeChatServer.Add(pinfo) '添加服务号到服务'
Select Case e.host
    Case "121.196.217.52","127.0.0.1","192.168.31.199","www.watermembrane.cn","watermembrane.cn"
        Select Case e.Path
            Case "FoxTest"
                
                If e.Request.HttpMethod.ToUpper = "GET" 'get模式为验证回调接口
                    e.WriteString( e.Values("echostr"))
                ElseIf e.Request.HttpMethod.ToUpper = "POST"
                    e.WriteString("success") '如果是服务号和订阅号
                    'e.WriteString("") '如果是企业号
                End If
        End Select
End Select
Return Nothing

微信	WX_上传图片素材

Dim pic As String = args(0)
'Dim path As String = args(1)

Dim url As String = "https://api.weixin.qq.com/cgi-bin/material/add_material?access_token={0}&type=image"
Dim hc As new HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
hc.Files.Add(pic,"D:\Porex Logo - 副本.jpg") '指定要上传的图片文件
Dim jo As JObject = JObject.Parse( hc.getdata)
If jo("errcode") Is Nothing Then
    Dim dr As DataRow = DataTables("Materials").AddNew()
    dr("Type") = "image"
    dr("mediaID") = jo("media_id")
    dr("URL") = jo("url")
    dr("UpdateTime") = Date.Now
    dr("FileName") = "sample.jpg"
    dr.Save()
Else
    MessageBox.Show(jo.ToString)
End If

微信	WX_上传缩略图素材

Dim pic As String = args(0)
'Dim path As String = args(1)

Dim url As String = "https://api.weixin.qq.com/cgi-bin/material/add_material?access_token={0}&type=thumb"
Dim hc As new HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
hc.Files.Add(pic,"D:\Porex Logo - 副本.jpg") '指定要上传的图片文件
Dim jo As JObject = JObject.Parse( hc.getdata)
If jo("errcode") Is Nothing Then
    Dim dr As DataRow = DataTables("Materials").AddNew()
    dr("Type") = "image"
    dr("mediaID") = jo("media_id")
    dr("URL") = jo("url")
    dr("UpdateTime") = Date.Now
    dr("FileName") = "sample.jpg"
    dr.Save()
Else
    MessageBox.Show(jo.ToString)
End If

微信	WX_修改tag

Dim tagid As String = args(0)
Dim newtag As String = args(1)
Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/update?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
jo("tag") = New JObject()
jo("tag")("id") = CStr(tagid)
jo("tag")("name") = newtag
hc.Content = jo.ToString
jo = JObject.Parse(hc.GetData)
If jo("errcode") = "0" Then
    If DataTables("tag").Find("id = '"& tagid &"'") IsNot Nothing Then
        DataTables("tag").Find("id = '"& tagid &"'")("name") = newtag
    End If
    MessageBox.Show("标签修改成功")
Else
    MessageBox.Show(jo.ToString)
End If

微信	WX_创建tag

Dim tg As String = args(0)
Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/create?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
jo("tag") = New JObject()
jo("tag")("name") = tg
hc.Content = jo.ToString
jo = JObject.Parse(hc.GetData)
If jo("errcode") Is Nothing Then
    Dim dr As DataRow = DataTables("tag").AddNew()
    dr("id") = jo("tag")("id")
    dr("name") = jo("tag")("name")
    dr.Save()
Else
    MessageBox.Show(jo.ToString)
End If

微信	WX_删除tag

Dim tagid As String = args(0)

Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/delete?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
jo("tag") = New JObject()
jo("tag")("id") = tagid
hc.Content = jo.ToString
jo = JObject.Parse(hc.GetData)
If jo("errcode") = "0" Then
     DataTables("tag").DeleteFor("id = '"& tagid &"'")
Else
    MessageBox.show(jo.ToString)
End If

微信	WX_发送信息

Dim usr As String = args(0)
Dim txt As String = args(1)
Dim jo As New JObject
jo("touser") = CStr(args(0))
jo("msgtype") = "text"
jo("text") =  New JObject
jo("text")("content") = CStr(args(1))
Dim URL As String = "https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token={0}" 
Dim hc As New HttpClient(CExp(URL, Functions.Execute("GetAccessToken")))
hc.Content = jo.ToString()
jo = JObject.Parse(hc.GetData())
If jo("errcode") = "0" Then
    Return Nothing
Else
    MessageBox.show("消息发送失败,原因:" & vbcrlf  & jo("errmsg").ToString)
End If

微信	WX_发送模板信息

Dim wxuser As String = args(0)
Dim mbid As String = args(1)
Dim mburl As String = args(2)
Dim url As String = "https://api.weixin.qq.com/cgi-bin/message/template/send?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject
Dim ja As New JArray
jo("touser") = CStr(wxuser)
jo("template_id") = CStr(mbid) '模板ID
jo("url") = CStr(mburl)
jo("data") = New JObject()
jo("data")("name") = New JObject()
jo("data")("name")("value") = "Foxtable"
jo("data")("name")("color") = "#173177"
jo("data")("number") = New JObject()
jo("data")("number")("value") = "2"
jo("data")("number")("color") = "#173177"
jo("data")("expDate") = New JObject()
jo("data")("expDate")("value") = "2019年12月27日"
jo("data")("expDate")("color") = "#173177"
jo("data")("expDate") = New JObject()
jo("data")("expDate")("value") = "2019年12月27日"
jo("data")("expDate")("color") = "#173177"
jo("data")("remark") = New JObject()
jo("data")("remark")("value") = "如有疑问,可联系客服QQ:800014337"
jo("data")("remark")("color") = "#173177"
hc.content = jo.Tostring()
jo = JObject.Parse(hc.getdata)
If jo("errcode") = "0" Then
    Dim dr As DataRow = DataTables("TemplateMessage").AddNew()
    dr("MsgID") = jo("msgid") '动态生成的消息ID,每个消息都不同
    dr("OpenID") = "ofjtFwBSZ5cNqTKLSKx2TNEAxfBI" '接收方OpenID
    dr("Description") = "这是消息内容说明"
    dr.Save()
Else
    Messagebox.Show(jo.ToString)
End If

微信	WX_批量为用户打tag

Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/members/batchtagging?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
Dim ja As New JArray()
ja.Add("ofjtFwBSZ5cNqTKLSKx2TNEAxfBI")
ja.Add("ofjtFwGvPBfy9aGz9OJ-qWiG5oA0")
jo("openid_list") = ja
jo("tagid") = "104"
hc.Content = jo.ToString()
jo = JObject.Parse(hc.GetData)
If jo("errcode") = "0" Then
    MessageBox.Show("批量打标签成功!")
Else
    MessageBox.show(jo.ToString)
End If

微信	WX_批量取消tag

Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/members/batchuntagging?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
Dim ja As New JArray()
ja.Add("ofjtFwBSZ5cNqTKLSKx2TNEAxfBI")
ja.Add("ofjtFwGvPBfy9aGz9OJ-qWiG5oA0")
jo("openid_list") = ja
jo("tagid") = "104"
hc.Content = jo.ToString()
jo = JObject.Parse(hc.GetData)
If jo("errcode") = "0" Then
    MessageBox.Show("批量取消标签成功!")
Else
    MessageBox.show(jo.ToString)
End If

微信	WX_接受各类消息响应

Dim e As RequestEventArgs = args(0)
If Functions.Execute("VerifySignature",e) = False Then '如果验证失败,直接返回
            Return Nothing
        End If
        If e.Request.HttpMethod = "GET"
            e.WriteString(e.GetValues("echostr"))
        ElseIf e.Request.HttpMethod.ToUpper = "POST"
            Dim xo As XObject = XObject.Parse(e.PlainText)
            Dim st As New Date(1970,1,1,8,0,0)
            'Dim logFile As String  = "d:\" & Format(Date.Today,"yyyyMMdd") & ".txt" '你可以选择每日或每月一个日志文件
            Dim OpenID As String  = xo("FromUserName") '用户OpenID
            Dim CreateTime As Date = st.AddSeconds(xo("CreateTime"))
            Select Case xo("MsgType")
                Case "text","image"
                    '保存和回复文本和图片消息的代码
                    Dim dr As DataRow = DataTables("Message").AddNew()
                    dr("FromUserName") = xo("FromUserName")
                    dr("CreateTime") = st.AddSeconds(xo("CreateTime"))
                    dr("MsgType") = xo("MsgType")
                    dr("MsgId") = xo("MsgId")
                    dr("MediaId") = xo("MediaId")
                    dr("ThumbMediaId") = xo("ThumbMediaId")
                    dr("PicUrl") = xo("PicUrl")
                    dr("Content") = xo("Content")
                    dr("Format") = xo("Format")
                    dr("Recognition") = xo("Recognition")
                    dr.Save()
                Case "event"
                    Select Case xo("Event")
                        Case "subscribe" '关注事件
                            '处理用户关注事件的代码
                            Dim url As String = "https://api.weixin.qq.com/cgi-bin/user/info?access_token={0}&openid={1}&lang=zh_CN"
                            url = CExp(url, Functions.Execute("GetAccessToken"), xo("FromUserName"))
                            Dim hc As New HttpClient(url)
                            Dim jo As JObject = Jobject.Parse(hc.GetDaTa)
                            If jo("errcode") IsNot Nothing Then
                                '这里编写代码记录错误信息,方便查阅
                                MessageBox.Show("关注事件响应错误")
                            Else
                                Dim dr As DataRow = DataTables("WXUsers").AddNew()
                                Dim nms() As String = {"openid","nickname","sex","city","country","province","headimgurl","groupid","remark","language"}
                                For Each nm As String In nms
                                    dr(nm) = jo(nm)
                                Next
                                dr("subscribe_time") = Date.Now()
                                dr.Save()
                                '回复欢迎语
                                Dim so As New XObject()
                                so("ToUserName") = xo("FromUserName")
                                so("FromUserName") = xo("ToUserName")
                                so("CreateTime") = (Date.Now - st).TotalSeconds()
                                so("MsgType")= "text"
                                so("Content") = "您好,感谢您关注FoxTable,您的关注就是我们的动力."
                                e.WriteString(so.ToXML)
                            End If
                            
                        Case "unsubscribe" '取消关注事件
                            '处理用户取消关注事件的代码'
                            DataTables("WXUsers").DeleteFor("openid = '" & xo("FromUserName").ToString() & "'" )
                            
                        'Case "LOCATION" '上报地理位置事件
                            ''处理用户上报地理位置的代码
                            'Dim x As String = xo("Location_X") '经度
                            'Dim y As String = xo("Location_Y") '纬度
                            'Dim lb As String  = xo("Label") '地理位置
                            'Filesys.WriteAllText(logFile , OpenID & "在" & CreateTime & "的位置为:" & x & "|" & y & lb & vbcrlf , True)
                            '发送模板消息后
                        Case "TEMPLATESENDJOBFINISH"
                            Dim dr As DataRow = DataTables("TemplateMessage").Find("MsgID = " & xo("MsgID").ToString)
                            If dr Is Nothing Then
                                dr = DataTables("TemplateMessage").AddNew()
                                dr("MsgID") = xo("MsgID") '动态生成的消息ID,每个消息都不同
                                dr("OpenID") = xo("FromUserName")'接收方OpenID
                            End If
                            dr("Status") = xo("Status") '记录发送状态
                            dr.Save()
                    End Select
            End Select
        End If

微信	WX_现有tag

Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/get?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As JObject = JObject.Parse(hc.GetData)
If jo("errcode") Is Nothing Then
    DataTables("tag").DataRows.Clear()
    For Each tg As JToken In jo("tags")
         Dim dr As DataRow = DataTables("tag").AddNew()
         dr("id") = tg("id") '标签id
         dr("name") = tg("name") '标签名
         dr("count") = tg("count") '此标签下的用户数
    Next
Else
    MessageBox.show(jo.ToString)
End If

微信	WX_网页详情授权

Dim e As RequestEventArgs = args(0)
Dim sb As New StringBuilder
Dim OpenID As String
Dim nickname1 As String
Dim appid1 As String = Forms("HTTP服务").Controls("TextBoxAppID").text
Dim appsecret1 As String = Forms("HTTP服务").Controls("TextBoxappsecret").text
Dim hturl As String = Forms("HTTP服务").Controls("TextBox网页回调").text

sb.AppendLine("<meta name='viewport' content='width=device-width,initial-scale=1,user-scalable=1'>")
If e.Host = hturl Then '授权测试
    If e.GetValues.ContainsKey("code") Then '如果是通过授权链接跳转而来,就从链接重提取code来获取openid
        Dim ul As String  = "https://api.weixin.qq.com/sns/oauth2/access_token?appid={0}&secret={1}&code={2}&grant_type=authorization_code"
        ul = CExp(ul,appid1,appsecret1,e.GetValues("code"))
        Dim hc As new HttpClient(ul)
        Dim jo As JObject = JObject.Parse(hc.GetData)
        If jo("openid") IsNot Nothing Then '如果获取openid成功(成功的话,还会同时返回一个accesstiken,用于获取用户详情)
            OpenID = jo("openid")
            Dim dr As DataRow = DataTables("WXUsers").Find("openid ='" & Openid & "'")
            If dr IsNot Nothing Then
                nickname1 = dr("nickname")
            Else
                ul = "https://api.weixin.qq.com/sns/userinfo?access_token={0}&openid={1}&lang=zh_CN "
                '根据openid和accesstoken获取用户详情,注意这里这个accesstoken不是普通accesston,只能用于网页授权
                hc = New HttpClient(CExp(ul, jo("access_token"), OpenId))
                jo = jo.Parse(hc.GetData)
                If jo("openid") IsNot Nothing Then
                    OpenID = jo("openid")
                    nickname1 = jo("nickname")
                    dr = DataTables("WXUsers").AddNew()
                    Dim nms() As String = {"openid","nickname","sex","city","country","province","headimgurl"}
                    For Each nm As String In nms
                        dr(nm) = jo(nm)
                    Next
                    dr.Save
                    OpenID = dr("openid")
                Else
                    e.WriteString(jo.ToString) '在用户浏览器显示错误信息
                    Return Nothing
                End If
            End If
            e.AppendCookie("nickname",nickname1) '用户名和openid存储在Cookie中
            e.AppendCookie("openid",OpenID)
        Else
            e.WriteString(jo.ToString) '在用户浏览器显示错误信息
            Return Nothing
        End If
    Else
        nickname1 = e.Cookies("nickname") '从cookie获取用户名和openid
        OpenID = e.Cookies("openid")
        If nickname1 = "" OrElse OpenID = "" Then
            '目标网址
            Dim ul1 As String = "https://open.weixin.qq.com/connect/oauth2/authorize?appid={0}&redirect_uri={1}&response_type=code&scope=snsapi_userinfo&state={2}#wechat_redirect"
            Dim ul2 As String = UrlEncode("http://" & hturl & "/tmf.html")
            ul1 = CExp(ul1,appid1,ul2,"123")
            sb.Append("<meta http-equiv='Refresh' content='0; url=" & ul1 & "'>") '跳转到授权链接
            e.WriteString(sb.ToString)
            Return Nothing
        End If
    End If
    'If  OpenID > "" And UserName > "" Then
    ''这里可以做进一步的权限判断
    'sb.AppendLine("欢迎" & UserName & "光临, <a href='http://wexin.foxtable.com'>刷新页面</a>")
    'Else
    'sb.AppendLine("你无权访问本系统")
    'End If
End If

Return OpenID & "|" & nickname1

'e.WriteString(OpenID)

微信	WX_获取单个用户详细信息

Dim usid As String = args(0)
Dim url As String = "https://api.weixin.qq.com/cgi-bin/user/info?access_token={0}&openid={1}&lang=zh_CN"
url = CExp(url, Functions.Execute("GetAccessToken"),usid)
Dim hc As New HttpClient(url)
Dim jo As JObject = Jobject.Parse(hc.GetDaTa)
If jo("errcode") Is  Nothing Then
    Dim dr As DataRow = DataTables("WXUsers").AddNew()
    Dim nms() As String = {"openid","nickname","sex","city","country","province","headimgurl","groupid","remark","language"}
    For Each nm As String In nms
        dr(nm) = jo(nm)
    Next
    If jo("tagid_list") IsNot Nothing Then
        dr("tagid_list") = CompressJson(jo("tagid_list")).Trim("[","]")
    End If
    dr.Save()
Else
    MessageBox.Show(jo.ToString)
End If

微信	WX_获取所有用户openid

Dim url As String = "https://api.weixin.qq.com/cgi-bin/user/get?access_token={0}&next_openid={1}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken"),""))
Dim sb As New StringBuilder
Dim jo As JObject = JObject.Parse(hc.GetData)
Do
    If jo("errcode") Is Nothing Then
        Dim cnt As Integer = jo("count")
        If cnt > 0 Then
            For Each jk As JToken  In jo("data")("openid")
                sb.AppendLine(jk)
            Next
            hc =  New HttpClient(CExp(url, Functions.Execute("GetAccessToken"),jo("next_openid").Tostring))     
            jo = JObject.Parse(hc.GetData)
        Else
            Exit Do
        End If
    Else
        MessageBox.Show(jo.ToString)
        Exit Do
    End If
Loop
FileSys.WriteAllText("d:\wxtest\openid.txt", sb.ToString, False)

微信	WX_获取所有用户详细信息

DataTables("WXUsers").DataRows.Clear()
Dim ul As String = "https://api.weixin.qq.com/cgi-bin/user/get?access_token={0}&next_openid={1}"  '获取用户OpenID列表接口
Dim il = "https://api.weixin.qq.com/cgi-bin/user/info/batchget?access_token={0}" '批量获取用户信息接口
Dim nms() As String = {"openid","nickname","sex","city","country","province","headimgurl","groupid","remark","language"} '列名
Dim hc As New HttpClient(CExp(ul, Functions.Execute("GetAccessToken"),"")) 
Dim ids As New List(of String) 'OpenId集合,每次获取10000个
Dim ba As New Jarray '准备用来获取用户信息的OpenId列表,一次不能超过100个
Dim jo As JObject = JObject.Parse(hc.GetData)
Do '循环获取,一次只能获取10000个OpenID
    If jo("errcode") Is Nothing Then
        Dim cnt As Integer = jo("count")
        If cnt = 0 Then '如果已经获取完所有用户'
            Exit Do
        End If
        For Each jk As JToken  In jo("data")("openid")
            ids.Add(jk)
        Next
        For i As Integer = 0 To ids.Count - 1  '循环获取用户详情,一次不能超过100个用户
            Dim uo As New JObject
            uo("openid") = ids(i)
            ba.Add(uo)
            If ba.Count = 100 OrElse i = ids.Count - 1 Then '每满100个就获取一次
                Dim bo As New Jobject
                bo("user_list") = ba
                hc = New HttpClient(CExp(il, Functions.Execute("GetAccessToken")))
                hc.Content = bo.ToString()
                Dim ro As JObject = JObject.Parse(hc.GetData)
                If ro("errcode") Is  Nothing Then
                    Dim ia As JArray = ro("user_info_list") '获取的用户信息列表
                    For Each jt As JToken In ia
                        Dim dr As DataRow = DataTables("WXUsers").Find("openid = '" & jt("openid").ToString() & "'")
                        If dr Is Nothing Then
                            dr = DataTables("WXUsers").AddNew()
                        End If
                        For Each nm As String In nms
                            dr(nm) = jt(nm)
                        Next
                        dr("tagid_list") = CompressJSON(jt("tagid_list"))
                    Next
                Else
                    MessageBox.Show(ro.ToString)
                    Exit For
                End If
                ba.Clear() '清除集合,准备获取下一批用户详情,每批只能100个.
            End If
        Next
        ids.Clear '清除已经获取的OpenID.,准备接收下一批OpenID
        hc =  New HttpClient(CExp(ul, Functions.Execute("GetAccessToken"),jo("next_openid").Tostring))  '获取下一批OpenID
        jo = JObject.Parse(hc.GetData)
    Else
        MessageBox.Show(jo.ToString)
        Exit Do
    End If
Loop
DataTables("WXUsers").Save()

微信	WX_获取某tag下所有用户

Dim url As String = "https://api.weixin.qq.com/cgi-bin/user/tag/get?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
jo("tagid") = "104"
hc.Content = jo.ToString()
jo = JObject.Parse(hc.GetData)
If jo("errcode") Is Nothing Then
    If CInt(jo("count")) > 0 Then
        For Each jk As JToken  In jo("data")("openid")
            Output.show(jk)
        Next
    End If
Else
    MessageBox.show(jo.ToString)
End If

微信	WX_获得某用户标签

Dim url As String = "https://api.weixin.qq.com/cgi-bin/tags/getidlist?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
jo("openid") = "ofjtFwBSZ5cNqTKLSKx2TNEAxfBI"
hc.Content = jo.ToString()
jo = JObject.Parse(hc.GetData)
If jo("tagid_list") IsNot Nothing Then
    For Each jk As JToken  In jo("tagid_list")
        Output.show(jk)
    Next
Else
    MessageBox.show(jo.ToString)
End If

微信	WX_设置用户备注

Dim url As String = "https://api.weixin.qq.com/cgi-bin/user/info/updateremark?access_token={0}"
Dim hc As New HttpClient(CExp(url, Functions.Execute("GetAccessToken")))
Dim jo As New JObject()
jo("openid") = "ofjtFwBSZ5cNqTKLSKx2TNEAxfBI"
jo("remark") = "用户备注名"
hc.Content = jo.ToString()
jo = JObject.Parse(hc.GetData)
If jo("errcode") = "0" Then
    MessageBox.Show("设置用户备注名成功")
Else
    MessageBox.Show(jo.ToString)
End If

权限	判断用户是否具有权限

Dim nm As String = args(0)
Dim gp As String = args(1)
Dim rls As String = args(2)
Dim dr As DataRow = args(3)
'将遍历users表以及授权表

Dim QXgps As new List(of String)
'授权表中分组列生成list
If dr.IsNull("分组") = False
    For Each x As String In CStr(dr("分组")).Split(",")
        QXgps.Add(x)
    Next
End If
'授权表中角色列生成list
Dim QXrls As new List(of String)
If dr.IsNull("角色") = False
    For Each x As String In CStr(dr("角色")).Split(",")
        QXgps.Add(x)
    Next
End If
'授权表中用户列生成list
Dim QXurs As new List(of String)
If dr.IsNull("用户")
    For Each x As String In CStr(dr("用户")).Split(",")
        QXurs.Add(x)
    Next
End If
'如果授权表中包含用户组或者用户名,则用户权限表新增一行
If QXgps.Contains(gp) OrElse QXurs.Contains(nm)
    Dim newdr As DataRow = DataTables("用户权限").AddNew
    newdr("用户") = nm
    newdr("模块名称") = dr("模块名称")
    newdr("权限名称") = dr("权限名称")
'如果用户角色列为空或者用户没有角色分配,则过
Else If QXgps.Count = 0 Or rls Is Nothing
    Return Nothing
'如果有角色则
Else
    For Each rl As String In rls.Split(",")
'如果在角色权限表中找到用户角色和模块名称对应的行则添加一行
        If DataTables("角色").Find("角色 ='" & rl & "' And 模块名称 = '" & dr("模块名称") & "'") IsNot Nothing
            Dim newdr As DataRow = DataTables("用户权限").AddNew
            newdr("用户") = nm
            newdr("模块名称") = dr("模块名称")
            newdr("权限名称") = dr("权限名称")
        End If
    Next
End If
DataTables("用户权限").Save
Return Nothing

权限	刷新现有数据表

For Each dt As DataTable In DataTables
    If DataTables("模块分配").Find("表名 ='" & dt.Name & "'") Is Nothing
        Dim dr As DataRow = DataTables("模块分配").AddNew
        dr("表名") = dt.Name
    End If
Next

Dim dtns As new List(of String)
For Each dt As DataTable In DataTables
    dtns.Add(dt.Name)
Next
For Each dr As DataRow In DataTables("模块分配").DataRows
    If dtns.Contains(dr("表名")) = False
        dr.Delete
    End If
Next

权限	加载下属内容

Dim ids As String
Dim fl As String
Dim oldfl As String = CurrentTable.DataTable.LoadFilter
If oldfl > "" AndAlso oldfl.Contains("用户名")
    CurrentTable.DataTable.Save
    CurrentTable.DataTable.RemoveFor("[_Identify] is not null")
    If _sub.count > 0
        For i As Integer = 0 To _sub.count - 1
            fl = "用户名 ='" & _sub(i) & "' OR " & fl
        Next
        If CurrentTable.DataTable.DataCols.Contains("分享")
            fl = fl &  "用户名 ='" & _UserName & "' OR 分享 = 1"
        Else
            fl = fl &  "用户名 ='" & _UserName & "'"
        End If
    Else
        If CurrentTable.DataTable.DataCols.Contains("分享")
            fl = "用户名 ='" & _UserName & "' OR 分享 = 1"
        Else
            fl = "用户名 ='" & _UserName & "'"
        End If
    End If
    CurrentTable.DataTable.LoadFilter = fl
    CurrentTable.DataTable.Load
End If

权限	数据表对应的模块

Dim dtn As String = args(0)
Dim dtmk As String = args(1)
If DataTables("模块设置").Find("数据表名 = '" & dtn & "' andalso 模块名称 = '" & dtmk & "'") IsNot Nothing
    Return True
Else
    Return False
End If

权限	生成上下级关系

DataTables("上下级关系").DeleteFor("")
For Each dr As Row In Tables("组织架构").Rows
    For i As Integer = 5 To 10
        If dr(Tables("组织架构").Cols(i).name) > ""
            Dim ndr As Row = Tables("上下级关系").AddNew
            ndr("上级") = dr("level1")
            ndr("下级") = dr(Tables("组织架构").Cols(i).name)
        End If
    Next
    For i As Integer = 6 To 10
        If dr(Tables("组织架构").Cols(i).name) > ""
            Dim ndr As Row = Tables("上下级关系").AddNew
            ndr("上级") = dr("level2")
            ndr("下级") = dr(Tables("组织架构").Cols(i).name)
        End If
    Next
    For i As Integer = 7 To 10
        If dr(Tables("组织架构").Cols(i).name) > ""
            Dim ndr As Row = Tables("上下级关系").AddNew
            ndr("上级") = dr("level3")
            ndr("下级") = dr(Tables("组织架构").Cols(i).name)
        End If
    Next
    For i As Integer = 8 To 10
        If dr(Tables("组织架构").Cols(i).name) > ""
            Dim ndr As Row = Tables("上下级关系").AddNew
            ndr("上级") = dr("level4")
            ndr("下级") = dr(Tables("组织架构").Cols(i).name)
        End If
    Next
    For i As Integer = 9 To 10
        If dr(Tables("组织架构").Cols(i).name) > ""
            Dim ndr As Row = Tables("上下级关系").AddNew
            ndr("上级") = dr("level5")
            ndr("下级") = dr(Tables("组织架构").Cols(i).name)
        End If
    Next
Next

Tables("上下级关系").RepeatFilter("去重",2)
DataTables("上下级关系").DeleteFor(Tables("上下级关系").Filter)
Tables("上下级关系").Filter = ""

权限	用户登录权限设置

'找到用户名为登录用户的行
If DataTables("用户权限").Select("[用户] = '" & _UserName & "' and 权限名称 = '可编辑'").Count > 0
    For Each dr1 As DataRow In DataTables("用户权限").Select("[用户] = '" & _UserName & "' and 权限名称 = '可编辑'")
        For Each dr2 As DataRow In DataTables("模块分配").Select("[模块名称] ='" & dr1("模块名称") & "'")
            Tables(dr2("表名")).AllowEdit = True
        Next
    Next
End If

窗口	itemclick

Dim e As StripItemEventArgs = args(0)
Dim pjtext As String = args(1)
Dim cstext As String = Args(2)
Select Case e.StripItem.Name
    Case "previous"
        '代码
        With CurrentTable
            .Position = .Position - 1
        End With
        
    Case "next"
        '代码
        With CurrentTable
            .Position = .Position + 1
        End With
    Case "close"
        '代码
        e.Form.Close
    Case "Save"
        e.Form.Controls("Label1").Select
        CurrentTable.Current.Save
        If e.Form.Controls.contains("项目") = True
            Dim xm As String = e.Form.Controls("项目").text
            If xm > "" AndAlso DataTables("项目管理").SQLFind("业主 ='" & xm & "'") Is Nothing
                Dim newdr1 = DataTables("项目管理").AddNew
                newdr1("业主") = xm
                newdr1("省份") = " 待确定"
            End If
            DataTables("项目管理").save
        End If
        If e.Form.Controls.contains("客户") = True
            Dim kh As String = e.Form.Controls("客户").text
            If kh > "" AndAlso DataTables("客户管理").SQLFind("公司 ='" & kh & "'") Is Nothing
                Dim newdr2 = DataTables("客户管理").AddNew
                newdr2("公司") = kh
                newdr2("省份") = " 待确定"
            End If
            DataTables("客户管理").Save
        End If
    Case  "new"
        Dim tbn As String = CurrentTable.DataTable.Name
        If user.Type = UserTypeEnum.User AndAlso _UserRole.Contains("管理者") = False
            '判断是否有本表的编辑权限
            Dim mk As String = DataTables("模块分配").SQLFind("表名 = '" & tbn & "'")("模块名称")
            If DataTables("用户权限").SQLFind("用户 ='" & _UserName & "' and 模块名称 = '" & mk & "' and 权限名称 = '可编辑'") IsNot Nothing
                e.Form.Controls("Label1").Select
                CurrentTable.AddNew
                With CurrentTable
                    .Position = .Rows.Count - 1
                End With
            End If
        Else
            CurrentTable.AddNew
            With CurrentTable
                .Position = .Rows.Count - 1
            End With
        End If
    Case "delete"
        If CurrentTable.AllowEdit = False
            MessageBox.Show("您无权删除此信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.Warning)
        Else
            If CurrentTable.Current IsNot Nothing
                Syscmd.Row.Delete()
            End If
        End If
    Case "project"
        Dim pj As String = e.Form.Controls(pjtext).text
        With Tables("项目管理")
            Dim r As Integer
            r = .FindRow("业主 = '" & pj & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                'MainTable = Tables("项目管理")
                .Position = r '定位到找到的行.
                Forms("项目管理").Open
                
            Else
                MessageBox.Show("没有找到相关项目记录","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
    Case "customer"
        Dim khs As String = e.Form.Controls(cstext).text
        Dim kh1 As String = khs.Split(",")(0)
        With Tables("客户管理")
            Dim r As Integer
            r = .FindRow("公司 = '" & kh1 & "'", 0, True ) '从当前行的下一行开始查找
            If r >= 0 Then '如果找到的话
                'MainTable = Tables("客户管理")
                .Position = r '定位到找到的行.
                Forms("客户管理").Open
                
            Else
                MessageBox.Show("没有找到相关客户信息","提示",MessageBoxButtons.OKCancel,MessageBoxIcon.None)
            End If
        End With
End Select

网页	excelreport

Dim e As RequestEventArgs = args(0)
Dim wb As WeUI = args(1)
Dim Book As New XLS.Book(ProjectPath & "Attachments\在线设计模板.xls")
Dim exl As String = ProjectPath & "Reports\在线设计网络.xls"
Dim dr As DataRow

dr = DataTables("在线系统设计").SQLFind("[_Identify] ='" & e.getValues("id") & "'")

If dr IsNot Nothing
    'book.PreBuild = False
    book.AddDataTable("在线系统设计","TMFGROUP","Select * from {在线系统设计} where _Identify ='" & e.getValues("id") & "'") '添加父表
    book.AddDataTable("TMF产品清单","TMFGROUP","Select * from {TMF产品清单} where 型号= '" & dr("膜型号") & "'") '添加子表
    book.AddRelation("在线系统设计","膜型号","TMF产品清单","型号") '建立关联
    e.WriteBook(book, dr("项目名称") & "_" & dr("公司名称") & "_" & dr("设计水量") & "TPH_TMF设计报告.xls",False)
Else
    With wb.AddMsgPage("","报告不存在","错误","报告不存在或已经被删除,请重新进行设计")
        .Icon = "warn"
        .AddButton("btn1","返回调整设计").Attribute = "onclick='history.go(-1)'"
        .AddExtra("联系POREX代表咨询:<br />杨工 18662273022<br />simon.yang@filtrationgroup.com")
    End With
        e.WriteString(wb.Build) '生成网页
End If
Return Nothing

网页	gettmftj

Dim e As RequestEventArgs = args(0)
Dim tljy As String
If e.PostValues("废水类型") > ""
    Dim min As String = DataTables("辅助").Find("废水类型 = '" & e.PostValues("废水类型") & "'")("通量建议min")
    Dim max As String = DataTables("辅助").Find("废水类型 = '" & e.PostValues("废水类型") & "'")("通量建议max")
    tljy = "建议通量为" & min & "至" & max & "LMH之间"
Else
    tljy = "请选择废水类型"
End If
Dim x As Double
Dim z As String
If val(e.PostValues("设计通量")) > 0 AndAlso val(e.PostValues("处理水量")) > 0
    x = e.PostValues("处理水量") / e.PostValues("设计通量") * 1000
    If e.PostValues("废水类型") = "脱硫废水"
        z = "推荐膜规格" & DataTables("辅助").Find("需要膜面积节点 < '" & x & "'","需要膜面积节点 desc")("脱硫废水推荐型号")
    Else If e.PostValues("废水类型") = "渗滤液"
        z = "推荐膜规格TUF-37"
    Else
        z = "推荐膜规格" & DataTables("辅助").Find("需要膜面积节点 < '" & x & "'","需要膜面积节点 desc")("推荐几芯膜")
    End If
Else
    z = "请输入水量和通量,以及选择废水类型"
End If

Dim we As String =  tljy & "|" & z

e.WriteString(we)
Return Nothing

网页	tmf

Dim wb As WeUI = Args(0)
Dim e As RequestEventArgs = args(1)
Dim iii() As String = CStr(Functions.Execute("WX_网页详情授权",e)).Split("|")
Dim oid As String = iii(0)
Dim nkn As String = iii(1)

wb.InsertHTML("<style type='text/css'>")
wb.InsertHTML("<!--")
wb.InsertHTML(".STYLE1 {")
wb.InsertHTML("font-family: Arial, Helvetica, sans-serif;font-size: 12px;color: #666666;")
wb.InsertHTML("}")
wb.InsertHTML("-->")
wb.InsertHTML("</style>")


wb.AddForm("", "form1", "tmfreport.html")
'POREXlogo引入
With wb.AddArticle("form1","ar1")
    .AddImage("./images/porexlogo.png")
    '.Attribute="style='background-color:black;color:white;'"
End With

With wb.AddInputGroup("form1", "ipg1", "POREX TMF-Pro 在线设计系统")
    .AddHidenValue("phone","")
    .AddHidenValue("wxid",oid)
    .AddHidenValue("nkn",nkn)
    .AddInput("项目名称","项目名称:","text").Required = True
    .AddInput("公司名称","公司名称:","text").Required = True
    With .AddInputCell("ipc1")
        .addlabel("处理水量标签","处理水量:",0)
        With .AddInput("处理水量","number",1)
            .Required = True
            .Placeholder = "请输入数字"
            .Step = 0.1
        End With
        .Addlabel("水量单位","m3/h",2)
        .Attribute = "onchange=""submitAjaxFileds('gettmftj.html','settmftj','处理水量','设计通量','废水类型',false)"""
    End With
    
    With .AddSelect("废水类型","废水类型:","|" & DataTables("辅助").GetComboListString("废水类型","","辅助排序"))
        .Required = True
        .Attribute = "onchange=""submitAjaxFileds('gettmftj.html','settmftj','处理水量','设计通量','废水类型',false)"""
    End With
    
    With .AddSelect("处理目的","处理目的:","|" & DataTables("辅助").GetComboListString("处理目的","","辅助排序"))
        .Attribute="onchange=""submitAjaxFileds('getgljd.html','setgljd','处理目的')"""
    End With
    With .AddInputCell("ipc2")
        .AddLabel("设计通量标签","设计通量:",0)
        With .AddInput("设计通量","number",1)
            .Required = True
            .Placeholder = "请输入数字"
        End With
        .Addlabel("通量单位","LMH",2)
        .Attribute = "onchange=""submitAjaxFileds('gettmftj.html','settmftj','处理水量','设计通量','废水类型',false)"""
    End With
    
    With .AddTextArea("建议通量",1)
        .Placeholder = "建议的通量范围"
        .Readonly = True
        .Attribute="style='font-style:italic;color:Orange;font-size:14px;'"
    End With
    
    .AddSelect("过滤精度","过滤精度:","|0.1|0.05|0.02")
    With .AddTextArea("过滤精度提示",1)
        .Readonly = True
        .Placeholder = "建议的过滤精度"
        .Attribute="style='font-style:italic;color:Orange;font-size:14px;'"
    End With
    With .AddSelect("单机架几列","每套几列:","|1|2|3|4")
        .Required = True
        .Attribute="onchange='setxhb()'"
    End With
    With .AddTextArea("单机架几列提示",3)
        .value = "单个机架上并联列数量,若干支膜组件串联,比如5~12支膜组件串联为一列.通常单个机架上放置1~4列."
        .Readonly = True
        .Attribute="style='font-style:italic;color:Orange;font-size:14px;'"
    End With
    With .AddSelect("膜规格","膜规格:","|" & DataTables("TMF产品清单").GetComboListString("产品选择","","有效面积_m2 DESC"))
        .Required = True
    End With
    With .AddTextArea("膜规格提示",2)
        .Readonly = True
        .Placeholder = "建议的膜规格"
        .Attribute="style='font-style:italic;color:Orange;font-size:14px;'"
    End With
    With .AddSelect("单台循环泵对应几列","单循环泵对应几列:","1|2|3|4")
        .Required = True
    End With
    
    With .AddTextArea("单台循环泵对应几列提示",2)
        .value = "单个机架至少含有一台循环泵,原则上建议单台循环泵对应一列."
        .Readonly = True
        .Attribute="style='font-style:italic;color:Orange;font-size:14px;'"
    End With
    With .Addinput("备用泵","备用泵数量","number")
        .Placeholder = "可选,请输入数字"
        .Value = 0
    End With
    With wb.AddButtonGroup("form1","btg1",False)
        .Add("btnok","设计","submit").Attribute = "onclick='phone()'"
        .Add("btnclear","清空","reset").Kind = 2
    End With
End With
wb.InsertHTML("<div align='center'><span class='STYLE1'>联系POREX代表咨询:<br />杨工 18662273022<br />")
wb.InsertHTML("<a href='mailto:simon.yang@filtrationgroup.com?cc=jack.li@filtrationgroup.com?subject=TMF设计咨询'>simon.yang@filtrationgroup.com</a>")
wb.AppendHTML("<script src='/lib/ajaxForm.js'></script>",True)
e.WriteString(wb.Build) '生成网页
Return Nothing

网页	tmfreport

Dim wb As WeUI = Args(0)
Dim e As RequestEventArgs = Args(1)
If e.PostValues("废水类型") > "" AndAlso e.PostValues("处理目的") > "" AndAlso val(e.PostValues("处理水量")) > 0 AndAlso CInt(e.PostValues("单机架几列")) > 0 AndAlso CInt(e.PostValues("单台循环泵对应几列")) > 0 AndAlso e.PostValues("膜规格") > "" AndAlso e.PostValues("过滤精度") > "" AndAlso val(e.PostValues("设计通量")) > 0
    Dim dr As DataRow
    dr = DataTables("在线系统设计").AddNew()
    dr("项目名称") = e.PostValues("项目名称")
    dr("公司名称") = e.PostValues("公司名称")
    dr("废水类型") = e.PostValues("废水类型")
    dr("处理目的") = e.PostValues("处理目的")
    dr("设计水量") = val(e.PostValues("处理水量"))
    dr("每套几列并联") = CInt(e.PostValues("单机架几列"))
    dr("列每循环泵") = CInt(e.PostValues("单台循环泵对应几列"))
    dr("几芯膜") = e.PostValues("膜规格")
    dr("过滤精度") = e.PostValues("过滤精度")
    dr("设计通量") = val(e.PostValues("设计通量"))
    dr("添加时间") = Date.Today
    dr("用户名") = "来自网页"
    dr("备用循环泵数量") = e.PostValues("备用泵")
    dr("phone") = e.PostValues("phone")
    dr("openid") = e.PostValues("wxid")
    dr("nickname") = e.PostValues("nkn")
    dr.save()
    '增加POREX logo
    wb.AppendHTML("<style>.mark{background-color:lightGray; color:black;font-size:12px;}</style>", True)
    With wb.AddArticle("","ar1")
        .AddImage("./images/porexlogo.png")
        '.Attribute="style='background-color:black;color:white;'"
    End With
    wb.InsertHTML("<style type='text/css'>")
    wb.InsertHTML("<!--")
    wb.InsertHTML(".STYLE1 {")
    wb.InsertHTML("font-family: Arial, Helvetica, sans-serif;font-size: 12px;color: #666666;")
    wb.InsertHTML("}")
    wb.InsertHTML("-->")
    wb.InsertHTML("</style>")
    
    
    '增加一个表单,把上一页的输入参数引用过来
    wb.AddForm("", "form2", "excelreport.html")
    With  wb.AddInputGroup("form2", "ipg1", "TMF设计参数")
        .Attribute="style='font-size:14px;'"
        .AddHidenValue("phone","")
        With .addInput("项目名称","项目名称:","text")
            .Readonly = True
            .value = dr("项目名称")
        End With
        
        With .AddInput("公司名称","公司名称:","text")
            .Readonly = True
            .value = dr("公司名称")
        End With
        
        With .AddInput("废水类型","废水类型:","text")
            .Readonly = True
            .value = dr("废水类型")
        End With
        
        With .AddInput("处理目的","处理目的:","text")
            .Readonly = True
            .value = dr("处理目的")
        End With
        
        With .AddInputCell("clsl")
            .AddLabel("处理水量标签","处理水量:",0)
            With .AddInput("处理水量","number",1)
                .Value = dr("设计水量")
                .Readonly = True
            End With
            .AddLabel("水量单位","m3/h",2)
            
        End With
        
        With .AddInputCell("gljd")
            .AddLabel("过滤精度标签","过滤精度:",0)
            With .AddInput("过滤精度","text",1)
                .Value = dr("过滤精度")
                .Readonly = True
            End With
            .AddLabel("过滤精度单位","um",2)
        End With
        
        With .AddInput("膜规格","膜规格:","text")
            .Readonly = True
            .value = dr("几芯膜")
        End With
        
        With .AddInput("单循环泵对应几列","单循环泵对应几列:","number")
            .Readonly = True
            .value = dr("列每循环泵")
        End With
    End With
    
    '生成输出的网页
    
    '增加表系统概况/系统配置/循环泵配置
    With wb.AddTable("","Table1")
        '.Attribute="style='background-color:black;color:white;'"
        .Highlight = -1
        .ColWidth = "250px"
        .head.AddRow("TMF设计报告","TMF设计报告").Attribute="style='color:MidnightBlue ;font-size:16px'"
        With .body.AddRow
            .AddCell("系统概况","colspan='2'")
            .Attribute = "class='mark'"
        End With
        .body.AddRow("项目名称",dr("项目名称"))'数据
        .body.AddRow("公司名称",dr("公司名称"))
        .body.AddRow("废水类型",dr("废水类型"))
        .body.AddRow("处理目的",dr("处理目的"))
        .body.AddRow("处理水量m3/h", dr("设计水量"))
        If dr("实际设计通量") > DataTables("辅助").Find("废水类型 = '" & dr("废水类型") & "'")("通量建议max")
            .body.AddRow("平均通量LMH",Format(dr("实际设计通量"),"0,0")).Attribute="style='background-color:red;color:white'"
            .body.AddRow("提示","建议通量范围" & dr("设计通量提示")).Attribute="style='font-style:italic;background-color:red;color:white'"
        Else
            .body.AddRow("平均通量LMH",Format(dr("实际设计通量"),"0,0"))
            .body.AddRow("提示","建议通量范围" & dr("设计通量提示")).Attribute="style='font-style:italic;color:Orange;'"
        End If
        .body.AddRow("TMF膜型号",dr("膜型号"))
        .body.AddRow("膜元件总数(支)",dr("膜元件总数"))
        .body.AddRow("总有效面积m2",format(dr("总有效面积"),"0.0"))
        'End With
        
        'With wb.AddTable("","Table2")
        '.Highlight = -1
        '.ColWidth = "50%"
        With .body.AddRow
            .AddCell("TMF系统配置","colspan='2'")
            .Attribute = "class='mark'"
        End With
        .body.AddRow("TMF膜型号",dr("膜型号"))
        .body.AddRow("单组件膜面积m2",dr("单支膜面积"))
        .body.AddRow("管式膜规格",dr("几芯膜"))
        .body.AddRow("过滤精度um",dr("过滤精度"))
        .body.AddRow("提示",dr("处理目的") & "建议采用" & dr("过滤精度提示") & "微米").Attribute="style='font-style:italic;color:Orange;'"
        .body.AddRow("机架数量",dr("系统套数"))
        .body.AddRow("列/机架",dr("每套几列并联"))
        If dr("单列串联支数") > DataTables("TMF产品清单").Find("型号 = '" & dr("膜型号") & "'")("最大串联长度")
            .body.AddRow("串联支数/列",dr("单列串联支数")).Attribute="style='background-color:red;color:white;'"
            .body.AddRow("提示",dr("串联支数提醒")).Attribute="style='font-style:italic;background-color:red;color:white'"
        Else
            .body.AddRow("串联支数/列",dr("单列串联支数"))
            .body.AddRow("提示",dr("串联支数提醒")).Attribute="style='font-style:italic;color:Orange;'"
        End If
        ' End With
        
        
        ' With wb.AddTable("","Table3")
        '.ColWidth = "50%"
        '.Highlight = -1
        With .body.AddRow
            .AddCell("循环泵配置","colspan='2'")
            .Attribute = "class='mark'"
        End With
        .body.AddRow("单循环泵对应几列",dr("列每循环泵"))
        .body.AddRow("备注:","单个机架至少需要一台循环泵").Attribute="style='font-style:italic;color:Orange;'"
        If dr("备用循环泵数量") > 0
            .body.AddRow("循环泵数量",dr("循环泵数量") & "(其中" & dr("备用循环泵数量") & "台为备用)")
        Else
            .body.AddRow("循环泵数量",dr("循环泵数量") & "(无备用泵)")
        End If
        .body.AddRow("单循环泵流量m3/h",dr("循环泵流量"))
        .body.AddRow("循环泵压力bar",dr("循环泵压力"))
        
    End With
    With wb.AddArticle("","ar12")
        .AddTitle("h3","流程示意图")
        .AddImage("/images/TMFprocess.png")
        .AddContent("*说明:在线设计仅供技术人员进行参考,涉及到具体项目实施可向POREX技术代表进一步沟通.")
        '.Attribute="style='background-color:black;color:white;'"
    End With
    
    '增加2个按钮,excel输出和调整设计
    Dim rp As String = "http://www.watermembrane.cn/excelreport.html?id=" & dr("_Identify") & "&wq=" & dr("设计水量") & "&sj=" & dr("实际设计通量")
    
    With wb.AddButtonGroup("","btg1",False)
        .Add("btnok","EXCEL输出","button","excelreport.html?id=" & dr("_Identify") & "&wq=" & dr("设计水量") & "&sj=" & dr("实际设计通量"))
        With .Add("btnclear","调整设计")
            .Attribute = "onclick='history.go(-1)'"
            .Kind = 2
        End With
    End With
    If CStr(dr("phone")).Contains("iPad") OrElse CStr(dr("phone")).Contains("iPhone") Then
        With wb.AddButtonGroup("","btg2",True)
            With .Add("btnmail","(请长按)邮件分享报告链接",False,"mailto:?subject=TMF设计咨询&body=本次TMF设计报告下载链接为:%0d%0a%0d%0a" & UrlEncode(rp) & "%0d%0a%0d%0a如有技术疑问可以向POREX中国区技术代表SimonYang咨询: Simon.yang@filtrationgroup.com;%0d%0a 或直接向POREXTMF公众号发送留言.%0d%0a%0d%0a%0d%0a Best Regards%0d%0a From POREX")
                .Kind = 1
            End With
        End With
    End If
    wb.AppendHTML("<script src='/lib/ajaxForm.js'></script>",True)
    wb.InsertHTML("<div align='center'><span class='STYLE1'>联系POREX代表咨询:<br />杨工 18662273022<br />")
    wb.InsertHTML("<a href='mailto:simon.yang@filtrationgroup.com&cc=jack.li@filtrationgroup.com?subject=TMF设计报告'>simon.yang@filtrationgroup.com</a>")
    e.WriteString(wb.Build)
Else
    With wb.AddMsgPage("","设计错误","设计错误!","设计必要内容输入不全或参数错误,请返回修改")
        .Icon = "warn"
        .AddButton("btn1","返回调整设计").Attribute = "onclick='history.go(-1)'"
        .AddExtra("联系POREX代表咨询:<br />杨工 18662273022<br />simon.yang@filtrationgroup.com")
    End With
    e.WriteString(wb.Build) '生成网页
End If
Return Nothing

全局代码

Default

Public _UserName As String
Public _UserGroup As String
Public _UserRole As String
Public _UserTable As DataTable
Public _loadtable As DataTable
Public _usAuth As DataTable
Public _mkTable As DataTable
Public _pjID As String
Public _enddate As Date
Public _remaindays As Integer
Public _level As Integer
Public _sub As List(of String)
Public _host As String
Public _ftpus As String
Public _ftppwd As String
Public _cpdic As new Dictionary(of String, String)

菜单事件

_AfterSelRangeChange

Dim t As Table
RibbonMenu.StatusBar.Message3 = ""
Vars("SysUpdateAggregate") = False
If e.Table IsNot CurrentTable OrElse CurrentTable Is Nothing Then
    Return
Else
    t = CurrentTable
End If
If t.TopRow = t.BottomRow AndAlso t.LeftCol = t.RightCol Then
    Return
End If
For c As Integer = t.LeftCol To t.RightCol 
    If t.Cols(c).IsNumeric = False Then
        Return
    End If
Next
Vars("SysUpdateAggregate") =  True

_CurrentTableChanged

Vars("SysUpdatePrintInfo") = True

_Load

'以下代码用于根据不同的屏幕分辨率和DPI显示不同的菜单内容,使得在常用分辨率和DPI下,菜单都能正常显示和使用.
'如果采用自定义菜单,且无需根据屏幕分辨率来调整菜单内容,可删除以下所有代码.
'如果调整了相关功能区或功能组的名称,请对应地修改以下代码



'以下代码用于将Cell快捷菜单中部分命令复制到Range快捷菜单中
'如果自行设计了Range菜单,或者调整了有关菜单命令的名称,请自行修改或删除以下代码
'Dim mnu1 As RibbonMenu.ContextMenu = ContextMenus("Cell")
'Dim mnu2 As RibbonMenu.ContextMenu = ContextMenus("Range")
'If mnu2.Items.Count = 0 '如果Range快捷菜单中没有命令,说明用户没有自行设计Range快捷菜单
    'mnu2.Items.Add(ContextMenus("Cell").Items("Cut"),False)
    'mnu2.Items.Add(ContextMenus("Cell").Items("Copy"))
    'mnu2.Items.Add(ContextMenus("Cell").Items("Paste"))
    'mnu2.Items.Add(ContextMenus("Cell").Items("RowMenu"))
    'mnu2.Items.Add(ContextMenus("Cell").Items("ColMenu"))
    'mnu2.Items.Add(ContextMenus("Cell").Items("Ascending"))
    'mnu2.Items.Add(ContextMenus("Cell").Items("Descending"))
    'mnu2.Items.Add(ContextMenus("Cell").Items("UnSort"))
'End If

_SystemIdle

If CurrentTable Is Nothing Then
    Return
End If
'此段代码用于显示OpenQQ的未读消息
Static OpenQQ As RibbonMenu.Button
Static LastTime As Date
If OpenQQ Is Nothing Then
    OpenQQ = ConfigBar.Items("OpenQQ")
End If
Dim txt As String
If QQClient.Ready
    If QQClient.UnreadCount > 0 Then
        txt = "(" & QQClient.UnreadCount & "条)"
    End If
End If
If OpenQQ.Text <> txt Then
    OpenQQ.Text = txt
End If
If OpenQQ.Text > "" Then
    Dim ntp As timeSpan = Date.Now - LastTime
    If ntp.TotalSeconds >= 0.5 Then
        LastTime = Date.Now
        If OpenQQ.ForeColor = Color.Red Then
            OpenQQ.ForeColor = Color.Transparent
        Else
            OpenQQ.ForeColor = Color.Red
        End If
    End If
End If

'此段代码用于更新日常工作区"整行"按钮的状态,,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除了此按钮,应该删除此段代码
Static lm As RibbonMenu.ToggleButton
If lm Is Nothing Then
    lm = RibbonTabs("Common").Groups("Edit").Items("ListMode")
End If
If lm.Pressed <> CurrentTable.ListMode Then
    lm.Pressed = CurrentTable.ListMode
End If

'此段代码用于更新日常工作区"切换"按钮的状态,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除了此按钮,应该删除此段代码
Static tb As RibbonMenu.ToggleButton
If tb Is Nothing Then
    tb = CType(RibbonTabs("Common").Groups("SortAndFilter").Items("Toggle"), RibbonMenu.ToggleButton)
End If
If (CurrentTable.Filter > "" AndAlso CurrentTable.ApplyFilter = True) OrElse (CurrentTable.Sort > "" AndAlso CurrentTable.ApplySort = True) OrElse (CurrentTable.IsRelation = False AndAlso CurrentTable.DataTable.InBackEndFilterMode = True) Then
    If tb.Pressed = False Then
        tb.Pressed = True
    End If
Else
    If tb.Pressed = True Then
        tb.Pressed = False
    End If
End If

'此段代码用于更新配置栏"后台筛选"按钮的状态,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除了此按钮,应该删除此段代码
Static bf As RibbonMenu.ToggleButton
If bf Is Nothing Then
    bf = CType(ConfigBar.Items("BackEndFilter"), RibbonMenu.ToggleButton)
End If
If CurrentTable.AllowBackEndFilter Then
    If bf.Pressed = False Then
        bf.Pressed = True
    End If
Else
    If bf.Pressed
        bf.Pressed = False
    End If
End If

'此段代码用于决定日常工作功能区的"筛选"按钮是否可用,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除了此按钮,应该删除此段代码
Static fm As RibbonMenu.MenuButton
If fm Is Nothing Then
    fm = CType(RibbonTabs("Common").Groups("SortAndFilter").Items("Filter"), RibbonMenu.MenuButton)
End If
If CurrentTable.Position < 0 OrElse CurrentTable.ColSel < 0 Then 
    If fm.Enabled Then
        fm.Enabled = False
    End If
Else
    If Not fm.Enabled Then
        fm.Enabled = True
    End If
End If

'以下代码用于更新管理项目功能区"暂停计划"按钮的状态,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除此按钮,也应该删除此段代码
'Static tp As RibbonMenu.ToggleButton
'If tp Is Nothing Then
    'tp = CType(RibbonTabs("Project").Groups("Timers").Items("Pause"), RibbonMenu.ToggleButton)
'End If
'If Mytimers.Pause Then
    'If tp.Pressed = False Then tp.Pressed = True
'Else
    'If tp.Pressed  Then tp.Pressed = False
'End If

'以下代码用于更新配置栏"查阅模式"按钮的状态,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除此按钮,也应该删除此段代码
'Static bm As RibbonMenu.ToggleButton
'If bm Is Nothing Then
    'bm = Ctype(ConfigBar.Items("BrowseMode"),RibbonMenu.ToggleButton)
'End If
'If DataTables.AllowEdit Then
    'If bm.Pressed Then bm.Pressed = False
'Else
   'If bm.Pressed =False Then bm.Pressed = True
'End If


'以下代码用于更新配置栏"记录窗口"按钮的状态,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除此按钮,也应该删除此段代码
Static rw As RibbonMenu.ToggleButton
If rw Is Nothing Then
    rw = Ctype(ConfigBar.Items("RecordWindow"),RibbonMenu.ToggleButton)
End If
If CurrentTable.RecordGridVisible Then
    If rw.Pressed =False Then rw.Pressed = True
Else
   If rw.Pressed Then rw.Pressed = False
End If

'以下代码用于更新快速访问栏中的"撤销"和"重做"按钮的状态,如果按钮已经改名或者移到别的功能区,请对应地修改此段代码
'如果删除了这两个按钮,也应该删除此段代码
Static Undo As RibbonMenu.Button
Static Redo As RibbonMenu.Button
If Undo Is Nothing Then
    Undo = QAT.Items("Undo")
    Redo = QAT.Items("Redo")
End If
If CurrentTable.CanUndo Then
    If Undo.Enabled = False Then Undo.Enabled = True
Else
    If Undo.Enabled  Then Undo.Enabled = False
End If
If CurrentTable.CanRedo Then
    If Redo.Enabled = False Then Redo.Enabled = True
Else
    If Redo.Enabled Then Redo.Enabled = False
End If

Dim t As Table = CurrentTable

'以下代码用于在状态栏显示自动计算结果,如果不需要自动计算,可删除这一段
If Vars("SysUpdateAggregate") 
    If Windows.Forms.Control.MouseButtons <> Windows.Forms.MouseButtons.None OrElse Windows.Forms.Control.ModifierKeys <> Windows.Forms.Keys.None Then
        Return
    End If
    Dim Str1 As String = ""
    Vars("SysUpdateAggregate") = False
    With RibbonTabs("Common").Groups("Aggregate")
        With CType(.Items("Aggregate"), RibbonMenu.ToggleButton)
            If .Pressed = False Then
                Return
            End If
        End With
        If CType(.Items("Count"), RibbonMenu.CheckBox).Checked Then
            Str1 = Str1 & "计数:" & t.Aggregate(AggregateEnum.Count, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
        End If
        If CType(.Items("Sum"), RibbonMenu.CheckBox).Checked Then
            Str1 = Str1 & "累计:" & t.Aggregate(AggregateEnum.Sum, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
        End If
        If CType(.Items("Average"), RibbonMenu.CheckBox).Checked Then
            Str1 = Str1 & "平均:" & t.Aggregate(AggregateEnum.Average, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
        End If
        If CType(.Items("Max"), RibbonMenu.CheckBox).Checked Then
            Str1 = Str1 & "最大:" & t.Aggregate(AggregateEnum.Max, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
        End If
        If CType(.Items("Min"), RibbonMenu.CheckBox).Checked Then
            Str1 = Str1 & "最小:" & t.Aggregate(AggregateEnum.Min, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
        End If
        With CType(.Items("Other"), RibbonMenu.MenuButton)
            If CType(.Items("Std"), RibbonMenu.ToggleButton).Pressed Then
                Str1 = Str1 & "标准差:" & t.Aggregate(AggregateEnum.Std, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
            End If
            If CType(.Items("StdPop"), RibbonMenu.ToggleButton).Pressed Then
                Str1 = Str1 & "总体标准差:" & t.Aggregate(AggregateEnum.StdPop, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
            End If
            If CType(.Items("Var"), RibbonMenu.ToggleButton).Pressed Then
                Str1 = Str1 & "方差:" & t.Aggregate(AggregateEnum.Var, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
            End If
            If CType(.Items("VarPop"), RibbonMenu.ToggleButton).Pressed Then
                Str1 = Str1 & "总体方差:" & t.Aggregate(AggregateEnum.VarPop, t.TopRow, t.LeftCol, t.BottomRow, t.RightCol) & " "
            End If
        End With
    End With
    RibbonMenu.StatusBar.Message3 = Str1
End If

BackEndFilter_Click

If CurrentTable IsNot Nothing  Then
    CurrentTable.AllowBackEndFilter = Not CurrentTable.AllowBackEndFilter
    e.ToggleButton.Pressed = CurrentTable.AllowBackEndFilter
End If

Calculator_Click

If CurrentTable IsNot Nothing Then
    CurrentTable.OpenCalculator
End If

Cell_Ascending_Click

Syscmd.Sort.Ascending()

Cell_Copy_Click

Syscmd.Edit.Copy()

Cell_Cut_Click

Syscmd.Edit.Cut()

Cell_Descending_Click

Syscmd.Sort.Descending()

Cell_Filter_AdvancedFilter_Click

Syscmd.Filter.Advanced()

Cell_Filter_Equal_Click

Syscmd.Filter.Equal()

Cell_Filter_FilterFalse_Click

Syscmd.Filter.FilterBoolean(False)

Cell_Filter_FilterTrue_Click

Syscmd.Filter.FilterBoolean(True)

Cell_Filter_Less_Click

Syscmd.Filter.LessThan()

Cell_Filter_LessOrEqual_Click

Syscmd.Filter.NotMoreThan()

Cell_Filter_More_Click

Syscmd.Filter.MoreThan()

Cell_Filter_MoreOrEqual_Click

Syscmd.Filter.NotLessThan()

Cell_Filter_NotEqual_Click

Syscmd.Filter.UnEqual()

Cell_Filter_NotNull_Click

Syscmd.Filter.NotNull()

Cell_Filter_Null_Click

Syscmd.Filter.Null()

Cell_Filter_Period_M1_Click

Syscmd.Filter.FilterByMonth(1)

Cell_Filter_Period_M10_Click

Syscmd.Filter.FilterByMonth(10)

Cell_Filter_Period_M11_Click

Syscmd.Filter.FilterByMonth(11)

Cell_Filter_Period_M12_Click

Syscmd.Filter.FilterByMonth(12)

Cell_Filter_Period_M2_Click

Syscmd.Filter.FilterByMonth(2)

Cell_Filter_Period_M3_Click

Syscmd.Filter.FilterByMonth(3)

Cell_Filter_Period_M4_Click

Syscmd.Filter.FilterByMonth(4)

Cell_Filter_Period_M5_Click

Syscmd.Filter.FilterByMonth(5)

Cell_Filter_Period_M6_Click

Syscmd.Filter.FilterByMonth(6)

Cell_Filter_Period_M7_Click

Syscmd.Filter.FilterByMonth(7)

Cell_Filter_Period_M8_Click

Syscmd.Filter.FilterByMonth(8)

Cell_Filter_Period_M9_Click

Syscmd.Filter.FilterByMonth(9)

Cell_Filter_Period_Q1_Click

Syscmd.Filter.FilterByQuarter(1)

Cell_Filter_Period_Q2_Click

Syscmd.Filter.FilterByQuarter(2)

Cell_Filter_Period_Q3_Click

Syscmd.Filter.FilterByQuarter(3)

Cell_Filter_Period_Q4_Click

Syscmd.Filter.FilterByQuarter(4)

Cell_Filter_Popup

Dim t As Table = CurrentTable
If t.ColSel < 0 Then
    Return
End If
Dim m As RibbonMenu.ContextCommandMenu = e.CommandMenu
Dim c As Col = t.Cols(t.ColSel)
Dim Less As RibbonMenu.ContextCommand = CType(m.Items("Less"), RibbonMenu.ContextCommand)
Dim LessOrEqual As RibbonMenu.ContextCommand = CType(m.Items("LessOrEqual"), RibbonMenu.ContextCommand)
Dim More As RibbonMenu.ContextCommand = CType(m.Items("More"), RibbonMenu.ContextCommand)
Dim MoreOrEqual As RibbonMenu.ContextCommand = CType(m.Items("MoreOrEqual"), RibbonMenu.ContextCommand)
Dim Equal As RibbonMenu.ContextCommand = CType(m.Items("Equal"), RibbonMenu.ContextCommand)
Dim NotEqual As RibbonMenu.ContextCommand = CType(m.Items("NotEqual"), RibbonMenu.ContextCommand)
Dim FilterTrue As RibbonMenu.ContextCommand = CType(m.Items("FilterTrue"), RibbonMenu.ContextCommand)
Dim FilterFalse As RibbonMenu.ContextCommand = CType(m.Items("FilterFalse"), RibbonMenu.ContextCommand)
Dim SamePeriod As RibbonMenu.ContextCommandMenu = CType(m.Items("SamePeriod"), RibbonMenu.ContextCommandMenu)
Dim Period As RibbonMenu.ContextCommandMenu = CType(m.Items("Period"), RibbonMenu.ContextCommandMenu)
Dim StringFilter As RibbonMenu.ContextCommandMenu = CType(m.Items("StringFilter"), RibbonMenu.ContextCommandMenu)
Dim ValueFilter As RibbonMenu.ContextCommandMenu = CType(m.Items("ValueFilter"), RibbonMenu.ContextCommandMenu)
Dim StatusFilter As RibbonMenu.ContextCommandMenu = CType(m.Items("StatusFilter"), RibbonMenu.ContextCommandMenu)
Dim SameValueFilter As RibbonMenu.ContextCommandMenu = CType(m.Items("SameValues"), RibbonMenu.ContextCommandMenu)
Dim AdvancedFilter As RibbonMenu.ContextCommand = CType(m.Items("AdvancedFilter"), RibbonMenu.ContextCommand)
Dim Null As RibbonMenu.ContextCommand = CType(m.Items("Null"), RibbonMenu.ContextCommand)
Dim NotNull As RibbonMenu.ContextCommand = CType(m.Items("NotNull"), RibbonMenu.ContextCommand)
StatusFilter.Delimiter = c.IsBoolean
AdvancedFilter.Delimiter = Not c.IsBoolean
If c.IsDate Then
    ValueFilter.Text = "日期筛选"
ElseIf c.IsNumeric Then
    ValueFilter.Text = "数值筛选"
End If
If t.Position < 0 Then
    Less.Visible = False
    LessOrEqual.Visible = False
    More.Visible = False
    MoreOrEqual.Visible = False
    Equal.Visible = False
    NotEqual.Visible = False
    SamePeriod.Visible = False
    Period.Visible = c.IsDate
    Return
Else
    Period.Visible = c.IsDate 
    SamePeriod.Visible = c.IsDate
    Sameperiod.Delimiter = Not Period.Visible
    StringFilter.Visible = c.IsString
    ValueFilter.Visible = c.IsDate OrElse c.IsNumeric
    ValueFilter.Delimiter = c.IsNumeric
    If c.IsDate Then
        SamePeriod.Items("Hour").Visible = (c.DataCol.DateTimeFormat <> DateTimeFormatEnum.Date)
        SamePeriod.Items("Minute").Visible = (c.DataCol.DateTimeFormat <> DateTimeFormatEnum.Date)
    End If
End If
If c.IsBoolean Then
    FilterTrue.Visible = True
    FilterFalse.Visible = True
    Equal.Visible = False
    NotEqual.Visible = False
    Less.Visible = False
    More.Visible = False
    LessOrEqual.Visible = False
    MoreOrEqual.Visible = False
    SameValueFilter.Visible = False
    Null.Visible = False
    NotNull.Visible = False
Else
    FilterTrue.Visible = False
    FilterFalse.Visible = False
    Equal.Visible = True
    NotEqual.Visible = True
    Null.Visible = True
    NotNull.Visible = True
    If t.Current.IsNull(t.ColSel) OrElse c.IsString Then
        Less.Visible = False
        More.Visible = False
        LessOrEqual.Visible = False
        MoreOrEqual.Visible = False
    Else
        Less.Visible = True
        More.Visible = True
        LessOrEqual.Visible = True
        MoreOrEqual.Visible = True
    End If
End If
If t.Current.IsNull(t.ColSel) Then
    Equal.Visible = False
    NotEqual.Visible = False
    Sameperiod.Visible = False
    ValueFilter.Delimiter = True
ElseIf c.IsString Then
   Dim v As String = t.Text
    If v > "" AndAlso v.Length > 15 Then
        v = v.SubString(0,15) & "..."
    End If
    Equal.Text = "等于 """ & v & """"
    NotEqual.Text = "不等于 """ & v  & """"
ElseIf c.IsNumeric Then
    Equal.Text = "等于 " & t.Text
    NotEqual.Text = "不等于 " & t.Text
    Less.Text = "小于 " & t.Text
    LessOrEqual.Text = "不大于 " & t.Text
    More.Text = "大于 " & t.Text
    MoreOrEqual.Text = "不小于 " & t.Text
ElseIf c.IsDate Then
    Equal.Text = "等于 " & t.Text
    NotEqual.Text = "不等于 " & t.Text
    Less.Text = "早于 " & t.Text
    More.Text = "晚于 " & t.Text
    LessOrEqual.Text = "不晚于 " & t.Text
    MoreOrEqual.Text = "不早于 " & t.Text
End If

Cell_Filter_SamePeriod_Day_Click

Syscmd.Filter.SameDay()

Cell_Filter_SamePeriod_Hour_Click

Syscmd.Filter.SameHour()

Cell_Filter_SamePeriod_Minute_Click

Syscmd.Filter.SameMinute()

Cell_Filter_SamePeriod_Month_Click

Syscmd.Filter.SameMonth()

Cell_Filter_SamePeriod_Quarter_Click

Syscmd.Filter.SameQuarter()

Cell_Filter_SamePeriod_Week_Click

Syscmd.Filter.SameWeek()

Cell_Filter_SamePeriod_Year_Click

Syscmd.Filter.SameYear()

Cell_Filter_SameValues_HideSameValues_Click

Syscmd.Filter.HideSameValues()

Cell_Filter_SameValues_ShowRedundantValues_Click

Syscmd.Filter.ShowRedundantValues()

Cell_Filter_SameValues_ShowSameValues_Click

Syscmd.Filter.ShowSameValues()

Cell_Filter_SameValues_ShowUnqiueValue_Click

Syscmd.Filter.ShowUnqiueValues()

Cell_Filter_StatusFilter_LockedRows_Click

Syscmd.Filter.LockStatusFilter(True)

Cell_Filter_StatusFilter_UnlockedRows_Click

Syscmd.Filter.LockStatusFilter(False)

Cell_Filter_StringFilter_Contains_Click

Syscmd.Filter.Contains()

Cell_Filter_StringFilter_EndsWith_Click

Syscmd.Filter.EndsWith()

Cell_Filter_StringFilter_Equal_Click

Syscmd.Filter.Equal(False)

Cell_Filter_StringFilter_Like_Click

Syscmd.Filter.Like()

Cell_Filter_StringFilter_NotContains_Click

Syscmd.Filter.NotContains()

Cell_Filter_StringFilter_NotEndsWith_Click

Syscmd.Filter.NotEndsWith()

Cell_Filter_StringFilter_NotLike_Click

Syscmd.Filter.NotLike()

Cell_Filter_StringFilter_NotStartsWith_Click

Syscmd.Filter.NotStartsWith()

Cell_Filter_StringFilter_StartsWith_Click

Syscmd.Filter.StartsWith()

Cell_Filter_StringFilter_UnEqual_Click

Syscmd.Filter.UnEqual(False)

Cell_Filter_ValueFilter_Between_Click

Syscmd.Filter.BetWeen()

Cell_Filter_ValueFilter_Equal_Click

Syscmd.Filter.Equal(False)

Cell_Filter_ValueFilter_Less_Click

Syscmd.Filter.LessThan(False)

Cell_Filter_ValueFilter_LessOrEqual_Click

Syscmd.Filter.NotMoreThan(False)

Cell_Filter_ValueFilter_More_Click

Syscmd.Filter.MoreThan(False)

Cell_Filter_ValueFilter_MoreOrEqual_Click

Syscmd.Filter.NotLessThan(False)

Cell_Filter_ValueFilter_NotBetween_Click

Syscmd.Filter.NotBetWeen()

Cell_Filter_ValueFilter_NotEqual_Click

Syscmd.Filter.Unequal(False)

Cell_Filter_ValueFilter_Popup

dim t as Table = CurrentTable
Dim m As RibbonMenu.ContextCommandMenu = e.CommandMenu
Dim c As Col = t.Cols(t.ColSel)
Dim Less As RibbonMenu.ContextCommand = CType(m.Items("Less"), RibbonMenu.ContextCommand)
Dim LessOrEqual As RibbonMenu.ContextCommand = CType(m.Items("LessOrEqual"), RibbonMenu.ContextCommand)
Dim More As RibbonMenu.ContextCommand = CType(m.Items("More"), RibbonMenu.ContextCommand)
Dim MoreOrEqual As RibbonMenu.ContextCommand = CType(m.Items("MoreOrEqual"), RibbonMenu.ContextCommand)
If c.IsDate Then
    Less.Text = "早于..."
    More.Text = "晚于..."
    LessOrEqual.Text = "不晚于..."
    MoreOrEqual.Text = "不早于..."
Else If c.IsNumeric Then
    Less.Text = "小于..."
    More.Text = "大于..."
    LessOrEqual.Text = "不大于..."
    MoreOrEqual.Text = "不小于..."
End If

Cell_Load_Click

Dim t As Table = CurrentTable
If t.IsRelation = False
    t.DataTable.Load()
End If

Cell_Paste_Click

Syscmd.Edit.Paste()

Cell_Popup

'e.ContextMenu.Items("DockSetting").Visible= (CurrentTable.IsChild OrElse CurrentTable.IsParent)
e.ContextMenu.Items("Filter").Enabled = (CurrentTable.Current IsNot Nothing)
e.ContextMenu.Items("Load").Visible = (CurrentTable.IsRelation = False)

Cell_Select_Click

Syscmd.Filter.Values()

Cell_UnFilter_Click

Syscmd.Filter.UnFilter()

Cell_UnSort_Click

Syscmd.Sort.UnSort()

Column_Ascending_Click

Syscmd.Sort.Ascending()

Column_Desceding_Click

Syscmd.Sort.Descending()

Column_Freeze_Click

Syscmd.Column.Freeze()

Column_Hide_Click

Syscmd.Column.Hide()

Column_Lock_Click

Syscmd.Column.Lock()

Column_UnFreeze_Click

Syscmd.Column.UnFreeze()

Column_UnHide_Click

Syscmd.Column.UnHide()

Column_Unlock_Click

Syscmd.Column.Unlock()

Common_Aggregate_Aggregate_PressedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Average_CheckedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Count_CheckedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Max_CheckedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Min_CheckedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Other_RepeatFill_Click

Syscmd.Edit.RepeatFill()

Common_Aggregate_Other_SerialFill_Click

Syscmd.Edit.SerialFill()

Common_Aggregate_Other_Std_PressedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Other_StdPop_PressedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Other_Var_PressedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Other_VarPop_PressedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Aggregate_Sum_CheckedChanged

RaiseSystemEvent(CurrentTable,SystemEventTypeEnum.AfterSelRangeChange)

Common_Edit_Find_Click

Syscmd.Edit.Find()

Common_Edit_ListMode_PressedChanged

If CurrentTable IsNot Nothing Andalso CurrentTable.ListMode <> e.ToggleButton.Pressed Then
    CurrentTable.NeedSaveSetting = True
    CurrentTable.ListMode = e.ToggleButton.Pressed
End If

Common_Edit_MarkCell_PressedChanged

MarkModifedCell = e.ToggleButton.Pressed
For Each t As Table In Tables
    t.Refresh
Next

Common_Edit_Reject_Click

Syscmd.Edit.Reject()

Common_Edit_序列填充_Click

Syscmd.Edit.SerialFill()

Common_Edit_重复填充_Click

Syscmd.Edit.RepeatFill()

Common_openqq_openqq_Click

Forms("登录窗口").open()

Common_SortAndFilter_Ascending_Click

Syscmd.Sort.Ascending()

Common_SortAndFilter_Descending_Click

Syscmd.Sort.Descending()

Common_SortAndFilter_Filter_Equal_Click

Syscmd.Filter.Equal()

Common_SortAndFilter_Filter_FilterFalse_Click

Syscmd.Filter.FilterBoolean(False)

Common_SortAndFilter_Filter_FilterTrue_Click

Syscmd.Filter.FilterBoolean(True)

Common_SortAndFilter_Filter_Less_Click

Syscmd.Filter.LessThan()

Common_SortAndFilter_Filter_LessOrEqual_Click

Syscmd.Filter.NotMoreThan()

Common_SortAndFilter_Filter_More_Click

syscmd.Filter.MoreThan()

Common_SortAndFilter_Filter_MoreOrEqual_Click

Syscmd.Filter.NotLessThan()

Common_SortAndFilter_Filter_MouseEnter

'...
Dim t As Table = CurrentTable
Dim m As RibbonMenu.MenuButton = e.MenuButton
Dim c As Col = t.Cols(t.ColSel)
Dim Less As RibbonMenu.Button = CType(m.Items("Less"), RibbonMenu.Button)
Dim LessOrEqual As RibbonMenu.Button = CType(m.Items("LessOrEqual"), RibbonMenu.Button)
Dim More As RibbonMenu.Button = CType(m.Items("More"), RibbonMenu.Button)
Dim MoreOrEqual As RibbonMenu.Button = CType(m.Items("MoreOrEqual"), RibbonMenu.Button)
Dim Equal As RibbonMenu.Button = CType(m.Items("Equal"), RibbonMenu.Button)
Dim NotEqual As RibbonMenu.Button = CType(m.Items("NotEqual"), RibbonMenu.Button)
Dim SamePeriod As RibbonMenu.MenuButton = CType(m.Items("SamePeriod"), RibbonMenu.MenuButton)
Dim Period As RibbonMenu.MenuButton = CType(m.Items("Period"), RibbonMenu.MenuButton)
Dim Separator As RibbonMenu.Separator = CType(m.Items("Separator"), RibbonMenu.Separator)
Dim StringFilter As RibbonMenu.MenuButton = CType(m.Items("StringFilter"), RibbonMenu.MenuButton)
Dim ValueFilter As RibbonMenu.MenuButton = CType(m.Items("ValueFilter"), RibbonMenu.MenuButton)
Dim FilterTrue As RibbonMenu.Button = CType(m.Items("FilterTrue"), RibbonMenu.Button)
Dim FilterFalse As RibbonMenu.Button = CType(m.Items("FilterFalse"), RibbonMenu.Button)
Dim Null As RibbonMenu.Button = CType(m.Items("Null"), RibbonMenu.Button)
Dim NotNull As RibbonMenu.Button = CType(m.Items("NotNull"), RibbonMenu.Button)
If c.IsDate Then
    ValueFilter.Text= "日期筛选"
ElseIf c.IsNumeric Then
    ValueFilter.Text= "数值筛选"
End If
If t.Position < 0 Then
    FilterTrue.Visible = False
    FilterFalse.Visible = False
    Less.Visible = False
    LessOrEqual.Visible = False
    More.Visible = False
    MoreOrEqual.Visible = False
    Equal.Visible = False
    NotEqual.Visible = False
    SamePeriod.Visible = False
    Separator.Visible = False
    Period.Visible = c.IsDate
    Return
Else
    Period.Visible = c.IsDate
    SamePeriod.Visible = c.IsDate
    Separator.Visible = c.IsDate Or c.IsString Or c.IsNumeric
    StringFilter.Visible = c.IsString
    ValueFilter.Visible = c.IsDate Or c.IsNumeric
    If c.IsDate Then
        SamePeriod.Items("Hour").Visible = (c.DataCol.DateTimeFormat <> DateTimeFormatEnum.Date)
        SamePeriod.Items("Minute").Visible = (c.DataCol.DateTimeFormat <> DateTimeFormatEnum.Date)
    End If
End If
If c.IsBoolean Then
    FilterTrue.Visible = True
    FilterFalse.Visible = True
    Equal.Visible = False
    NotEqual.Visible = False
    Less.Visible = False
    More.Visible = False
    LessOrEqual.Visible = False
    MoreOrEqual.Visible = False
    Null.Visible = False
    NotNull.Visible = FAlse
Else
    FilterTrue.Visible = False
    FilterFalse.Visible = False
    Equal.Visible = True
    NotEqual.Visible = True
    Null.Visible = True
    NotNull.Visible = True
    If t.Current.IsNull(t.ColSel) OrElse c.IsString Then
        Less.Visible = False
        More.Visible = False
        LessOrEqual.Visible = False
        MoreOrEqual.Visible = False
    Else
        Less.Visible = True
        More.Visible = True
        LessOrEqual.Visible = True
        MoreOrEqual.Visible = True
    End If
End If
If t.Current.IsNull(t.ColSel) Then
    Equal.Visible = False
    NotEqual.Visible = False
    m.Items("SamePeriod").Visible = False
ElseIf c.IsString Then
    Dim v As String = t.Text
    If v > "" AndAlso v.Length > 15 then
        v = v.SubString(0,15) & "..."
    End If
    Equal.Text = "等于 """ & v  & """"
    NotEqual.Text = "不等于 """ & v & """"
ElseIf c.IsNumeric Then
    Equal.Text = "等于 " & t.Text
    NotEqual.Text = "不等于 " & t.Text
    Less.Text = "小于 " & t.Text
    LessOrEqual.Text = "不大于 " & t.Text
    More.Text = "大于 " & t.Text
    MoreOrEqual.Text = "不小于 " & t.Text
ElseIf c.IsDate Then
    Equal.Text = "等于 " & t.Text
    NotEqual.Text = "不等于 " & t.Text
    Less.Text = "早于 " & t.Text
    More.Text = "晚于 " & t.Text
    LessOrEqual.Text = "不晚于 " & t.Text
    MoreOrEqual.Text = "不早于 " & t.Text
End If

Common_SortAndFilter_Filter_NotEqual_Click

Syscmd.Filter.UnEqual()

Common_SortAndFilter_Filter_NotNull_Click

Syscmd.Filter.NotNull()

Common_SortAndFilter_Filter_Null_Click

Syscmd.Filter.Null()

Common_SortAndFilter_Filter_Period_M1_Click

Syscmd.Filter.FilterByMonth(1)

Common_SortAndFilter_Filter_Period_M10_Click

Syscmd.Filter.FilterByMonth(10)

Common_SortAndFilter_Filter_Period_M11_Click

Syscmd.Filter.FilterByMonth(11)

Common_SortAndFilter_Filter_Period_M12_Click

Syscmd.Filter.FilterByMonth(12)

Common_SortAndFilter_Filter_Period_M2_Click

Syscmd.Filter.FilterByMonth(2)

Common_SortAndFilter_Filter_Period_M3_Click

Syscmd.Filter.FilterByMonth(3)

Common_SortAndFilter_Filter_Period_M4_Click

Syscmd.Filter.FilterByMonth(4)

Common_SortAndFilter_Filter_Period_M5_Click

Syscmd.Filter.FilterByMonth(5)

Common_SortAndFilter_Filter_Period_M6_Click

Syscmd.Filter.FilterByMonth(6)

Common_SortAndFilter_Filter_Period_M7_Click

Syscmd.Filter.FilterByMonth(7)

Common_SortAndFilter_Filter_Period_M8_Click

Syscmd.Filter.FilterByMonth(8)

Common_SortAndFilter_Filter_Period_M9_Click

Syscmd.Filter.FilterByMonth(9)

Common_SortAndFilter_Filter_Period_Q1_Click

Syscmd.Filter.FilterByQuarter(1)

Common_SortAndFilter_Filter_Period_Q2_Click

Syscmd.Filter.FilterByQuarter(2)

Common_SortAndFilter_Filter_Period_Q3_Click

Syscmd.Filter.FilterByQuarter(3)

Common_SortAndFilter_Filter_Period_Q4_Click

Syscmd.Filter.FilterByQuarter(4)

Common_SortAndFilter_Filter_SamePeriod_Day_Click

Syscmd.Filter.SameDay()

Common_SortAndFilter_Filter_SamePeriod_Hour_Click

Syscmd.Filter.SameHour()

Common_SortAndFilter_Filter_SamePeriod_Minute_Click

Syscmd.Filter.SameMinute()

Common_SortAndFilter_Filter_SamePeriod_Month_Click

Syscmd.Filter.SameMonth()

Common_SortAndFilter_Filter_SamePeriod_Quarter_Click

Syscmd.Filter.SameQuarter()

Common_SortAndFilter_Filter_SamePeriod_Week_Click

Syscmd.Filter.SameWeek()

Common_SortAndFilter_Filter_SamePeriod_Year_Click

Syscmd.Filter.SameYear()

Common_SortAndFilter_Filter_StringFilter_Contains_Click

Syscmd.Filter.Contains()

Common_SortAndFilter_Filter_StringFilter_EndsWith_Click

Syscmd.Filter.EndsWith()

Common_SortAndFilter_Filter_StringFilter_Like_Click

Syscmd.Filter.Like()

Common_SortAndFilter_Filter_StringFilter_NotContains_Click

Syscmd.Filter.NotContains()

Common_SortAndFilter_Filter_StringFilter_NotEndsWith_Click

Syscmd.Filter.NotEndsWith()

Common_SortAndFilter_Filter_StringFilter_NotLike_Click

Syscmd.Filter.NotLike()

Common_SortAndFilter_Filter_StringFilter_NotSame_Click

Syscmd.Filter.UnEqual(False)

Common_SortAndFilter_Filter_StringFilter_NotStartsWith_Click

Syscmd.Filter.NotStartsWith()

Common_SortAndFilter_Filter_StringFilter_Same_Click

Syscmd.Filter.Equal(False)

Common_SortAndFilter_Filter_StringFilter_StartsWith_Click

Syscmd.Filter.StartsWith()

Common_SortAndFilter_Filter_ValueFilter_Between_Click

Syscmd.Filter.Between()

Common_SortAndFilter_Filter_ValueFilter_Equal_Click

Syscmd.Filter.Equal(False)

Common_SortAndFilter_Filter_ValueFilter_Less_Click

Syscmd.Filter.LessThan(False)

Common_SortAndFilter_Filter_ValueFilter_LessOrEqual_Click

Syscmd.Filter.NotMoreThan(False)

Common_SortAndFilter_Filter_ValueFilter_More_Click

Syscmd.Filter.MoreThan(False)

Common_SortAndFilter_Filter_ValueFilter_MoreOrEqual_Click

Syscmd.Filter.NotLessThan(False)

Common_SortAndFilter_Filter_ValueFilter_MouseEnter

dim t as Table = CurrentTable
Dim m As RibbonMenu.MenuButton = e.MenuButton
Dim c As Col = t.Cols(t.ColSel)
Dim Less As RibbonMenu.Button = CType(m.Items("Less"), RibbonMenu.Button)
Dim LessOrEqual As RibbonMenu.Button = CType(m.Items("LessOrEqual"), RibbonMenu.Button)
Dim More As RibbonMenu.Button = CType(m.Items("More"), RibbonMenu.Button)
Dim MoreOrEqual As RibbonMenu.Button = CType(m.Items("MoreOrEqual"), RibbonMenu.Button)
If c.IsDate Then
    Less.Text = "早于..."
    More.Text = "晚于..."
    LessOrEqual.Text = "不晚于..."
    MoreOrEqual.Text = "不早于..."
Else If c.IsNumeric Then
    Less.Text = "小于..."
    More.Text = "大于..."
    LessOrEqual.Text = "不大于..."
    MoreOrEqual.Text = "不小于..."
End If

Common_SortAndFilter_Filter_ValueFilter_NotBetween_Click

Syscmd.Filter.NotBetween()

Common_SortAndFilter_Filter_ValueFilter_NotEqual_Click

Syscmd.Filter.Unequal(False)

Common_SortAndFilter_Filter_新建联系人1_Click

MainTable = Tables("联系人管理")
With Tables("联系人管理")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("联系人管理").Open

Common_SortAndFilter_FilterTree_SetFilterTree_Click

MainTable.SetFilterTree()

Common_SortAndFilter_FilterTree_ShowFilterTree_Click

MainTable.OpenFilterTree()

Common_SortAndFilter_Toggle_Click

Syscmd.Table.ToggleSortAndFilter()

Common_SortAndFilter_UnSort_Click

Syscmd.Sort.UnSort()

Common_Statisic_Chart_Click

CurrentTable.BuildChart()

Common_Statisic_Statistic_CrossTable_NewCrossTable_Click

Syscmd.Table.NewCrossTable()

Common_Statisic_Statistic_CrossTable_RebuildCrossTable_Click

Syscmd.Table.RebuildCrossTable()

Common_Statisic_Statistic_CrossTable_SetCrossTable_Click

Syscmd.Table.BuildCrossTable()

Common_Statisic_Statistic_GrandTotal_GrandTotal_Click

Syscmd.Table.SetGrandTotal()

Common_Statisic_Statistic_GrandTotal_ToggleGrandTotal_Click

Syscmd.Table.ToggleGrandTotal()

Common_Statisic_Statistic_GroupTable_GroupTable_Click

Syscmd.Table.BuildGroupTable()

Common_Statisic_Statistic_GroupTable_NewGroupTable_Click

Syscmd.Table.NewGroupTable()

Common_Statisic_Statistic_GroupTable_RepeatLast_Click

Syscmd.Table.RebuildGroupTable()

Common_Statisic_Statistic_Merge_SetMergeMode_Click

Syscmd.Table.SetMergeMode()

Common_Statisic_Statistic_Merge_ToggleMergeMode_Click

Syscmd.Table.ToggleMergeMode()

Common_Statisic_Statistic_Subtotal_HideTree_Click

If CurrentTable Is Nothing Then
   Return 
Else
   CurrentTable.TreeVisible = False
End IF

Common_Statisic_Statistic_Subtotal_NewSubtotalMode_Click

Syscmd.Table.NewSubtotalMode()

Common_Statisic_Statistic_Subtotal_RepeatLast_Click

Syscmd.Table.ReSubtotal()

Common_Statisic_Statistic_Subtotal_ShowTree_Click

If CurrentTable Is Nothing Then
   Return 
Else
   CurrentTable.TreeVisible = True
End IF

Common_Statisic_Statistic_Subtotal_SubtotalMode_Click

Syscmd.Table.SetSubtotalMode()

Common_Statisic_Statistic_Subtotal_ToggleSubtotalMode_Click

Syscmd.Table.ToggleSubtotalMode()

Common_Style_AlignCentre_Click

Syscmd.Column.ChangeTextAlign(TextAlignEnum.Center)

Common_Style_AlignLeft_Click

Syscmd.Column.ChangeTextAlign(TextAlignEnum.Left)

Common_Style_AlignRight_Click

Syscmd.Column.ChangeTextAlign(TextAlignEnum.Right)

Common_Style_DialogLauncherClick

Syscmd.Table.ModifyLookAndFeel()

Common_Style_Font_Click

Syscmd.Table.ChangeFont()

Common_Style_TableStyle_Click

Syscmd.Table.ModifyLookAndFeel()

Common_全局搜索_按客户搜索_Click

Dim cb As WinForm.Form = Forms("按客户搜索")
If cb.Opened = True
    cb.Close
Else
    cb.open()
End If

Common_全局搜索_按项目搜索_Click

Dim cb As WinForm.Form = Forms("按项目搜索")
If cb.Opened = True
    cb.Close
Else
    cb.open()
End If

Common_新建事件_查询库存_Click

'MainTable = Tables("库存")
'With Tables("库存")
'.AddNew
'.Position = .Rows.Count - 1
'End With
'Forms("库存").Open

Forms("查询库存").open

Common_新建事件_话题_Click

MainTable = Tables("话题")

Common_新建事件_话题_新建话题_Click

MainTable = Tables("话题")
With Tables("话题")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("话题增加").Open

Common_新建事件_技术支持_新建TMF-Pro计算书_Click

MainTable = Tables("在线系统设计")
With Tables("在线系统设计")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("在线系统设计").Open

Common_新建事件_技术支持_新建技术服务记录_Click

MainTable = Tables("技术服务")
With Tables("技术服务")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("技术服务").Open

Common_新建事件_技术支持_新增投运系统_Click

MainTable = Tables("已投运系统")
With Tables("已投运系统")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("已投运系统").Open

Common_新建事件_内部管理_新建采购订单_Click

MainTable = Tables("采购订单")
With Tables("采购订单")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("采购订单").Open

Common_新建事件_内部管理_新建订单合同_Click

MainTable = Tables("订单管理")
With Tables("订单管理")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("订单管理").Open

Common_新建事件_市场工作_新建联系人_Click

MainTable = Tables("联系人管理")
With Tables("联系人管理")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("联系人管理").Open

Common_新建事件_市场工作_新建市场活动_Click

MainTable = Tables("市场活动")
With Tables("市场活动")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("市场活动").Open

Common_新建事件_市场工作_新建市场资料_Click

MainTable = Tables("内部市场资料")
With Tables("内部市场资料")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("内部市场资料").Open

Common_新建事件_市场工作_新建行业动态_Click

MainTable = Tables("行业动态")
With Tables("行业动态")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("行业动态").Open

Common_新建事件_市场工作_新建业务机会_Click

MainTable = Tables("项目管理")
With Tables("项目管理")
    .AddNew
    .Position = .Rows.Count - 1
End With
Forms("项目管理").Open

Common_新建事件_项目销售_新建报价_Click

MainTable = Tables("报价")
With Tables("报价")
    .AddNew
    .Position = .Rows.Count - 1
End With
Forms("报价").Open

Common_新建事件_项目销售_新建订单_Click

MainTable = Tables("订单管理")
With Tables("订单管理")
    .AddNew
    .Position = .Rows.Count - 1
End With
Forms("订单管理").Open

Common_新建事件_项目销售_新建客户_Click

MainTable = Tables("客户管理")
With Tables("客户管理")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("客户管理").Open

Common_新建事件_项目销售_新建联系人_Click

MainTable = Tables("联系人管理")
With Tables("联系人管理")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("联系人管理").Open

Common_新建事件_项目销售_新建项目_Click

MainTable = Tables("项目管理")
With Tables("项目管理")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("项目管理").Open

Common_新建事件_新建日志_Click

MainTable = Tables("工作日志")
With Tables("工作日志")
.AddNew
.Position = .Rows.Count - 1
End With
Forms("工作日志").Open

Empty_Popup

'e.ContextMenu.Items("DockSetting").Visible = CurrentTable.IsRelation

Empty_UnFilter_Click

Syscmd.Filter.UnFilter()

OpenQQ_Click

If QQClient.Ready Then
    QQClient.OpenChatWindow()
Else
    Forms("登录窗口").Open()
End If

PageSetup_Click

If CurrentTable IsNot Nothing Then
   CurrentTable.PrintSetting()
End If

Preview_Click

If CurrentTable IsNot Nothing Then
   CurrentTable.Print(True, False)
End If

Print_Click

If CurrentTable IsNot Nothing Then
   CurrentTable.Print(False, True)
End If

Print_update_退出系统_Click

Dim r As DialogResult
r = MessageBox.Show("确定退出吗?", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
If r = DialogResult.Yes
    Syscmd.Project.Exit(True)
End If

Print_update_系统更新_Click

Syscmd.Project.Update(True,True)

Print_Users_Logon_Click

Forms("修改用户密码").open()

Print_报表管理_Excel报表管理_Click

Syscmd.Table.ExcelReportManager()

Print_报表管理_Excel报表管理_新建Excel报表_Click

Syscmd.Project.NewExcelTemplate()

Print_报表管理_Word报表管理_Click

Syscmd.Table.WordReportManager()

Print_报表管理_Word报表管理_新建Word报表_Click

Syscmd.Project.NewWordTemplate()

Print_常用组件_导航栏_Click

Dim cb As WinForm.Form = Forms("侧边栏模块")
If cb.Opened = True
    cb.Close
Else
    cb.open()
End If

Print_常用组件_底部栏_Click

Dim cb As WinForm.Form = Forms("底部栏")
If cb.Opened = True
    cb.Close
Else
    cb.open()
End If

Print_常用组件_内部通讯_Click

If Forms("登录窗口").Opened
    MessageBox.Show("登录窗口已经打开")
Else
    Forms("登录窗口").Open
End If

Print_加载_加载下属内容_Click

Functions.Execute("加载下属内容")

Print_加载_显示系统列_Click

Static i As Integer
If user.Type = UserTypeEnum.Developer OrElse _UserRole.Contains("管理者")
    If i Mod 2 = 0
        For Each t As Table In Tables
            t.Cols("添加时间").visible = True
            t.Cols("用户名").visible = True
            t.Cols("修改时间").visible = True
        Next
        i = i + 1
    Else
        For Each t As Table In Tables
            t.Cols("添加时间").visible = False
            t.Cols("用户名").visible = False
            t.Cols("修改时间").visible = False
        Next
        i = i + 1
    End If
Else
    If i Mod 2 = 0
        For Each t As Table In Tables
            t.Cols("添加时间").visible = True
            t.Cols("用户名").visible = True
        Next
        i = i + 1
    Else
        For Each t As Table In Tables
            t.Cols("添加时间").visible = False
            t.Cols("用户名").visible = False
        Next
        i = i + 1
    End If
End If

Print_网盘_网盘_Click

MainTable = Tables("网盘")
Forms("TMFGROUP网盘").Open()
Dim wb As WinForm.WebBrowser = Forms("TMFGROUP网盘").Controls("WebBrowser1")
wb.Address = "http://watermembrane.cn:8000/"

RecordWindow_Click

If CurrentTable.RecordGridVisible Then
    CurrentTable.CloseRecordGrid()
Else
    CurrentTable.OpenRecordGrid()
End If
e.ToggleButton.Pressed = CurrentTable.RecordGridVisible

Redo_Click

Syscmd.Edit.Redo()

Row_Height_Click

Syscmd.Row.Height()

Row_Load_Click

Syscmd.Row.Refresh()

Row_Lock_Click

Syscmd.Row.Lock()

Row_UnFilter_Click

Syscmd.Filter.UnFilter()

Row_UnLock_Click

Syscmd.Row.UnLock()

Save_Click

Ctype(ApplicationMenu.LeftItems("Save"), RibbonMenu.Button).PerformClick()

Save_Click

Syscmd.Project.Save()

SwitchUser_Click

Syscmd.Project.SwitchUser()

Undo_Click

Syscmd.Edit.Undo()

Undo_DoubleClick

Syscmd.Edit.Redo()

管理员_Export_ToAccess_Click

Syscmd.Project.QuickExport()

管理员_Export_ToExcel_Click

Syscmd.Project.ExportToExcel()

管理员_Export_ToText_Click

Syscmd.Table.ExportToText()

管理员_Print_PageSetup_Click

If CurrentTable IsNot Nothing Then
   CurrentTable.PrintSetting()
End If

管理员_Print_Preview_Click

If CurrentTable IsNot Nothing Then
   CurrentTable.Print(True, False)
End If

管理员_Print_Print_Click

If CurrentTable IsNot Nothing Then
   CurrentTable.Print(False, True)
End If

管理员_加载_加载树_Click

MainTable.OpenLoadTree()

管理员_加载_全部加载_Click

CurrentTable.DataTable.LoadFilter = ""
CurrentTable.DataTable.Load

管理员_加载_设置加载_Click

MainTable.SetLoadTree()

管理员_用户管理_Users_Click

Forms("用户管理").open()

管理员_用户管理_权限管理_Click

Forms("授权设置").open()

管理员_用户管理_压缩项目_Click

Syscmd.Project.Compact()


